function initMap(){map=new google.maps.Map(document.getElementById("map"),{center:{lat:50.4386,lng:30.5225},zoom:17,mapTypeControl:!1,scrollwheel:!1});var e="../img/map-ic.png",t=(new google.maps.Marker({position:{lat:50.4389,lng:30.52315},map:map,icon:e}),document.getElementById("style-selector-control"));map.controls[google.maps.ControlPosition.TOP_LEFT].push(t);var n=document.getElementById("style-selector");map.setOptions({styles:styles[n.value]}),n.addEventListener("change",function(){map.setOptions({styles:styles[n.value]})})}if(!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){"use strict";function n(e,t){t=t||te;var n=t.createElement("script");n.text=e,t.head.appendChild(n).parentNode.removeChild(n)}function i(e){var t=!!e&&"length"in e&&e.length,n=he.type(e);return"function"!==n&&!he.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}function a(e,t,n){return he.isFunction(t)?he.grep(e,function(e,i){return!!t.call(e,i,e)!==n}):t.nodeType?he.grep(e,function(e){return e===t!==n}):"string"!=typeof t?he.grep(e,function(e){return se.call(t,e)>-1!==n}):Se.test(t)?he.filter(t,e,n):(t=he.filter(t,e),he.grep(e,function(e){return se.call(t,e)>-1!==n&&1===e.nodeType}))}function r(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function s(e){var t={};return he.each(e.match(De)||[],function(e,n){t[n]=!0}),t}function o(e){return e}function l(e){throw e}function p(e,t,n){var i;try{e&&he.isFunction(i=e.promise)?i.call(e).done(t).fail(n):e&&he.isFunction(i=e.then)?i.call(e,t,n):t.call(void 0,e)}catch(e){n.call(void 0,e)}}function u(){te.removeEventListener("DOMContentLoaded",u),e.removeEventListener("load",u),he.ready()}function d(){this.expando=he.expando+d.uid++}function c(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:He.test(e)?JSON.parse(e):e)}function f(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Be,"-$&").toLowerCase(),n=e.getAttribute(i),"string"==typeof n){try{n=c(n)}catch(e){}$e.set(e,t,n)}else n=void 0;return n}function h(e,t,n,i){var a,r=1,s=20,o=i?function(){return i.cur()}:function(){return he.css(e,t,"")},l=o(),p=n&&n[3]||(he.cssNumber[t]?"":"px"),u=(he.cssNumber[t]||"px"!==p&&+l)&&Re.exec(he.css(e,t));if(u&&u[3]!==p){p=p||u[3],n=n||[],u=+l||1;do r=r||".5",u/=r,he.style(e,t,u+p);while(r!==(r=o()/l)&&1!==r&&--s)}return n&&(u=+u||+l||0,a=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=p,i.start=u,i.end=a)),a}function m(e){var t,n=e.ownerDocument,i=e.nodeName,a=Xe[i];return a?a:(t=n.body.appendChild(n.createElement(i)),a=he.css(t,"display"),t.parentNode.removeChild(t),"none"===a&&(a="block"),Xe[i]=a,a)}function g(e,t){for(var n,i,a=[],r=0,s=e.length;r<s;r++)i=e[r],i.style&&(n=i.style.display,t?("none"===n&&(a[r]=Oe.get(i,"display")||null,a[r]||(i.style.display="")),""===i.style.display&&qe(i)&&(a[r]=m(i))):"none"!==n&&(a[r]="none",Oe.set(i,"display",n)));for(r=0;r<s;r++)null!=a[r]&&(e[r].style.display=a[r]);return e}function v(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&he.nodeName(e,t)?he.merge([e],n):n}function y(e,t){for(var n=0,i=e.length;n<i;n++)Oe.set(e[n],"globalEval",!t||Oe.get(t[n],"globalEval"))}function w(e,t,n,i,a){for(var r,s,o,l,p,u,d=t.createDocumentFragment(),c=[],f=0,h=e.length;f<h;f++)if(r=e[f],r||0===r)if("object"===he.type(r))he.merge(c,r.nodeType?[r]:r);else if(Ue.test(r)){for(s=s||d.appendChild(t.createElement("div")),o=(Ge.exec(r)||["",""])[1].toLowerCase(),l=Ve[o]||Ve._default,s.innerHTML=l[1]+he.htmlPrefilter(r)+l[2],u=l[0];u--;)s=s.lastChild;he.merge(c,s.childNodes),s=d.firstChild,s.textContent=""}else c.push(t.createTextNode(r));for(d.textContent="",f=0;r=c[f++];)if(i&&he.inArray(r,i)>-1)a&&a.push(r);else if(p=he.contains(r.ownerDocument,r),s=v(d.appendChild(r),"script"),p&&y(s),n)for(u=0;r=s[u++];)Ye.test(r.type||"")&&n.push(r);return d}function b(){return!0}function x(){return!1}function T(){try{return te.activeElement}catch(e){}}function C(e,t,n,i,a,r){var s,o;if("object"==typeof t){"string"!=typeof n&&(i=i||n,n=void 0);for(o in t)C(e,o,n,i,t[o],r);return e}if(null==i&&null==a?(a=n,i=n=void 0):null==a&&("string"==typeof n?(a=i,i=void 0):(a=i,i=n,n=void 0)),a===!1)a=x;else if(!a)return e;return 1===r&&(s=a,a=function(e){return he().off(e),s.apply(this,arguments)},a.guid=s.guid||(s.guid=he.guid++)),e.each(function(){he.event.add(this,t,a,i,n)})}function S(e,t){return he.nodeName(e,"table")&&he.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e:e}function E(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function k(e){var t=it.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function I(e,t){var n,i,a,r,s,o,l,p;if(1===t.nodeType){if(Oe.hasData(e)&&(r=Oe.access(e),s=Oe.set(t,r),p=r.events)){delete s.handle,s.events={};for(a in p)for(n=0,i=p[a].length;n<i;n++)he.event.add(t,a,p[a][n])}$e.hasData(e)&&(o=$e.access(e),l=he.extend({},o),$e.set(t,l))}}function M(e,t){var n=t.nodeName.toLowerCase();"input"===n&&_e.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function P(e,t,i,a){t=ae.apply([],t);var r,s,o,l,p,u,d=0,c=e.length,f=c-1,h=t[0],m=he.isFunction(h);if(m||c>1&&"string"==typeof h&&!ce.checkClone&&nt.test(h))return e.each(function(n){var r=e.eq(n);m&&(t[0]=h.call(this,n,r.html())),P(r,t,i,a)});if(c&&(r=w(t,e[0].ownerDocument,!1,e,a),s=r.firstChild,1===r.childNodes.length&&(r=s),s||a)){for(o=he.map(v(r,"script"),E),l=o.length;d<c;d++)p=r,d!==f&&(p=he.clone(p,!0,!0),l&&he.merge(o,v(p,"script"))),i.call(e[d],p,d);if(l)for(u=o[o.length-1].ownerDocument,he.map(o,k),d=0;d<l;d++)p=o[d],Ye.test(p.type||"")&&!Oe.access(p,"globalEval")&&he.contains(u,p)&&(p.src?he._evalUrl&&he._evalUrl(p.src):n(p.textContent.replace(at,""),u))}return e}function D(e,t,n){for(var i,a=t?he.filter(t,e):e,r=0;null!=(i=a[r]);r++)n||1!==i.nodeType||he.cleanData(v(i)),i.parentNode&&(n&&he.contains(i.ownerDocument,i)&&y(v(i,"script")),i.parentNode.removeChild(i));return e}function z(e,t,n){var i,a,r,s,o=e.style;return n=n||ot(e),n&&(s=n.getPropertyValue(t)||n[t],""!==s||he.contains(e.ownerDocument,e)||(s=he.style(e,t)),!ce.pixelMarginRight()&&st.test(s)&&rt.test(t)&&(i=o.width,a=o.minWidth,r=o.maxWidth,o.minWidth=o.maxWidth=o.width=s,s=n.width,o.width=i,o.minWidth=a,o.maxWidth=r)),void 0!==s?s+"":s}function A(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function N(e){if(e in ct)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=dt.length;n--;)if(e=dt[n]+t,e in ct)return e}function L(e,t,n){var i=Re.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function O(e,t,n,i,a){var r,s=0;for(r=n===(i?"border":"content")?4:"width"===t?1:0;r<4;r+=2)"margin"===n&&(s+=he.css(e,n+Fe[r],!0,a)),i?("content"===n&&(s-=he.css(e,"padding"+Fe[r],!0,a)),"margin"!==n&&(s-=he.css(e,"border"+Fe[r]+"Width",!0,a))):(s+=he.css(e,"padding"+Fe[r],!0,a),"padding"!==n&&(s+=he.css(e,"border"+Fe[r]+"Width",!0,a)));return s}function $(e,t,n){var i,a=!0,r=ot(e),s="border-box"===he.css(e,"boxSizing",!1,r);if(e.getClientRects().length&&(i=e.getBoundingClientRect()[t]),i<=0||null==i){if(i=z(e,t,r),(i<0||null==i)&&(i=e.style[t]),st.test(i))return i;a=s&&(ce.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+O(e,t,n||(s?"border":"content"),a,r)+"px"}function H(e,t,n,i,a){return new H.prototype.init(e,t,n,i,a)}function B(){ht&&(e.requestAnimationFrame(B),he.fx.tick())}function j(){return e.setTimeout(function(){ft=void 0}),ft=he.now()}function R(e,t){var n,i=0,a={height:e};for(t=t?1:0;i<4;i+=2-t)n=Fe[i],a["margin"+n]=a["padding"+n]=e;return t&&(a.opacity=a.width=e),a}function F(e,t,n){for(var i,a=(X.tweeners[t]||[]).concat(X.tweeners["*"]),r=0,s=a.length;r<s;r++)if(i=a[r].call(n,t,e))return i}function q(e,t,n){var i,a,r,s,o,l,p,u,d="width"in t||"height"in t,c=this,f={},h=e.style,m=e.nodeType&&qe(e),v=Oe.get(e,"fxshow");n.queue||(s=he._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,o=s.empty.fire,s.empty.fire=function(){s.unqueued||o()}),s.unqueued++,c.always(function(){c.always(function(){s.unqueued--,he.queue(e,"fx").length||s.empty.fire()})}));for(i in t)if(a=t[i],mt.test(a)){if(delete t[i],r=r||"toggle"===a,a===(m?"hide":"show")){if("show"!==a||!v||void 0===v[i])continue;m=!0}f[i]=v&&v[i]||he.style(e,i)}if(l=!he.isEmptyObject(t),l||!he.isEmptyObject(f)){d&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],p=v&&v.display,null==p&&(p=Oe.get(e,"display")),u=he.css(e,"display"),"none"===u&&(p?u=p:(g([e],!0),p=e.style.display||p,u=he.css(e,"display"),g([e]))),("inline"===u||"inline-block"===u&&null!=p)&&"none"===he.css(e,"float")&&(l||(c.done(function(){h.display=p}),null==p&&(u=h.display,p="none"===u?"":u)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",c.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),l=!1;for(i in f)l||(v?"hidden"in v&&(m=v.hidden):v=Oe.access(e,"fxshow",{display:p}),r&&(v.hidden=!m),m&&g([e],!0),c.done(function(){m||g([e]),Oe.remove(e,"fxshow");for(i in f)he.style(e,i,f[i])})),l=F(m?v[i]:0,i,c),i in v||(v[i]=l.start,m&&(l.end=l.start,l.start=0))}}function W(e,t){var n,i,a,r,s;for(n in e)if(i=he.camelCase(n),a=t[i],r=e[n],he.isArray(r)&&(a=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),s=he.cssHooks[i],s&&"expand"in s){r=s.expand(r),delete e[i];for(n in r)n in e||(e[n]=r[n],t[n]=a)}else t[i]=a}function X(e,t,n){var i,a,r=0,s=X.prefilters.length,o=he.Deferred().always(function(){delete l.elem}),l=function(){if(a)return!1;for(var t=ft||j(),n=Math.max(0,p.startTime+p.duration-t),i=n/p.duration||0,r=1-i,s=0,l=p.tweens.length;s<l;s++)p.tweens[s].run(r);return o.notifyWith(e,[p,r,n]),r<1&&l?n:(o.resolveWith(e,[p]),!1)},p=o.promise({elem:e,props:he.extend({},t),opts:he.extend(!0,{specialEasing:{},easing:he.easing._default},n),originalProperties:t,originalOptions:n,startTime:ft||j(),duration:n.duration,tweens:[],createTween:function(t,n){var i=he.Tween(e,p.opts,t,n,p.opts.specialEasing[t]||p.opts.easing);return p.tweens.push(i),i},stop:function(t){var n=0,i=t?p.tweens.length:0;if(a)return this;for(a=!0;n<i;n++)p.tweens[n].run(1);return t?(o.notifyWith(e,[p,1,0]),o.resolveWith(e,[p,t])):o.rejectWith(e,[p,t]),this}}),u=p.props;for(W(u,p.opts.specialEasing);r<s;r++)if(i=X.prefilters[r].call(p,e,u,p.opts))return he.isFunction(i.stop)&&(he._queueHooks(p.elem,p.opts.queue).stop=he.proxy(i.stop,i)),i;return he.map(u,F,p),he.isFunction(p.opts.start)&&p.opts.start.call(e,p),he.fx.timer(he.extend(l,{elem:e,anim:p,queue:p.opts.queue})),p.progress(p.opts.progress).done(p.opts.done,p.opts.complete).fail(p.opts.fail).always(p.opts.always)}function _(e){var t=e.match(De)||[];return t.join(" ")}function G(e){return e.getAttribute&&e.getAttribute("class")||""}function Y(e,t,n,i){var a;if(he.isArray(t))he.each(t,function(t,a){n||kt.test(e)?i(e,a):Y(e+"["+("object"==typeof a&&null!=a?t:"")+"]",a,n,i)});else if(n||"object"!==he.type(t))i(e,t);else for(a in t)Y(e+"["+a+"]",t[a],n,i)}function V(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,a=0,r=t.toLowerCase().match(De)||[];if(he.isFunction(n))for(;i=r[a++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function U(e,t,n,i){function a(o){var l;return r[o]=!0,he.each(e[o]||[],function(e,o){var p=o(t,n,i);return"string"!=typeof p||s||r[p]?s?!(l=p):void 0:(t.dataTypes.unshift(p),a(p),!1)}),l}var r={},s=e===Bt;return a(t.dataTypes[0])||!r["*"]&&a("*")}function Q(e,t){var n,i,a=he.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((a[n]?e:i||(i={}))[n]=t[n]);return i&&he.extend(!0,e,i),e}function K(e,t,n){for(var i,a,r,s,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(a in o)if(o[a]&&o[a].test(i)){l.unshift(a);break}if(l[0]in n)r=l[0];else{for(a in n){if(!l[0]||e.converters[a+" "+l[0]]){r=a;break}s||(s=a)}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}function Z(e,t,n,i){var a,r,s,o,l,p={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)p[s.toLowerCase()]=e.converters[s];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(s=p[l+" "+r]||p["* "+r],!s)for(a in p)if(o=a.split(" "),o[1]===r&&(s=p[l+" "+o[0]]||p["* "+o[0]])){s===!0?s=p[a]:p[a]!==!0&&(r=o[0],u.unshift(o[1]));break}if(s!==!0)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}function J(e){return he.isWindow(e)?e:9===e.nodeType&&e.defaultView}var ee=[],te=e.document,ne=Object.getPrototypeOf,ie=ee.slice,ae=ee.concat,re=ee.push,se=ee.indexOf,oe={},le=oe.toString,pe=oe.hasOwnProperty,ue=pe.toString,de=ue.call(Object),ce={},fe="3.1.1",he=function(e,t){return new he.fn.init(e,t)},me=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ge=/^-ms-/,ve=/-([a-z])/g,ye=function(e,t){return t.toUpperCase()};he.fn=he.prototype={jquery:fe,constructor:he,length:0,toArray:function(){return ie.call(this)},get:function(e){return null==e?ie.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=he.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return he.each(this,e)},map:function(e){return this.pushStack(he.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(ie.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:re,sort:ee.sort,splice:ee.splice},he.extend=he.fn.extend=function(){var e,t,n,i,a,r,s=arguments[0]||{},o=1,l=arguments.length,p=!1;for("boolean"==typeof s&&(p=s,s=arguments[o]||{},o++),"object"==typeof s||he.isFunction(s)||(s={}),o===l&&(s=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)n=s[t],i=e[t],s!==i&&(p&&i&&(he.isPlainObject(i)||(a=he.isArray(i)))?(a?(a=!1,r=n&&he.isArray(n)?n:[]):r=n&&he.isPlainObject(n)?n:{},s[t]=he.extend(p,r,i)):void 0!==i&&(s[t]=i));return s},he.extend({expando:"jQuery"+(fe+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===he.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=he.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==le.call(e)||(t=ne(e))&&(n=pe.call(t,"constructor")&&t.constructor,"function"!=typeof n||ue.call(n)!==de))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?oe[le.call(e)]||"object":typeof e},globalEval:function(e){n(e)},camelCase:function(e){return e.replace(ge,"ms-").replace(ve,ye)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,a=0;if(i(e))for(n=e.length;a<n&&t.call(e[a],a,e[a])!==!1;a++);else for(a in e)if(t.call(e[a],a,e[a])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(me,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?he.merge(n,"string"==typeof e?[e]:e):re.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:se.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,a=e.length;i<n;i++)e[a++]=t[i];return e.length=a,e},grep:function(e,t,n){for(var i,a=[],r=0,s=e.length,o=!n;r<s;r++)i=!t(e[r],r),i!==o&&a.push(e[r]);return a},map:function(e,t,n){var a,r,s=0,o=[];if(i(e))for(a=e.length;s<a;s++)r=t(e[s],s,n),null!=r&&o.push(r);else for(s in e)r=t(e[s],s,n),null!=r&&o.push(r);return ae.apply([],o)},guid:1,proxy:function(e,t){var n,i,a;if("string"==typeof t&&(n=e[t],t=e,e=n),he.isFunction(e))return i=ie.call(arguments,2),a=function(){return e.apply(t||this,i.concat(ie.call(arguments)))},a.guid=e.guid=e.guid||he.guid++,a},now:Date.now,support:ce}),"function"==typeof Symbol&&(he.fn[Symbol.iterator]=ee[Symbol.iterator]),he.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){oe["[object "+t+"]"]=t.toLowerCase()});var we=function(e){function t(e,t,n,i){var a,r,s,o,l,p,u,c=t&&t.ownerDocument,h=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==h&&9!==h&&11!==h)return n;if(!i&&((t?t.ownerDocument||t:F)!==N&&A(t),t=t||N,O)){if(11!==h&&(l=ve.exec(e)))if(a=l[1]){if(9===h){if(!(s=t.getElementById(a)))return n;if(s.id===a)return n.push(s),n}else if(c&&(s=c.getElementById(a))&&j(t,s)&&s.id===a)return n.push(s),n}else{if(l[2])return Z.apply(n,t.getElementsByTagName(e)),n;if((a=l[3])&&T.getElementsByClassName&&t.getElementsByClassName)return Z.apply(n,t.getElementsByClassName(a)),n}if(T.qsa&&!G[e+" "]&&(!$||!$.test(e))){if(1!==h)c=t,u=e;else if("object"!==t.nodeName.toLowerCase()){for((o=t.getAttribute("id"))?o=o.replace(xe,Te):t.setAttribute("id",o=R),p=k(e),r=p.length;r--;)p[r]="#"+o+" "+f(p[r]);u=p.join(","),c=ye.test(e)&&d(t.parentNode)||t}if(u)try{return Z.apply(n,c.querySelectorAll(u)),n}catch(e){}finally{o===R&&t.removeAttribute("id")}}}return M(e.replace(oe,"$1"),t,n,i)}function n(){function e(n,i){return t.push(n+" ")>C.cacheLength&&delete e[t.shift()],e[n+" "]=i}var t=[];return e}function i(e){return e[R]=!0,e}function a(e){var t=N.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function r(e,t){for(var n=e.split("|"),i=n.length;i--;)C.attrHandle[n[i]]=t}function s(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function o(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function p(e){return function(t){return"form"in t?t.parentNode&&t.disabled===!1?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&Se(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function u(e){return i(function(t){return t=+t,i(function(n,i){for(var a,r=e([],n.length,t),s=r.length;s--;)n[a=r[s]]&&(n[a]=!(i[a]=n[a]))})})}function d(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function c(){}function f(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function h(e,t,n){var i=t.dir,a=t.next,r=a||i,s=n&&"parentNode"===r,o=W++;return t.first?function(t,n,a){for(;t=t[i];)if(1===t.nodeType||s)return e(t,n,a);return!1}:function(t,n,l){var p,u,d,c=[q,o];if(l){for(;t=t[i];)if((1===t.nodeType||s)&&e(t,n,l))return!0}else for(;t=t[i];)if(1===t.nodeType||s)if(d=t[R]||(t[R]={}),u=d[t.uniqueID]||(d[t.uniqueID]={}),a&&a===t.nodeName.toLowerCase())t=t[i]||t;else{if((p=u[r])&&p[0]===q&&p[1]===o)return c[2]=p[2];if(u[r]=c,c[2]=e(t,n,l))return!0}return!1}}function m(e){return e.length>1?function(t,n,i){for(var a=e.length;a--;)if(!e[a](t,n,i))return!1;return!0}:e[0]}function g(e,n,i){for(var a=0,r=n.length;a<r;a++)t(e,n[a],i);return i}function v(e,t,n,i,a){for(var r,s=[],o=0,l=e.length,p=null!=t;o<l;o++)(r=e[o])&&(n&&!n(r,i,a)||(s.push(r),p&&t.push(o)));return s}function y(e,t,n,a,r,s){return a&&!a[R]&&(a=y(a)),r&&!r[R]&&(r=y(r,s)),i(function(i,s,o,l){var p,u,d,c=[],f=[],h=s.length,m=i||g(t||"*",o.nodeType?[o]:o,[]),y=!e||!i&&t?m:v(m,c,e,o,l),w=n?r||(i?e:h||a)?[]:s:y;if(n&&n(y,w,o,l),a)for(p=v(w,f),a(p,[],o,l),u=p.length;u--;)(d=p[u])&&(w[f[u]]=!(y[f[u]]=d));if(i){if(r||e){if(r){for(p=[],u=w.length;u--;)(d=w[u])&&p.push(y[u]=d);r(null,w=[],p,l)}for(u=w.length;u--;)(d=w[u])&&(p=r?ee(i,d):c[u])>-1&&(i[p]=!(s[p]=d))}}else w=v(w===s?w.splice(h,w.length):w),r?r(null,s,w,l):Z.apply(s,w)})}function w(e){for(var t,n,i,a=e.length,r=C.relative[e[0].type],s=r||C.relative[" "],o=r?1:0,l=h(function(e){return e===t},s,!0),p=h(function(e){return ee(t,e)>-1},s,!0),u=[function(e,n,i){var a=!r&&(i||n!==P)||((t=n).nodeType?l(e,n,i):p(e,n,i));return t=null,a}];o<a;o++)if(n=C.relative[e[o].type])u=[h(m(u),n)];else{if(n=C.filter[e[o].type].apply(null,e[o].matches),n[R]){for(i=++o;i<a&&!C.relative[e[i].type];i++);return y(o>1&&m(u),o>1&&f(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(oe,"$1"),n,o<i&&w(e.slice(o,i)),i<a&&w(e=e.slice(i)),i<a&&f(e))}u.push(n)}return m(u)}function b(e,n){var a=n.length>0,r=e.length>0,s=function(i,s,o,l,p){var u,d,c,f=0,h="0",m=i&&[],g=[],y=P,w=i||r&&C.find.TAG("*",p),b=q+=null==y?1:Math.random()||.1,x=w.length;for(p&&(P=s===N||s||p);h!==x&&null!=(u=w[h]);h++){if(r&&u){for(d=0,s||u.ownerDocument===N||(A(u),o=!O);c=e[d++];)if(c(u,s||N,o)){l.push(u);break}p&&(q=b)}a&&((u=!c&&u)&&f--,i&&m.push(u))}if(f+=h,a&&h!==f){for(d=0;c=n[d++];)c(m,g,s,o);if(i){if(f>0)for(;h--;)m[h]||g[h]||(g[h]=Q.call(l));g=v(g)}Z.apply(l,g),p&&!i&&g.length>0&&f+n.length>1&&t.uniqueSort(l)}return p&&(q=b,P=y),m};return a?i(s):s}var x,T,C,S,E,k,I,M,P,D,z,A,N,L,O,$,H,B,j,R="sizzle"+1*new Date,F=e.document,q=0,W=0,X=n(),_=n(),G=n(),Y=function(e,t){return e===t&&(z=!0),0},V={}.hasOwnProperty,U=[],Q=U.pop,K=U.push,Z=U.push,J=U.slice,ee=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",ie="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",ae="\\["+ne+"*("+ie+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ne+"*\\]",re=":("+ie+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ae+")*)|.*)\\)|)",se=new RegExp(ne+"+","g"),oe=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),pe=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ue=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),de=new RegExp(re),ce=new RegExp("^"+ie+"$"),fe={ID:new RegExp("^#("+ie+")"),CLASS:new RegExp("^\\.("+ie+")"),TAG:new RegExp("^("+ie+"|[*])"),ATTR:new RegExp("^"+ae),PSEUDO:new RegExp("^"+re),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},he=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,ge=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,we=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),be=function(e,t,n){var i="0x"+t-65536;return i!==i||n?t:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},xe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,Te=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},Ce=function(){A()},Se=h(function(e){return e.disabled===!0&&("form"in e||"label"in e)},{dir:"parentNode",next:"legend"});try{Z.apply(U=J.call(F.childNodes),F.childNodes),U[F.childNodes.length].nodeType}catch(e){Z={apply:U.length?function(e,t){K.apply(e,J.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}T=t.support={},E=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},A=t.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:F;return i!==N&&9===i.nodeType&&i.documentElement?(N=i,L=N.documentElement,O=!E(N),F!==N&&(n=N.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",Ce,!1):n.attachEvent&&n.attachEvent("onunload",Ce)),T.attributes=a(function(e){return e.className="i",!e.getAttribute("className")}),T.getElementsByTagName=a(function(e){return e.appendChild(N.createComment("")),!e.getElementsByTagName("*").length}),T.getElementsByClassName=ge.test(N.getElementsByClassName),T.getById=a(function(e){return L.appendChild(e).id=R,!N.getElementsByName||!N.getElementsByName(R).length}),T.getById?(C.filter.ID=function(e){var t=e.replace(we,be);return function(e){return e.getAttribute("id")===t}},C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&O){var n=t.getElementById(e);return n?[n]:[]}}):(C.filter.ID=function(e){var t=e.replace(we,be);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&O){var n,i,a,r=t.getElementById(e);if(r){if(n=r.getAttributeNode("id"),n&&n.value===e)return[r];for(a=t.getElementsByName(e),i=0;r=a[i++];)if(n=r.getAttributeNode("id"),n&&n.value===e)return[r]}return[]}}),C.find.TAG=T.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):T.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],a=0,r=t.getElementsByTagName(e);if("*"===e){for(;n=r[a++];)1===n.nodeType&&i.push(n);return i}return r},C.find.CLASS=T.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&O)return t.getElementsByClassName(e)},H=[],$=[],(T.qsa=ge.test(N.querySelectorAll))&&(a(function(e){L.appendChild(e).innerHTML="<a id='"+R+"'></a><select id='"+R+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&$.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||$.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+R+"-]").length||$.push("~="),e.querySelectorAll(":checked").length||$.push(":checked"),e.querySelectorAll("a#"+R+"+*").length||$.push(".#.+[+~]")}),a(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=N.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&$.push("name"+ne+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&$.push(":enabled",":disabled"),L.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&$.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),$.push(",.*:")})),(T.matchesSelector=ge.test(B=L.matches||L.webkitMatchesSelector||L.mozMatchesSelector||L.oMatchesSelector||L.msMatchesSelector))&&a(function(e){T.disconnectedMatch=B.call(e,"*"),B.call(e,"[s!='']:x"),H.push("!=",re)}),$=$.length&&new RegExp($.join("|")),H=H.length&&new RegExp(H.join("|")),t=ge.test(L.compareDocumentPosition),j=t||ge.test(L.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},Y=t?function(e,t){if(e===t)return z=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!T.sortDetached&&t.compareDocumentPosition(e)===n?e===N||e.ownerDocument===F&&j(F,e)?-1:t===N||t.ownerDocument===F&&j(F,t)?1:D?ee(D,e)-ee(D,t):0:4&n?-1:1)}:function(e,t){if(e===t)return z=!0,0;var n,i=0,a=e.parentNode,r=t.parentNode,o=[e],l=[t];if(!a||!r)return e===N?-1:t===N?1:a?-1:r?1:D?ee(D,e)-ee(D,t):0;if(a===r)return s(e,t);for(n=e;n=n.parentNode;)o.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;o[i]===l[i];)i++;return i?s(o[i],l[i]):o[i]===F?-1:l[i]===F?1:0},N):N},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==N&&A(e),n=n.replace(ue,"='$1']"),T.matchesSelector&&O&&!G[n+" "]&&(!H||!H.test(n))&&(!$||!$.test(n)))try{var i=B.call(e,n);if(i||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){}return t(n,N,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==N&&A(e),j(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==N&&A(e);var n=C.attrHandle[t.toLowerCase()],i=n&&V.call(C.attrHandle,t.toLowerCase())?n(e,t,!O):void 0;return void 0!==i?i:T.attributes||!O?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.escape=function(e){return(e+"").replace(xe,Te)},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],i=0,a=0;if(z=!T.detectDuplicates,D=!T.sortStable&&e.slice(0),e.sort(Y),z){for(;t=e[a++];)t===e[a]&&(i=n.push(a));for(;i--;)e.splice(n[i],1)}return D=null,e},S=t.getText=function(e){var t,n="",i=0,a=e.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=S(e)}else if(3===a||4===a)return e.nodeValue}else for(;t=e[i++];)n+=S(t);return n},C=t.selectors={cacheLength:50,createPseudo:i,match:fe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(we,be),e[3]=(e[3]||e[4]||e[5]||"").replace(we,be),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return fe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&de.test(n)&&(t=k(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(we,be).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=X[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&X(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,i){return function(a){var r=t.attr(a,e);return null==r?"!="===n:!n||(r+="","="===n?r===i:"!="===n?r!==i:"^="===n?i&&0===r.indexOf(i):"*="===n?i&&r.indexOf(i)>-1:"$="===n?i&&r.slice(-i.length)===i:"~="===n?(" "+r.replace(se," ")+" ").indexOf(i)>-1:"|="===n&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,n,i,a){var r="nth"!==e.slice(0,3),s="last"!==e.slice(-4),o="of-type"===t;return 1===i&&0===a?function(e){return!!e.parentNode}:function(t,n,l){var p,u,d,c,f,h,m=r!==s?"nextSibling":"previousSibling",g=t.parentNode,v=o&&t.nodeName.toLowerCase(),y=!l&&!o,w=!1;if(g){if(r){for(;m;){for(c=t;c=c[m];)if(o?c.nodeName.toLowerCase()===v:1===c.nodeType)return!1;h=m="only"===e&&!h&&"nextSibling"}return!0}if(h=[s?g.firstChild:g.lastChild],s&&y){for(c=g,d=c[R]||(c[R]={}),u=d[c.uniqueID]||(d[c.uniqueID]={}),p=u[e]||[],f=p[0]===q&&p[1],w=f&&p[2],c=f&&g.childNodes[f];c=++f&&c&&c[m]||(w=f=0)||h.pop();)if(1===c.nodeType&&++w&&c===t){u[e]=[q,f,w];break}}else if(y&&(c=t,d=c[R]||(c[R]={}),u=d[c.uniqueID]||(d[c.uniqueID]={}),p=u[e]||[],f=p[0]===q&&p[1],w=f),w===!1)for(;(c=++f&&c&&c[m]||(w=f=0)||h.pop())&&((o?c.nodeName.toLowerCase()!==v:1!==c.nodeType)||!++w||(y&&(d=c[R]||(c[R]={}),u=d[c.uniqueID]||(d[c.uniqueID]={}),u[e]=[q,w]),c!==t)););return w-=a,w===i||w%i===0&&w/i>=0}}},PSEUDO:function(e,n){var a,r=C.pseudos[e]||C.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return r[R]?r(n):r.length>1?(a=[e,e,"",n],C.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,a=r(e,n),s=a.length;s--;)i=ee(e,a[s]),e[i]=!(t[i]=a[s])}):function(e){return r(e,0,a)}):r}},pseudos:{not:i(function(e){var t=[],n=[],a=I(e.replace(oe,"$1"));return a[R]?i(function(e,t,n,i){for(var r,s=a(e,null,i,[]),o=e.length;o--;)(r=s[o])&&(e[o]=!(t[o]=r))}):function(e,i,r){
return t[0]=e,a(t,null,r,n),t[0]=null,!n.pop()}}),has:i(function(e){return function(n){return t(e,n).length>0}}),contains:i(function(e){return e=e.replace(we,be),function(t){return(t.textContent||t.innerText||S(t)).indexOf(e)>-1}}),lang:i(function(e){return ce.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(we,be).toLowerCase(),function(t){var n;do if(n=O?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===L},focus:function(e){return e===N.activeElement&&(!N.hasFocus||N.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:p(!1),disabled:p(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!C.pseudos.empty(e)},header:function(e){return me.test(e.nodeName)},input:function(e){return he.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:u(function(){return[0]}),last:u(function(e,t){return[t-1]}),eq:u(function(e,t,n){return[n<0?n+t:n]}),even:u(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:u(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:u(function(e,t,n){for(var i=n<0?n+t:n;--i>=0;)e.push(i);return e}),gt:u(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}},C.pseudos.nth=C.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})C.pseudos[x]=o(x);for(x in{submit:!0,reset:!0})C.pseudos[x]=l(x);return c.prototype=C.filters=C.pseudos,C.setFilters=new c,k=t.tokenize=function(e,n){var i,a,r,s,o,l,p,u=_[e+" "];if(u)return n?0:u.slice(0);for(o=e,l=[],p=C.preFilter;o;){i&&!(a=le.exec(o))||(a&&(o=o.slice(a[0].length)||o),l.push(r=[])),i=!1,(a=pe.exec(o))&&(i=a.shift(),r.push({value:i,type:a[0].replace(oe," ")}),o=o.slice(i.length));for(s in C.filter)!(a=fe[s].exec(o))||p[s]&&!(a=p[s](a))||(i=a.shift(),r.push({value:i,type:s,matches:a}),o=o.slice(i.length));if(!i)break}return n?o.length:o?t.error(e):_(e,l).slice(0)},I=t.compile=function(e,t){var n,i=[],a=[],r=G[e+" "];if(!r){for(t||(t=k(e)),n=t.length;n--;)r=w(t[n]),r[R]?i.push(r):a.push(r);r=G(e,b(a,i)),r.selector=e}return r},M=t.select=function(e,t,n,i){var a,r,s,o,l,p="function"==typeof e&&e,u=!i&&k(e=p.selector||e);if(n=n||[],1===u.length){if(r=u[0]=u[0].slice(0),r.length>2&&"ID"===(s=r[0]).type&&9===t.nodeType&&O&&C.relative[r[1].type]){if(t=(C.find.ID(s.matches[0].replace(we,be),t)||[])[0],!t)return n;p&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(a=fe.needsContext.test(e)?0:r.length;a--&&(s=r[a],!C.relative[o=s.type]);)if((l=C.find[o])&&(i=l(s.matches[0].replace(we,be),ye.test(r[0].type)&&d(t.parentNode)||t))){if(r.splice(a,1),e=i.length&&f(r),!e)return Z.apply(n,i),n;break}}return(p||I(e,u))(i,t,!O,n,!t||ye.test(e)&&d(t.parentNode)||t),n},T.sortStable=R.split("").sort(Y).join("")===R,T.detectDuplicates=!!z,A(),T.sortDetached=a(function(e){return 1&e.compareDocumentPosition(N.createElement("fieldset"))}),a(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||r("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),T.attributes&&a(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||r("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),a(function(e){return null==e.getAttribute("disabled")})||r(te,function(e,t,n){var i;if(!n)return e[t]===!0?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);he.find=we,he.expr=we.selectors,he.expr[":"]=he.expr.pseudos,he.uniqueSort=he.unique=we.uniqueSort,he.text=we.getText,he.isXMLDoc=we.isXML,he.contains=we.contains,he.escapeSelector=we.escape;var be=function(e,t,n){for(var i=[],a=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(a&&he(e).is(n))break;i.push(e)}return i},xe=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},Te=he.expr.match.needsContext,Ce=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,Se=/^.[^:#\[\.,]*$/;he.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?he.find.matchesSelector(i,e)?[i]:[]:he.find.matches(e,he.grep(t,function(e){return 1===e.nodeType}))},he.fn.extend({find:function(e){var t,n,i=this.length,a=this;if("string"!=typeof e)return this.pushStack(he(e).filter(function(){for(t=0;t<i;t++)if(he.contains(a[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)he.find(e,a[t],n);return i>1?he.uniqueSort(n):n},filter:function(e){return this.pushStack(a(this,e||[],!1))},not:function(e){return this.pushStack(a(this,e||[],!0))},is:function(e){return!!a(this,"string"==typeof e&&Te.test(e)?he(e):e||[],!1).length}});var Ee,ke=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Ie=he.fn.init=function(e,t,n){var i,a;if(!e)return this;if(n=n||Ee,"string"==typeof e){if(i="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:ke.exec(e),!i||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof he?t[0]:t,he.merge(this,he.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:te,!0)),Ce.test(i[1])&&he.isPlainObject(t))for(i in t)he.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return a=te.getElementById(i[2]),a&&(this[0]=a,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):he.isFunction(e)?void 0!==n.ready?n.ready(e):e(he):he.makeArray(e,this)};Ie.prototype=he.fn,Ee=he(te);var Me=/^(?:parents|prev(?:Until|All))/,Pe={children:!0,contents:!0,next:!0,prev:!0};he.fn.extend({has:function(e){var t=he(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(he.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,a=this.length,r=[],s="string"!=typeof e&&he(e);if(!Te.test(e))for(;i<a;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&he.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(r.length>1?he.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?se.call(he(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(he.uniqueSort(he.merge(this.get(),he(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),he.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return be(e,"parentNode")},parentsUntil:function(e,t,n){return be(e,"parentNode",n)},next:function(e){return r(e,"nextSibling")},prev:function(e){return r(e,"previousSibling")},nextAll:function(e){return be(e,"nextSibling")},prevAll:function(e){return be(e,"previousSibling")},nextUntil:function(e,t,n){return be(e,"nextSibling",n)},prevUntil:function(e,t,n){return be(e,"previousSibling",n)},siblings:function(e){return xe((e.parentNode||{}).firstChild,e)},children:function(e){return xe(e.firstChild)},contents:function(e){return e.contentDocument||he.merge([],e.childNodes)}},function(e,t){he.fn[e]=function(n,i){var a=he.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(a=he.filter(i,a)),this.length>1&&(Pe[e]||he.uniqueSort(a),Me.test(e)&&a.reverse()),this.pushStack(a)}});var De=/[^\x20\t\r\n\f]+/g;he.Callbacks=function(e){e="string"==typeof e?s(e):he.extend({},e);var t,n,i,a,r=[],o=[],l=-1,p=function(){for(a=e.once,i=t=!0;o.length;l=-1)for(n=o.shift();++l<r.length;)r[l].apply(n[0],n[1])===!1&&e.stopOnFalse&&(l=r.length,n=!1);e.memory||(n=!1),t=!1,a&&(r=n?[]:"")},u={add:function(){return r&&(n&&!t&&(l=r.length-1,o.push(n)),function t(n){he.each(n,function(n,i){he.isFunction(i)?e.unique&&u.has(i)||r.push(i):i&&i.length&&"string"!==he.type(i)&&t(i)})}(arguments),n&&!t&&p()),this},remove:function(){return he.each(arguments,function(e,t){for(var n;(n=he.inArray(t,r,n))>-1;)r.splice(n,1),n<=l&&l--}),this},has:function(e){return e?he.inArray(e,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return a=o=[],r=n="",this},disabled:function(){return!r},lock:function(){return a=o=[],n||t||(r=n=""),this},locked:function(){return!!a},fireWith:function(e,n){return a||(n=n||[],n=[e,n.slice?n.slice():n],o.push(n),t||p()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!i}};return u},he.extend({Deferred:function(t){var n=[["notify","progress",he.Callbacks("memory"),he.Callbacks("memory"),2],["resolve","done",he.Callbacks("once memory"),he.Callbacks("once memory"),0,"resolved"],["reject","fail",he.Callbacks("once memory"),he.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return r.done(arguments).fail(arguments),this},catch:function(e){return a.then(null,e)},pipe:function(){var e=arguments;return he.Deferred(function(t){he.each(n,function(n,i){var a=he.isFunction(e[i[4]])&&e[i[4]];r[i[1]](function(){var e=a&&a.apply(this,arguments);e&&he.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[i[0]+"With"](this,a?[e]:arguments)})}),e=null}).promise()},then:function(t,i,a){function r(t,n,i,a){return function(){var p=this,u=arguments,d=function(){var e,d;if(!(t<s)){if(e=i.apply(p,u),e===n.promise())throw new TypeError("Thenable self-resolution");d=e&&("object"==typeof e||"function"==typeof e)&&e.then,he.isFunction(d)?a?d.call(e,r(s,n,o,a),r(s,n,l,a)):(s++,d.call(e,r(s,n,o,a),r(s,n,l,a),r(s,n,o,n.notifyWith))):(i!==o&&(p=void 0,u=[e]),(a||n.resolveWith)(p,u))}},c=a?d:function(){try{d()}catch(e){he.Deferred.exceptionHook&&he.Deferred.exceptionHook(e,c.stackTrace),t+1>=s&&(i!==l&&(p=void 0,u=[e]),n.rejectWith(p,u))}};t?c():(he.Deferred.getStackHook&&(c.stackTrace=he.Deferred.getStackHook()),e.setTimeout(c))}}var s=0;return he.Deferred(function(e){n[0][3].add(r(0,e,he.isFunction(a)?a:o,e.notifyWith)),n[1][3].add(r(0,e,he.isFunction(t)?t:o)),n[2][3].add(r(0,e,he.isFunction(i)?i:l))}).promise()},promise:function(e){return null!=e?he.extend(e,a):a}},r={};return he.each(n,function(e,t){var s=t[2],o=t[5];a[t[1]]=s.add,o&&s.add(function(){i=o},n[3-e][2].disable,n[0][2].lock),s.add(t[3].fire),r[t[0]]=function(){return r[t[0]+"With"](this===r?void 0:this,arguments),this},r[t[0]+"With"]=s.fireWith}),a.promise(r),t&&t.call(r,r),r},when:function(e){var t=arguments.length,n=t,i=Array(n),a=ie.call(arguments),r=he.Deferred(),s=function(e){return function(n){i[e]=this,a[e]=arguments.length>1?ie.call(arguments):n,--t||r.resolveWith(i,a)}};if(t<=1&&(p(e,r.done(s(n)).resolve,r.reject),"pending"===r.state()||he.isFunction(a[n]&&a[n].then)))return r.then();for(;n--;)p(a[n],s(n),r.reject);return r.promise()}});var ze=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;he.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&ze.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,n)},he.readyException=function(t){e.setTimeout(function(){throw t})};var Ae=he.Deferred();he.fn.ready=function(e){return Ae.then(e).catch(function(e){he.readyException(e)}),this},he.extend({isReady:!1,readyWait:1,holdReady:function(e){e?he.readyWait++:he.ready(!0)},ready:function(e){(e===!0?--he.readyWait:he.isReady)||(he.isReady=!0,e!==!0&&--he.readyWait>0||Ae.resolveWith(te,[he]))}}),he.ready.then=Ae.then,"complete"===te.readyState||"loading"!==te.readyState&&!te.documentElement.doScroll?e.setTimeout(he.ready):(te.addEventListener("DOMContentLoaded",u),e.addEventListener("load",u));var Ne=function(e,t,n,i,a,r,s){var o=0,l=e.length,p=null==n;if("object"===he.type(n)){a=!0;for(o in n)Ne(e,t,o,n[o],!0,r,s)}else if(void 0!==i&&(a=!0,he.isFunction(i)||(s=!0),p&&(s?(t.call(e,i),t=null):(p=t,t=function(e,t,n){return p.call(he(e),n)})),t))for(;o<l;o++)t(e[o],n,s?i:i.call(e[o],o,t(e[o],n)));return a?e:p?t.call(e):l?t(e[0],n):r},Le=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};d.uid=1,d.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Le(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,a=this.cache(e);if("string"==typeof t)a[he.camelCase(t)]=n;else for(i in t)a[he.camelCase(i)]=t[i];return a},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][he.camelCase(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){he.isArray(t)?t=t.map(he.camelCase):(t=he.camelCase(t),t=t in i?[t]:t.match(De)||[]),n=t.length;for(;n--;)delete i[t[n]]}(void 0===t||he.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!he.isEmptyObject(t)}};var Oe=new d,$e=new d,He=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Be=/[A-Z]/g;he.extend({hasData:function(e){return $e.hasData(e)||Oe.hasData(e)},data:function(e,t,n){return $e.access(e,t,n)},removeData:function(e,t){$e.remove(e,t)},_data:function(e,t,n){return Oe.access(e,t,n)},_removeData:function(e,t){Oe.remove(e,t)}}),he.fn.extend({data:function(e,t){var n,i,a,r=this[0],s=r&&r.attributes;if(void 0===e){if(this.length&&(a=$e.get(r),1===r.nodeType&&!Oe.get(r,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&(i=s[n].name,0===i.indexOf("data-")&&(i=he.camelCase(i.slice(5)),f(r,i,a[i])));Oe.set(r,"hasDataAttrs",!0)}return a}return"object"==typeof e?this.each(function(){$e.set(this,e)}):Ne(this,function(t){var n;if(r&&void 0===t){if(n=$e.get(r,e),void 0!==n)return n;if(n=f(r,e),void 0!==n)return n}else this.each(function(){$e.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){$e.remove(this,e)})}}),he.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=Oe.get(e,t),n&&(!i||he.isArray(n)?i=Oe.access(e,t,he.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=he.queue(e,t),i=n.length,a=n.shift(),r=he._queueHooks(e,t),s=function(){he.dequeue(e,t)};"inprogress"===a&&(a=n.shift(),i--),a&&("fx"===t&&n.unshift("inprogress"),delete r.stop,a.call(e,s,r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Oe.get(e,n)||Oe.access(e,n,{empty:he.Callbacks("once memory").add(function(){Oe.remove(e,[t+"queue",n])})})}}),he.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?he.queue(this[0],e):void 0===t?this:this.each(function(){var n=he.queue(this,e,t);he._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&he.dequeue(this,e)})},dequeue:function(e){return this.each(function(){he.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,a=he.Deferred(),r=this,s=this.length,o=function(){--i||a.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)n=Oe.get(r[s],e+"queueHooks"),n&&n.empty&&(i++,n.empty.add(o));return o(),a.promise(t)}});var je=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Re=new RegExp("^(?:([+-])=|)("+je+")([a-z%]*)$","i"),Fe=["Top","Right","Bottom","Left"],qe=function(e,t){return e=t||e,"none"===e.style.display||""===e.style.display&&he.contains(e.ownerDocument,e)&&"none"===he.css(e,"display")},We=function(e,t,n,i){var a,r,s={};for(r in t)s[r]=e.style[r],e.style[r]=t[r];a=n.apply(e,i||[]);for(r in t)e.style[r]=s[r];return a},Xe={};he.fn.extend({show:function(){return g(this,!0)},hide:function(){return g(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){qe(this)?he(this).show():he(this).hide()})}});var _e=/^(?:checkbox|radio)$/i,Ge=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ye=/^$|\/(?:java|ecma)script/i,Ve={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Ve.optgroup=Ve.option,Ve.tbody=Ve.tfoot=Ve.colgroup=Ve.caption=Ve.thead,Ve.th=Ve.td;var Ue=/<|&#?\w+;/;!function(){var e=te.createDocumentFragment(),t=e.appendChild(te.createElement("div")),n=te.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),ce.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",ce.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Qe=te.documentElement,Ke=/^key/,Ze=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Je=/^([^.]*)(?:\.(.+)|)/;he.event={global:{},add:function(e,t,n,i,a){var r,s,o,l,p,u,d,c,f,h,m,g=Oe.get(e);if(g)for(n.handler&&(r=n,n=r.handler,a=r.selector),a&&he.find.matchesSelector(Qe,a),n.guid||(n.guid=he.guid++),(l=g.events)||(l=g.events={}),(s=g.handle)||(s=g.handle=function(t){return"undefined"!=typeof he&&he.event.triggered!==t.type?he.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(De)||[""],p=t.length;p--;)o=Je.exec(t[p])||[],f=m=o[1],h=(o[2]||"").split(".").sort(),f&&(d=he.event.special[f]||{},f=(a?d.delegateType:d.bindType)||f,d=he.event.special[f]||{},u=he.extend({type:f,origType:m,data:i,handler:n,guid:n.guid,selector:a,needsContext:a&&he.expr.match.needsContext.test(a),namespace:h.join(".")},r),(c=l[f])||(c=l[f]=[],c.delegateCount=0,d.setup&&d.setup.call(e,i,h,s)!==!1||e.addEventListener&&e.addEventListener(f,s)),d.add&&(d.add.call(e,u),u.handler.guid||(u.handler.guid=n.guid)),a?c.splice(c.delegateCount++,0,u):c.push(u),he.event.global[f]=!0)},remove:function(e,t,n,i,a){var r,s,o,l,p,u,d,c,f,h,m,g=Oe.hasData(e)&&Oe.get(e);if(g&&(l=g.events)){for(t=(t||"").match(De)||[""],p=t.length;p--;)if(o=Je.exec(t[p])||[],f=m=o[1],h=(o[2]||"").split(".").sort(),f){for(d=he.event.special[f]||{},f=(i?d.delegateType:d.bindType)||f,c=l[f]||[],o=o[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=c.length;r--;)u=c[r],!a&&m!==u.origType||n&&n.guid!==u.guid||o&&!o.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(c.splice(r,1),u.selector&&c.delegateCount--,d.remove&&d.remove.call(e,u));s&&!c.length&&(d.teardown&&d.teardown.call(e,h,g.handle)!==!1||he.removeEvent(e,f,g.handle),delete l[f])}else for(f in l)he.event.remove(e,f+t[p],n,i,!0);he.isEmptyObject(l)&&Oe.remove(e,"handle events")}},dispatch:function(e){var t,n,i,a,r,s,o=he.event.fix(e),l=new Array(arguments.length),p=(Oe.get(this,"events")||{})[o.type]||[],u=he.event.special[o.type]||{};for(l[0]=o,t=1;t<arguments.length;t++)l[t]=arguments[t];if(o.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,o)!==!1){for(s=he.event.handlers.call(this,o,p),t=0;(a=s[t++])&&!o.isPropagationStopped();)for(o.currentTarget=a.elem,n=0;(r=a.handlers[n++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!o.rnamespace.test(r.namespace)||(o.handleObj=r,o.data=r.data,i=((he.event.special[r.origType]||{}).handle||r.handler).apply(a.elem,l),void 0!==i&&(o.result=i)===!1&&(o.preventDefault(),o.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,o),o.result}},handlers:function(e,t){var n,i,a,r,s,o=[],l=t.delegateCount,p=e.target;if(l&&p.nodeType&&!("click"===e.type&&e.button>=1))for(;p!==this;p=p.parentNode||this)if(1===p.nodeType&&("click"!==e.type||p.disabled!==!0)){for(r=[],s={},n=0;n<l;n++)i=t[n],a=i.selector+" ",void 0===s[a]&&(s[a]=i.needsContext?he(a,this).index(p)>-1:he.find(a,this,null,[p]).length),s[a]&&r.push(i);r.length&&o.push({elem:p,handlers:r})}return p=this,l<t.length&&o.push({elem:p,handlers:t.slice(l)}),o},addProp:function(e,t){Object.defineProperty(he.Event.prototype,e,{enumerable:!0,configurable:!0,get:he.isFunction(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[he.expando]?e:new he.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==T()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===T()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&he.nodeName(this,"input"))return this.click(),!1},_default:function(e){return he.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},he.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},he.Event=function(e,t){return this instanceof he.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?b:x,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&he.extend(this,t),this.timeStamp=e&&e.timeStamp||he.now(),void(this[he.expando]=!0)):new he.Event(e,t)},he.Event.prototype={constructor:he.Event,isDefaultPrevented:x,isPropagationStopped:x,isImmediatePropagationStopped:x,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=b,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=b,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=b,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},he.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Ke.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ze.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},he.event.addProp),he.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){he.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=this,a=e.relatedTarget,r=e.handleObj;return a&&(a===i||he.contains(i,a))||(e.type=r.origType,n=r.handler.apply(this,arguments),e.type=t),n}}}),he.fn.extend({on:function(e,t,n,i){return C(this,e,t,n,i)},one:function(e,t,n,i){return C(this,e,t,n,i,1)},off:function(e,t,n){var i,a;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,he(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(a in e)this.off(a,t,e[a]);return this}return t!==!1&&"function"!=typeof t||(n=t,t=void 0),n===!1&&(n=x),this.each(function(){he.event.remove(this,e,n,t)})}});var et=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,tt=/<script|<style|<link/i,nt=/checked\s*(?:[^=]|=\s*.checked.)/i,it=/^true\/(.*)/,at=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;he.extend({htmlPrefilter:function(e){return e.replace(et,"<$1></$2>")},clone:function(e,t,n){var i,a,r,s,o=e.cloneNode(!0),l=he.contains(e.ownerDocument,e);if(!(ce.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||he.isXMLDoc(e)))for(s=v(o),r=v(e),i=0,a=r.length;i<a;i++)M(r[i],s[i]);if(t)if(n)for(r=r||v(e),s=s||v(o),i=0,a=r.length;i<a;i++)I(r[i],s[i]);else I(e,o);return s=v(o,"script"),s.length>0&&y(s,!l&&v(e,"script")),o},cleanData:function(e){for(var t,n,i,a=he.event.special,r=0;void 0!==(n=e[r]);r++)if(Le(n)){if(t=n[Oe.expando]){if(t.events)for(i in t.events)a[i]?he.event.remove(n,i):he.removeEvent(n,i,t.handle);n[Oe.expando]=void 0}n[$e.expando]&&(n[$e.expando]=void 0)}}}),he.fn.extend({detach:function(e){return D(this,e,!0)},remove:function(e){return D(this,e)},text:function(e){return Ne(this,function(e){return void 0===e?he.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return P(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=S(this,e);t.appendChild(e)}})},prepend:function(){return P(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=S(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return P(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return P(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(he.cleanData(v(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return he.clone(this,e,t)})},html:function(e){return Ne(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!tt.test(e)&&!Ve[(Ge.exec(e)||["",""])[1].toLowerCase()]){e=he.htmlPrefilter(e);try{for(;n<i;n++)t=this[n]||{},1===t.nodeType&&(he.cleanData(v(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return P(this,arguments,function(t){var n=this.parentNode;he.inArray(this,e)<0&&(he.cleanData(v(this)),n&&n.replaceChild(t,this))},e)}}),he.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){he.fn[e]=function(e){for(var n,i=[],a=he(e),r=a.length-1,s=0;s<=r;s++)n=s===r?this:this.clone(!0),he(a[s])[t](n),re.apply(i,n.get());return this.pushStack(i)}});var rt=/^margin/,st=new RegExp("^("+je+")(?!px)[a-z%]+$","i"),ot=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)};!function(){function t(){if(o){o.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",o.innerHTML="",Qe.appendChild(s);var t=e.getComputedStyle(o);n="1%"!==t.top,r="2px"===t.marginLeft,i="4px"===t.width,o.style.marginRight="50%",a="4px"===t.marginRight,Qe.removeChild(s),o=null}}var n,i,a,r,s=te.createElement("div"),o=te.createElement("div");o.style&&(o.style.backgroundClip="content-box",o.cloneNode(!0).style.backgroundClip="",ce.clearCloneStyle="content-box"===o.style.backgroundClip,s.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",s.appendChild(o),he.extend(ce,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return t(),i},pixelMarginRight:function(){return t(),a},reliableMarginLeft:function(){return t(),r}}))}();var lt=/^(none|table(?!-c[ea]).+)/,pt={position:"absolute",visibility:"hidden",display:"block"},ut={letterSpacing:"0",fontWeight:"400"},dt=["Webkit","Moz","ms"],ct=te.createElement("div").style;he.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=z(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var a,r,s,o=he.camelCase(t),l=e.style;return t=he.cssProps[o]||(he.cssProps[o]=N(o)||o),s=he.cssHooks[t]||he.cssHooks[o],void 0===n?s&&"get"in s&&void 0!==(a=s.get(e,!1,i))?a:l[t]:(r=typeof n,"string"===r&&(a=Re.exec(n))&&a[1]&&(n=h(e,t,a),r="number"),void(null!=n&&n===n&&("number"===r&&(n+=a&&a[3]||(he.cssNumber[o]?"":"px")),ce.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l[t]=n))))}},css:function(e,t,n,i){var a,r,s,o=he.camelCase(t);return t=he.cssProps[o]||(he.cssProps[o]=N(o)||o),s=he.cssHooks[t]||he.cssHooks[o],s&&"get"in s&&(a=s.get(e,!0,n)),void 0===a&&(a=z(e,t,i)),"normal"===a&&t in ut&&(a=ut[t]),""===n||n?(r=parseFloat(a),n===!0||isFinite(r)?r||0:a):a}}),he.each(["height","width"],function(e,t){he.cssHooks[t]={get:function(e,n,i){if(n)return!lt.test(he.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?$(e,t,i):We(e,pt,function(){return $(e,t,i)})},set:function(e,n,i){var a,r=i&&ot(e),s=i&&O(e,t,i,"border-box"===he.css(e,"boxSizing",!1,r),r);return s&&(a=Re.exec(n))&&"px"!==(a[3]||"px")&&(e.style[t]=n,n=he.css(e,t)),L(e,n,s)}}}),he.cssHooks.marginLeft=A(ce.reliableMarginLeft,function(e,t){if(t)return(parseFloat(z(e,"marginLeft"))||e.getBoundingClientRect().left-We(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),he.each({margin:"",padding:"",border:"Width"},function(e,t){he.cssHooks[e+t]={expand:function(n){for(var i=0,a={},r="string"==typeof n?n.split(" "):[n];i<4;i++)a[e+Fe[i]+t]=r[i]||r[i-2]||r[0];return a}},rt.test(e)||(he.cssHooks[e+t].set=L)}),he.fn.extend({css:function(e,t){return Ne(this,function(e,t,n){var i,a,r={},s=0;if(he.isArray(t)){for(i=ot(e),a=t.length;s<a;s++)r[t[s]]=he.css(e,t[s],!1,i);return r}return void 0!==n?he.style(e,t,n):he.css(e,t)},e,t,arguments.length>1)}}),he.Tween=H,H.prototype={constructor:H,init:function(e,t,n,i,a,r){this.elem=e,this.prop=n,this.easing=a||he.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(he.cssNumber[n]?"":"px")},cur:function(){var e=H.propHooks[this.prop];return e&&e.get?e.get(this):H.propHooks._default.get(this)},run:function(e){var t,n=H.propHooks[this.prop];return this.options.duration?this.pos=t=he.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):H.propHooks._default.set(this),this}},H.prototype.init.prototype=H.prototype,H.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=he.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){he.fx.step[e.prop]?he.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[he.cssProps[e.prop]]&&!he.cssHooks[e.prop]?e.elem[e.prop]=e.now:he.style(e.elem,e.prop,e.now+e.unit)}}},H.propHooks.scrollTop=H.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},he.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},he.fx=H.prototype.init,he.fx.step={};var ft,ht,mt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;he.Animation=he.extend(X,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return h(n.elem,e,Re.exec(t),n),n}]},tweener:function(e,t){he.isFunction(e)?(t=e,e=["*"]):e=e.match(De);for(var n,i=0,a=e.length;i<a;i++)n=e[i],X.tweeners[n]=X.tweeners[n]||[],X.tweeners[n].unshift(t)},prefilters:[q],prefilter:function(e,t){t?X.prefilters.unshift(e):X.prefilters.push(e)}}),he.speed=function(e,t,n){var i=e&&"object"==typeof e?he.extend({},e):{complete:n||!n&&t||he.isFunction(e)&&e,duration:e,easing:n&&t||t&&!he.isFunction(t)&&t};return he.fx.off||te.hidden?i.duration=0:"number"!=typeof i.duration&&(i.duration in he.fx.speeds?i.duration=he.fx.speeds[i.duration]:i.duration=he.fx.speeds._default),null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){he.isFunction(i.old)&&i.old.call(this),i.queue&&he.dequeue(this,i.queue)},i},he.fn.extend({fadeTo:function(e,t,n,i){
return this.filter(qe).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var a=he.isEmptyObject(e),r=he.speed(t,n,i),s=function(){var t=X(this,he.extend({},e),r);(a||Oe.get(this,"finish"))&&t.stop(!0)};return s.finish=s,a||r.queue===!1?this.each(s):this.queue(r.queue,s)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,a=null!=e&&e+"queueHooks",r=he.timers,s=Oe.get(this);if(a)s[a]&&s[a].stop&&i(s[a]);else for(a in s)s[a]&&s[a].stop&&gt.test(a)&&i(s[a]);for(a=r.length;a--;)r[a].elem!==this||null!=e&&r[a].queue!==e||(r[a].anim.stop(n),t=!1,r.splice(a,1));!t&&n||he.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=Oe.get(this),i=n[e+"queue"],a=n[e+"queueHooks"],r=he.timers,s=i?i.length:0;for(n.finish=!0,he.queue(this,e,[]),a&&a.stop&&a.stop.call(this,!0),t=r.length;t--;)r[t].elem===this&&r[t].queue===e&&(r[t].anim.stop(!0),r.splice(t,1));for(t=0;t<s;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish})}}),he.each(["toggle","show","hide"],function(e,t){var n=he.fn[t];he.fn[t]=function(e,i,a){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(R(t,!0),e,i,a)}}),he.each({slideDown:R("show"),slideUp:R("hide"),slideToggle:R("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){he.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),he.timers=[],he.fx.tick=function(){var e,t=0,n=he.timers;for(ft=he.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||he.fx.stop(),ft=void 0},he.fx.timer=function(e){he.timers.push(e),e()?he.fx.start():he.timers.pop()},he.fx.interval=13,he.fx.start=function(){ht||(ht=e.requestAnimationFrame?e.requestAnimationFrame(B):e.setInterval(he.fx.tick,he.fx.interval))},he.fx.stop=function(){e.cancelAnimationFrame?e.cancelAnimationFrame(ht):e.clearInterval(ht),ht=null},he.fx.speeds={slow:600,fast:200,_default:400},he.fn.delay=function(t,n){return t=he.fx?he.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,i){var a=e.setTimeout(n,t);i.stop=function(){e.clearTimeout(a)}})},function(){var e=te.createElement("input"),t=te.createElement("select"),n=t.appendChild(te.createElement("option"));e.type="checkbox",ce.checkOn=""!==e.value,ce.optSelected=n.selected,e=te.createElement("input"),e.value="t",e.type="radio",ce.radioValue="t"===e.value}();var vt,yt=he.expr.attrHandle;he.fn.extend({attr:function(e,t){return Ne(this,he.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){he.removeAttr(this,e)})}}),he.extend({attr:function(e,t,n){var i,a,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof e.getAttribute?he.prop(e,t,n):(1===r&&he.isXMLDoc(e)||(a=he.attrHooks[t.toLowerCase()]||(he.expr.match.bool.test(t)?vt:void 0)),void 0!==n?null===n?void he.removeAttr(e,t):a&&"set"in a&&void 0!==(i=a.set(e,n,t))?i:(e.setAttribute(t,n+""),n):a&&"get"in a&&null!==(i=a.get(e,t))?i:(i=he.find.attr(e,t),null==i?void 0:i))},attrHooks:{type:{set:function(e,t){if(!ce.radioValue&&"radio"===t&&he.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,a=t&&t.match(De);if(a&&1===e.nodeType)for(;n=a[i++];)e.removeAttribute(n)}}),vt={set:function(e,t,n){return t===!1?he.removeAttr(e,n):e.setAttribute(n,n),n}},he.each(he.expr.match.bool.source.match(/\w+/g),function(e,t){var n=yt[t]||he.find.attr;yt[t]=function(e,t,i){var a,r,s=t.toLowerCase();return i||(r=yt[s],yt[s]=a,a=null!=n(e,t,i)?s:null,yt[s]=r),a}});var wt=/^(?:input|select|textarea|button)$/i,bt=/^(?:a|area)$/i;he.fn.extend({prop:function(e,t){return Ne(this,he.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[he.propFix[e]||e]})}}),he.extend({prop:function(e,t,n){var i,a,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&he.isXMLDoc(e)||(t=he.propFix[t]||t,a=he.propHooks[t]),void 0!==n?a&&"set"in a&&void 0!==(i=a.set(e,n,t))?i:e[t]=n:a&&"get"in a&&null!==(i=a.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=he.find.attr(e,"tabindex");return t?parseInt(t,10):wt.test(e.nodeName)||bt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),ce.optSelected||(he.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),he.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){he.propFix[this.toLowerCase()]=this}),he.fn.extend({addClass:function(e){var t,n,i,a,r,s,o,l=0;if(he.isFunction(e))return this.each(function(t){he(this).addClass(e.call(this,t,G(this)))});if("string"==typeof e&&e)for(t=e.match(De)||[];n=this[l++];)if(a=G(n),i=1===n.nodeType&&" "+_(a)+" "){for(s=0;r=t[s++];)i.indexOf(" "+r+" ")<0&&(i+=r+" ");o=_(i),a!==o&&n.setAttribute("class",o)}return this},removeClass:function(e){var t,n,i,a,r,s,o,l=0;if(he.isFunction(e))return this.each(function(t){he(this).removeClass(e.call(this,t,G(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(De)||[];n=this[l++];)if(a=G(n),i=1===n.nodeType&&" "+_(a)+" "){for(s=0;r=t[s++];)for(;i.indexOf(" "+r+" ")>-1;)i=i.replace(" "+r+" "," ");o=_(i),a!==o&&n.setAttribute("class",o)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):he.isFunction(e)?this.each(function(n){he(this).toggleClass(e.call(this,n,G(this),t),t)}):this.each(function(){var t,i,a,r;if("string"===n)for(i=0,a=he(this),r=e.match(De)||[];t=r[i++];)a.hasClass(t)?a.removeClass(t):a.addClass(t);else void 0!==e&&"boolean"!==n||(t=G(this),t&&Oe.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":Oe.get(this,"__className__")||""))})},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&(" "+_(G(n))+" ").indexOf(t)>-1)return!0;return!1}});var xt=/\r/g;he.fn.extend({val:function(e){var t,n,i,a=this[0];return arguments.length?(i=he.isFunction(e),this.each(function(n){var a;1===this.nodeType&&(a=i?e.call(this,n,he(this).val()):e,null==a?a="":"number"==typeof a?a+="":he.isArray(a)&&(a=he.map(a,function(e){return null==e?"":e+""})),t=he.valHooks[this.type]||he.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,a,"value")||(this.value=a))})):a?(t=he.valHooks[a.type]||he.valHooks[a.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(a,"value"))?n:(n=a.value,"string"==typeof n?n.replace(xt,""):null==n?"":n)):void 0}}),he.extend({valHooks:{option:{get:function(e){var t=he.find.attr(e,"value");return null!=t?t:_(he.text(e))}},select:{get:function(e){var t,n,i,a=e.options,r=e.selectedIndex,s="select-one"===e.type,o=s?null:[],l=s?r+1:a.length;for(i=r<0?l:s?r:0;i<l;i++)if(n=a[i],(n.selected||i===r)&&!n.disabled&&(!n.parentNode.disabled||!he.nodeName(n.parentNode,"optgroup"))){if(t=he(n).val(),s)return t;o.push(t)}return o},set:function(e,t){for(var n,i,a=e.options,r=he.makeArray(t),s=a.length;s--;)i=a[s],(i.selected=he.inArray(he.valHooks.option.get(i),r)>-1)&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),he.each(["radio","checkbox"],function(){he.valHooks[this]={set:function(e,t){if(he.isArray(t))return e.checked=he.inArray(he(e).val(),t)>-1}},ce.checkOn||(he.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Tt=/^(?:focusinfocus|focusoutblur)$/;he.extend(he.event,{trigger:function(t,n,i,a){var r,s,o,l,p,u,d,c=[i||te],f=pe.call(t,"type")?t.type:t,h=pe.call(t,"namespace")?t.namespace.split("."):[];if(s=o=i=i||te,3!==i.nodeType&&8!==i.nodeType&&!Tt.test(f+he.event.triggered)&&(f.indexOf(".")>-1&&(h=f.split("."),f=h.shift(),h.sort()),p=f.indexOf(":")<0&&"on"+f,t=t[he.expando]?t:new he.Event(f,"object"==typeof t&&t),t.isTrigger=a?2:3,t.namespace=h.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:he.makeArray(n,[t]),d=he.event.special[f]||{},a||!d.trigger||d.trigger.apply(i,n)!==!1)){if(!a&&!d.noBubble&&!he.isWindow(i)){for(l=d.delegateType||f,Tt.test(l+f)||(s=s.parentNode);s;s=s.parentNode)c.push(s),o=s;o===(i.ownerDocument||te)&&c.push(o.defaultView||o.parentWindow||e)}for(r=0;(s=c[r++])&&!t.isPropagationStopped();)t.type=r>1?l:d.bindType||f,u=(Oe.get(s,"events")||{})[t.type]&&Oe.get(s,"handle"),u&&u.apply(s,n),u=p&&s[p],u&&u.apply&&Le(s)&&(t.result=u.apply(s,n),t.result===!1&&t.preventDefault());return t.type=f,a||t.isDefaultPrevented()||d._default&&d._default.apply(c.pop(),n)!==!1||!Le(i)||p&&he.isFunction(i[f])&&!he.isWindow(i)&&(o=i[p],o&&(i[p]=null),he.event.triggered=f,i[f](),he.event.triggered=void 0,o&&(i[p]=o)),t.result}},simulate:function(e,t,n){var i=he.extend(new he.Event,n,{type:e,isSimulated:!0});he.event.trigger(i,null,t)}}),he.fn.extend({trigger:function(e,t){return this.each(function(){he.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return he.event.trigger(e,t,n,!0)}}),he.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,t){he.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),he.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),ce.focusin="onfocusin"in e,ce.focusin||he.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){he.event.simulate(t,e.target,he.event.fix(e))};he.event.special[t]={setup:function(){var i=this.ownerDocument||this,a=Oe.access(i,t);a||i.addEventListener(e,n,!0),Oe.access(i,t,(a||0)+1)},teardown:function(){var i=this.ownerDocument||this,a=Oe.access(i,t)-1;a?Oe.access(i,t,a):(i.removeEventListener(e,n,!0),Oe.remove(i,t))}}});var Ct=e.location,St=he.now(),Et=/\?/;he.parseXML=function(t){var n;if(!t||"string"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,"text/xml")}catch(e){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||he.error("Invalid XML: "+t),n};var kt=/\[\]$/,It=/\r?\n/g,Mt=/^(?:submit|button|image|reset|file)$/i,Pt=/^(?:input|select|textarea|keygen)/i;he.param=function(e,t){var n,i=[],a=function(e,t){var n=he.isFunction(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(he.isArray(e)||e.jquery&&!he.isPlainObject(e))he.each(e,function(){a(this.name,this.value)});else for(n in e)Y(n,e[n],t,a);return i.join("&")},he.fn.extend({serialize:function(){return he.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=he.prop(this,"elements");return e?he.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!he(this).is(":disabled")&&Pt.test(this.nodeName)&&!Mt.test(e)&&(this.checked||!_e.test(e))}).map(function(e,t){var n=he(this).val();return null==n?null:he.isArray(n)?he.map(n,function(e){return{name:t.name,value:e.replace(It,"\r\n")}}):{name:t.name,value:n.replace(It,"\r\n")}}).get()}});var Dt=/%20/g,zt=/#.*$/,At=/([?&])_=[^&]*/,Nt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Lt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ot=/^(?:GET|HEAD)$/,$t=/^\/\//,Ht={},Bt={},jt="*/".concat("*"),Rt=te.createElement("a");Rt.href=Ct.href,he.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ct.href,type:"GET",isLocal:Lt.test(Ct.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":jt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":he.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Q(Q(e,he.ajaxSettings),t):Q(he.ajaxSettings,e)},ajaxPrefilter:V(Ht),ajaxTransport:V(Bt),ajax:function(t,n){function i(t,n,i,o){var p,c,f,b,x,T=n;u||(u=!0,l&&e.clearTimeout(l),a=void 0,s=o||"",C.readyState=t>0?4:0,p=t>=200&&t<300||304===t,i&&(b=K(h,C,i)),b=Z(h,b,C,p),p?(h.ifModified&&(x=C.getResponseHeader("Last-Modified"),x&&(he.lastModified[r]=x),x=C.getResponseHeader("etag"),x&&(he.etag[r]=x)),204===t||"HEAD"===h.type?T="nocontent":304===t?T="notmodified":(T=b.state,c=b.data,f=b.error,p=!f)):(f=T,!t&&T||(T="error",t<0&&(t=0))),C.status=t,C.statusText=(n||T)+"",p?v.resolveWith(m,[c,T,C]):v.rejectWith(m,[C,T,f]),C.statusCode(w),w=void 0,d&&g.trigger(p?"ajaxSuccess":"ajaxError",[C,h,p?c:f]),y.fireWith(m,[C,T]),d&&(g.trigger("ajaxComplete",[C,h]),--he.active||he.event.trigger("ajaxStop")))}"object"==typeof t&&(n=t,t=void 0),n=n||{};var a,r,s,o,l,p,u,d,c,f,h=he.ajaxSetup({},n),m=h.context||h,g=h.context&&(m.nodeType||m.jquery)?he(m):he.event,v=he.Deferred(),y=he.Callbacks("once memory"),w=h.statusCode||{},b={},x={},T="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(u){if(!o)for(o={};t=Nt.exec(s);)o[t[1].toLowerCase()]=t[2];t=o[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return u?s:null},setRequestHeader:function(e,t){return null==u&&(e=x[e.toLowerCase()]=x[e.toLowerCase()]||e,b[e]=t),this},overrideMimeType:function(e){return null==u&&(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(u)C.always(e[C.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||T;return a&&a.abort(t),i(0,t),this}};if(v.promise(C),h.url=((t||h.url||Ct.href)+"").replace($t,Ct.protocol+"//"),h.type=n.method||n.type||h.method||h.type,h.dataTypes=(h.dataType||"*").toLowerCase().match(De)||[""],null==h.crossDomain){p=te.createElement("a");try{p.href=h.url,p.href=p.href,h.crossDomain=Rt.protocol+"//"+Rt.host!=p.protocol+"//"+p.host}catch(e){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=he.param(h.data,h.traditional)),U(Ht,h,n,C),u)return C;d=he.event&&h.global,d&&0===he.active++&&he.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!Ot.test(h.type),r=h.url.replace(zt,""),h.hasContent?h.data&&h.processData&&0===(h.contentType||"").indexOf("application/x-www-form-urlencoded")&&(h.data=h.data.replace(Dt,"+")):(f=h.url.slice(r.length),h.data&&(r+=(Et.test(r)?"&":"?")+h.data,delete h.data),h.cache===!1&&(r=r.replace(At,"$1"),f=(Et.test(r)?"&":"?")+"_="+St++ +f),h.url=r+f),h.ifModified&&(he.lastModified[r]&&C.setRequestHeader("If-Modified-Since",he.lastModified[r]),he.etag[r]&&C.setRequestHeader("If-None-Match",he.etag[r])),(h.data&&h.hasContent&&h.contentType!==!1||n.contentType)&&C.setRequestHeader("Content-Type",h.contentType),C.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+jt+"; q=0.01":""):h.accepts["*"]);for(c in h.headers)C.setRequestHeader(c,h.headers[c]);if(h.beforeSend&&(h.beforeSend.call(m,C,h)===!1||u))return C.abort();if(T="abort",y.add(h.complete),C.done(h.success),C.fail(h.error),a=U(Bt,h,n,C)){if(C.readyState=1,d&&g.trigger("ajaxSend",[C,h]),u)return C;h.async&&h.timeout>0&&(l=e.setTimeout(function(){C.abort("timeout")},h.timeout));try{u=!1,a.send(b,i)}catch(e){if(u)throw e;i(-1,e)}}else i(-1,"No Transport");return C},getJSON:function(e,t,n){return he.get(e,t,n,"json")},getScript:function(e,t){return he.get(e,void 0,t,"script")}}),he.each(["get","post"],function(e,t){he[t]=function(e,n,i,a){return he.isFunction(n)&&(a=a||i,i=n,n=void 0),he.ajax(he.extend({url:e,type:t,dataType:a,data:n,success:i},he.isPlainObject(e)&&e))}}),he._evalUrl=function(e){return he.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},he.fn.extend({wrapAll:function(e){var t;return this[0]&&(he.isFunction(e)&&(e=e.call(this[0])),t=he(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return he.isFunction(e)?this.each(function(t){he(this).wrapInner(e.call(this,t))}):this.each(function(){var t=he(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=he.isFunction(e);return this.each(function(n){he(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){he(this).replaceWith(this.childNodes)}),this}}),he.expr.pseudos.hidden=function(e){return!he.expr.pseudos.visible(e)},he.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},he.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(e){}};var Ft={0:200,1223:204},qt=he.ajaxSettings.xhr();ce.cors=!!qt&&"withCredentials"in qt,ce.ajax=qt=!!qt,he.ajaxTransport(function(t){var n,i;if(ce.cors||qt&&!t.crossDomain)return{send:function(a,r){var s,o=t.xhr();if(o.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(s in t.xhrFields)o[s]=t.xhrFields[s];t.mimeType&&o.overrideMimeType&&o.overrideMimeType(t.mimeType),t.crossDomain||a["X-Requested-With"]||(a["X-Requested-With"]="XMLHttpRequest");for(s in a)o.setRequestHeader(s,a[s]);n=function(e){return function(){n&&(n=i=o.onload=o.onerror=o.onabort=o.onreadystatechange=null,"abort"===e?o.abort():"error"===e?"number"!=typeof o.status?r(0,"error"):r(o.status,o.statusText):r(Ft[o.status]||o.status,o.statusText,"text"!==(o.responseType||"text")||"string"!=typeof o.responseText?{binary:o.response}:{text:o.responseText},o.getAllResponseHeaders()))}},o.onload=n(),i=o.onerror=n("error"),void 0!==o.onabort?o.onabort=i:o.onreadystatechange=function(){4===o.readyState&&e.setTimeout(function(){n&&i()})},n=n("abort");try{o.send(t.hasContent&&t.data||null)}catch(e){if(n)throw e}},abort:function(){n&&n()}}}),he.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),he.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return he.globalEval(e),e}}}),he.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),he.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(i,a){t=he("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&a("error"===e.type?404:200,e.type)}),te.head.appendChild(t[0])},abort:function(){n&&n()}}}});var Wt=[],Xt=/(=)\?(?=&|$)|\?\?/;he.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Wt.pop()||he.expando+"_"+St++;return this[e]=!0,e}}),he.ajaxPrefilter("json jsonp",function(t,n,i){var a,r,s,o=t.jsonp!==!1&&(Xt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Xt.test(t.data)&&"data");if(o||"jsonp"===t.dataTypes[0])return a=t.jsonpCallback=he.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,o?t[o]=t[o].replace(Xt,"$1"+a):t.jsonp!==!1&&(t.url+=(Et.test(t.url)?"&":"?")+t.jsonp+"="+a),t.converters["script json"]=function(){return s||he.error(a+" was not called"),s[0]},t.dataTypes[0]="json",r=e[a],e[a]=function(){s=arguments},i.always(function(){void 0===r?he(e).removeProp(a):e[a]=r,t[a]&&(t.jsonpCallback=n.jsonpCallback,Wt.push(a)),s&&he.isFunction(r)&&r(s[0]),s=r=void 0}),"script"}),ce.createHTMLDocument=function(){var e=te.implementation.createHTMLDocument("").body;return e.innerHTML="<form></form><form></form>",2===e.childNodes.length}(),he.parseHTML=function(e,t,n){if("string"!=typeof e)return[];"boolean"==typeof t&&(n=t,t=!1);var i,a,r;return t||(ce.createHTMLDocument?(t=te.implementation.createHTMLDocument(""),i=t.createElement("base"),i.href=te.location.href,t.head.appendChild(i)):t=te),a=Ce.exec(e),r=!n&&[],a?[t.createElement(a[1])]:(a=w([e],t,r),r&&r.length&&he(r).remove(),he.merge([],a.childNodes))},he.fn.load=function(e,t,n){var i,a,r,s=this,o=e.indexOf(" ");return o>-1&&(i=_(e.slice(o)),e=e.slice(0,o)),he.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(a="POST"),s.length>0&&he.ajax({url:e,type:a||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?he("<div>").append(he.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},he.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){he.fn[t]=function(e){return this.on(t,e)}}),he.expr.pseudos.animated=function(e){return he.grep(he.timers,function(t){return e===t.elem}).length},he.offset={setOffset:function(e,t,n){var i,a,r,s,o,l,p,u=he.css(e,"position"),d=he(e),c={};"static"===u&&(e.style.position="relative"),o=d.offset(),r=he.css(e,"top"),l=he.css(e,"left"),p=("absolute"===u||"fixed"===u)&&(r+l).indexOf("auto")>-1,p?(i=d.position(),s=i.top,a=i.left):(s=parseFloat(r)||0,a=parseFloat(l)||0),he.isFunction(t)&&(t=t.call(e,n,he.extend({},o))),null!=t.top&&(c.top=t.top-o.top+s),null!=t.left&&(c.left=t.left-o.left+a),"using"in t?t.using.call(e,c):d.css(c)}},he.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){he.offset.setOffset(this,e,t)});var t,n,i,a,r=this[0];return r?r.getClientRects().length?(i=r.getBoundingClientRect(),i.width||i.height?(a=r.ownerDocument,n=J(a),t=a.documentElement,{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n=this[0],i={top:0,left:0};return"fixed"===he.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),he.nodeName(e[0],"html")||(i=e.offset()),i={top:i.top+he.css(e[0],"borderTopWidth",!0),left:i.left+he.css(e[0],"borderLeftWidth",!0)}),{top:t.top-i.top-he.css(n,"marginTop",!0),left:t.left-i.left-he.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===he.css(e,"position");)e=e.offsetParent;return e||Qe})}}),he.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n="pageYOffset"===t;he.fn[e]=function(i){return Ne(this,function(e,i,a){var r=J(e);return void 0===a?r?r[t]:e[i]:void(r?r.scrollTo(n?r.pageXOffset:a,n?a:r.pageYOffset):e[i]=a)},e,i,arguments.length)}}),he.each(["top","left"],function(e,t){he.cssHooks[t]=A(ce.pixelPosition,function(e,n){if(n)return n=z(e,t),st.test(n)?he(e).position()[t]+"px":n})}),he.each({Height:"height",Width:"width"},function(e,t){he.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){he.fn[i]=function(a,r){var s=arguments.length&&(n||"boolean"!=typeof a),o=n||(a===!0||r===!0?"margin":"border");return Ne(this,function(t,n,a){var r;return he.isWindow(t)?0===i.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(r=t.documentElement,Math.max(t.body["scroll"+e],r["scroll"+e],t.body["offset"+e],r["offset"+e],r["client"+e])):void 0===a?he.css(t,n,o):he.style(t,n,a,o)},t,s?a:void 0,s)}})}),he.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),he.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return he});var _t=e.jQuery,Gt=e.$;return he.noConflict=function(t){return e.$===he&&(e.$=Gt),t&&e.jQuery===he&&(e.jQuery=_t),he},t||(e.jQuery=e.$=he),he}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(e){"use strict";var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||t[0]>3)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(jQuery),+function(e){"use strict";function t(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var n in t)if(void 0!==e.style[n])return{end:t[n]};return!1}e.fn.emulateTransitionEnd=function(t){var n=!1,i=this;e(this).one("bsTransitionEnd",function(){n=!0});var a=function(){n||e(i).trigger(e.support.transition.end)};return setTimeout(a,t),this},e(function(){e.support.transition=t(),e.support.transition&&(e.event.special.bsTransitionEnd={bindType:e.support.transition.end,delegateType:e.support.transition.end,handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}})})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),a=n.data("bs.alert");a||n.data("bs.alert",a=new i(this)),"string"==typeof t&&a[t].call(n)})}var n='[data-dismiss="alert"]',i=function(t){e(t).on("click",n,this.close)};i.VERSION="3.3.7",i.TRANSITION_DURATION=150,i.prototype.close=function(t){function n(){s.detach().trigger("closed.bs.alert").remove()}var a=e(this),r=a.attr("data-target");r||(r=a.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));var s=e("#"===r?[]:r);t&&t.preventDefault(),s.length||(s=a.closest(".alert")),s.trigger(t=e.Event("close.bs.alert")),t.isDefaultPrevented()||(s.removeClass("in"),e.support.transition&&s.hasClass("fade")?s.one("bsTransitionEnd",n).emulateTransitionEnd(i.TRANSITION_DURATION):n())};var a=e.fn.alert;e.fn.alert=t,e.fn.alert.Constructor=i,e.fn.alert.noConflict=function(){return e.fn.alert=a,this},e(document).on("click.bs.alert.data-api",n,i.prototype.close)}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),a=i.data("bs.button"),r="object"==typeof t&&t;a||i.data("bs.button",a=new n(this,r)),"toggle"==t?a.toggle():t&&a.setState(t)})}var n=function(t,i){this.$element=e(t),this.options=e.extend({},n.DEFAULTS,i),this.isLoading=!1};n.VERSION="3.3.7",n.DEFAULTS={loadingText:"loading..."},n.prototype.setState=function(t){var n="disabled",i=this.$element,a=i.is("input")?"val":"html",r=i.data();t+="Text",null==r.resetText&&i.data("resetText",i[a]()),setTimeout(e.proxy(function(){i[a](null==r[t]?this.options[t]:r[t]),"loadingText"==t?(this.isLoading=!0,i.addClass(n).attr(n,n).prop(n,!0)):this.isLoading&&(this.isLoading=!1,i.removeClass(n).removeAttr(n).prop(n,!1))},this),0)},n.prototype.toggle=function(){var e=!0,t=this.$element.closest('[data-toggle="buttons"]');if(t.length){var n=this.$element.find("input");"radio"==n.prop("type")?(n.prop("checked")&&(e=!1),t.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==n.prop("type")&&(n.prop("checked")!==this.$element.hasClass("active")&&(e=!1),this.$element.toggleClass("active")),n.prop("checked",this.$element.hasClass("active")),e&&n.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var i=e.fn.button;e.fn.button=t,e.fn.button.Constructor=n,e.fn.button.noConflict=function(){return e.fn.button=i,this},e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(n){var i=e(n.target).closest(".btn");t.call(i,"toggle"),e(n.target).is('input[type="radio"], input[type="checkbox"]')||(n.preventDefault(),i.is("input,button")?i.trigger("focus"):i.find("input:visible,button:visible").first().trigger("focus"))}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){e(t.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(t.type))})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),a=i.data("bs.carousel"),r=e.extend({},n.DEFAULTS,i.data(),"object"==typeof t&&t),s="string"==typeof t?t:r.slide;a||i.data("bs.carousel",a=new n(this,r)),"number"==typeof t?a.to(t):s?a[s]():r.interval&&a.pause().cycle()})}var n=function(t,n){this.$element=e(t),this.$indicators=this.$element.find(".carousel-indicators"),this.options=n,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",e.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",e.proxy(this.pause,this)).on("mouseleave.bs.carousel",e.proxy(this.cycle,this))};n.VERSION="3.3.7",n.TRANSITION_DURATION=600,n.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},n.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},n.prototype.cycle=function(t){return t||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},n.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},n.prototype.getItemForDirection=function(e,t){var n=this.getItemIndex(t),i="prev"==e&&0===n||"next"==e&&n==this.$items.length-1;if(i&&!this.options.wrap)return t;var a="prev"==e?-1:1,r=(n+a)%this.$items.length;return this.$items.eq(r)},n.prototype.to=function(e){var t=this,n=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(e>this.$items.length-1||e<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):n==e?this.pause().cycle():this.slide(e>n?"next":"prev",this.$items.eq(e))},n.prototype.pause=function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition&&(this.$element.trigger(e.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},n.prototype.next=function(){if(!this.sliding)return this.slide("next")},n.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},n.prototype.slide=function(t,i){var a=this.$element.find(".item.active"),r=i||this.getItemForDirection(t,a),s=this.interval,o="next"==t?"left":"right",l=this;if(r.hasClass("active"))return this.sliding=!1;var p=r[0],u=e.Event("slide.bs.carousel",{relatedTarget:p,direction:o});if(this.$element.trigger(u),!u.isDefaultPrevented()){if(this.sliding=!0,s&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var d=e(this.$indicators.children()[this.getItemIndex(r)]);d&&d.addClass("active")}var c=e.Event("slid.bs.carousel",{relatedTarget:p,direction:o});return e.support.transition&&this.$element.hasClass("slide")?(r.addClass(t),r[0].offsetWidth,a.addClass(o),r.addClass(o),a.one("bsTransitionEnd",function(){r.removeClass([t,o].join(" ")).addClass("active"),a.removeClass(["active",o].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(c)},0)}).emulateTransitionEnd(n.TRANSITION_DURATION)):(a.removeClass("active"),r.addClass("active"),this.sliding=!1,this.$element.trigger(c)),s&&this.cycle(),this}};var i=e.fn.carousel;e.fn.carousel=t,e.fn.carousel.Constructor=n,e.fn.carousel.noConflict=function(){return e.fn.carousel=i,this};var a=function(n){var i,a=e(this),r=e(a.attr("data-target")||(i=a.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,""));if(r.hasClass("carousel")){var s=e.extend({},r.data(),a.data()),o=a.attr("data-slide-to");o&&(s.interval=!1),t.call(r,s),o&&r.data("bs.carousel").to(o),n.preventDefault()}};e(document).on("click.bs.carousel.data-api","[data-slide]",a).on("click.bs.carousel.data-api","[data-slide-to]",a),e(window).on("load",function(){e('[data-ride="carousel"]').each(function(){var n=e(this);t.call(n,n.data())})})}(jQuery),+function(e){"use strict";function t(t){var n,i=t.attr("data-target")||(n=t.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,"");return e(i)}function n(t){return this.each(function(){var n=e(this),a=n.data("bs.collapse"),r=e.extend({},i.DEFAULTS,n.data(),"object"==typeof t&&t);!a&&r.toggle&&/show|hide/.test(t)&&(r.toggle=!1),
a||n.data("bs.collapse",a=new i(this,r)),"string"==typeof t&&a[t]()})}var i=function(t,n){this.$element=e(t),this.options=e.extend({},i.DEFAULTS,n),this.$trigger=e('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};i.VERSION="3.3.7",i.TRANSITION_DURATION=350,i.DEFAULTS={toggle:!0},i.prototype.dimension=function(){var e=this.$element.hasClass("width");return e?"width":"height"},i.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t,a=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(a&&a.length&&(t=a.data("bs.collapse"),t&&t.transitioning))){var r=e.Event("show.bs.collapse");if(this.$element.trigger(r),!r.isDefaultPrevented()){a&&a.length&&(n.call(a,"hide"),t||a.data("bs.collapse",null));var s=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[s](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var o=function(){this.$element.removeClass("collapsing").addClass("collapse in")[s](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!e.support.transition)return o.call(this);var l=e.camelCase(["scroll",s].join("-"));this.$element.one("bsTransitionEnd",e.proxy(o,this)).emulateTransitionEnd(i.TRANSITION_DURATION)[s](this.$element[0][l])}}}},i.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var t=e.Event("hide.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var n=this.dimension();this.$element[n](this.$element[n]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var a=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return e.support.transition?void this.$element[n](0).one("bsTransitionEnd",e.proxy(a,this)).emulateTransitionEnd(i.TRANSITION_DURATION):a.call(this)}}},i.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},i.prototype.getParent=function(){return e(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(e.proxy(function(n,i){var a=e(i);this.addAriaAndCollapsedClass(t(a),a)},this)).end()},i.prototype.addAriaAndCollapsedClass=function(e,t){var n=e.hasClass("in");e.attr("aria-expanded",n),t.toggleClass("collapsed",!n).attr("aria-expanded",n)};var a=e.fn.collapse;e.fn.collapse=n,e.fn.collapse.Constructor=i,e.fn.collapse.noConflict=function(){return e.fn.collapse=a,this},e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(i){var a=e(this);a.attr("data-target")||i.preventDefault();var r=t(a),s=r.data("bs.collapse"),o=s?"toggle":a.data();n.call(r,o)})}(jQuery),+function(e){"use strict";function t(t){var n=t.attr("data-target");n||(n=t.attr("href"),n=n&&/#[A-Za-z]/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,""));var i=n&&e(n);return i&&i.length?i:t.parent()}function n(n){n&&3===n.which||(e(a).remove(),e(r).each(function(){var i=e(this),a=t(i),r={relatedTarget:this};a.hasClass("open")&&(n&&"click"==n.type&&/input|textarea/i.test(n.target.tagName)&&e.contains(a[0],n.target)||(a.trigger(n=e.Event("hide.bs.dropdown",r)),n.isDefaultPrevented()||(i.attr("aria-expanded","false"),a.removeClass("open").trigger(e.Event("hidden.bs.dropdown",r)))))}))}function i(t){return this.each(function(){var n=e(this),i=n.data("bs.dropdown");i||n.data("bs.dropdown",i=new s(this)),"string"==typeof t&&i[t].call(n)})}var a=".dropdown-backdrop",r='[data-toggle="dropdown"]',s=function(t){e(t).on("click.bs.dropdown",this.toggle)};s.VERSION="3.3.7",s.prototype.toggle=function(i){var a=e(this);if(!a.is(".disabled, :disabled")){var r=t(a),s=r.hasClass("open");if(n(),!s){"ontouchstart"in document.documentElement&&!r.closest(".navbar-nav").length&&e(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(e(this)).on("click",n);var o={relatedTarget:this};if(r.trigger(i=e.Event("show.bs.dropdown",o)),i.isDefaultPrevented())return;a.trigger("focus").attr("aria-expanded","true"),r.toggleClass("open").trigger(e.Event("shown.bs.dropdown",o))}return!1}},s.prototype.keydown=function(n){if(/(38|40|27|32)/.test(n.which)&&!/input|textarea/i.test(n.target.tagName)){var i=e(this);if(n.preventDefault(),n.stopPropagation(),!i.is(".disabled, :disabled")){var a=t(i),s=a.hasClass("open");if(!s&&27!=n.which||s&&27==n.which)return 27==n.which&&a.find(r).trigger("focus"),i.trigger("click");var o=" li:not(.disabled):visible a",l=a.find(".dropdown-menu"+o);if(l.length){var p=l.index(n.target);38==n.which&&p>0&&p--,40==n.which&&p<l.length-1&&p++,~p||(p=0),l.eq(p).trigger("focus")}}}};var o=e.fn.dropdown;e.fn.dropdown=i,e.fn.dropdown.Constructor=s,e.fn.dropdown.noConflict=function(){return e.fn.dropdown=o,this},e(document).on("click.bs.dropdown.data-api",n).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",r,s.prototype.toggle).on("keydown.bs.dropdown.data-api",r,s.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",s.prototype.keydown)}(jQuery),+function(e){"use strict";function t(t,i){return this.each(function(){var a=e(this),r=a.data("bs.modal"),s=e.extend({},n.DEFAULTS,a.data(),"object"==typeof t&&t);r||a.data("bs.modal",r=new n(this,s)),"string"==typeof t?r[t](i):s.show&&r.show(i)})}var n=function(t,n){this.options=n,this.$body=e(document.body),this.$element=e(t),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};n.VERSION="3.3.7",n.TRANSITION_DURATION=300,n.BACKDROP_TRANSITION_DURATION=150,n.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},n.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},n.prototype.show=function(t){var i=this,a=e.Event("show.bs.modal",{relatedTarget:t});this.$element.trigger(a),this.isShown||a.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){i.$element.one("mouseup.dismiss.bs.modal",function(t){e(t.target).is(i.$element)&&(i.ignoreBackdropClick=!0)})}),this.backdrop(function(){var a=e.support.transition&&i.$element.hasClass("fade");i.$element.parent().length||i.$element.appendTo(i.$body),i.$element.show().scrollTop(0),i.adjustDialog(),a&&i.$element[0].offsetWidth,i.$element.addClass("in"),i.enforceFocus();var r=e.Event("shown.bs.modal",{relatedTarget:t});a?i.$dialog.one("bsTransitionEnd",function(){i.$element.trigger("focus").trigger(r)}).emulateTransitionEnd(n.TRANSITION_DURATION):i.$element.trigger("focus").trigger(r)}))},n.prototype.hide=function(t){t&&t.preventDefault(),t=e.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(n.TRANSITION_DURATION):this.hideModal())},n.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){document===e.target||this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},n.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},n.prototype.resize=function(){this.isShown?e(window).on("resize.bs.modal",e.proxy(this.handleUpdate,this)):e(window).off("resize.bs.modal")},n.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$body.removeClass("modal-open"),e.resetAdjustments(),e.resetScrollbar(),e.$element.trigger("hidden.bs.modal")})},n.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},n.prototype.backdrop=function(t){var i=this,a=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var r=e.support.transition&&a;if(this.$backdrop=e(document.createElement("div")).addClass("modal-backdrop "+a).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),r&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;r?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION):t()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var s=function(){i.removeBackdrop(),t&&t()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",s).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION):s()}else t&&t()},n.prototype.handleUpdate=function(){this.adjustDialog()},n.prototype.adjustDialog=function(){var e=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&e?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!e?this.scrollbarWidth:""})},n.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},n.prototype.checkScrollbar=function(){var e=window.innerWidth;if(!e){var t=document.documentElement.getBoundingClientRect();e=t.right-Math.abs(t.left)}this.bodyIsOverflowing=document.body.clientWidth<e,this.scrollbarWidth=this.measureScrollbar()},n.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",e+this.scrollbarWidth)},n.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},n.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var t=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),t};var i=e.fn.modal;e.fn.modal=t,e.fn.modal.Constructor=n,e.fn.modal.noConflict=function(){return e.fn.modal=i,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(n){var i=e(this),a=i.attr("href"),r=e(i.attr("data-target")||a&&a.replace(/.*(?=#[^\s]+$)/,"")),s=r.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(a)&&a},r.data(),i.data());i.is("a")&&n.preventDefault(),r.one("show.bs.modal",function(e){e.isDefaultPrevented()||r.one("hidden.bs.modal",function(){i.is(":visible")&&i.trigger("focus")})}),t.call(r,s,this)})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),a=i.data("bs.tooltip"),r="object"==typeof t&&t;!a&&/destroy|hide/.test(t)||(a||i.data("bs.tooltip",a=new n(this,r)),"string"==typeof t&&a[t]())})}var n=function(e,t){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",e,t)};n.VERSION="3.3.7",n.TRANSITION_DURATION=150,n.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},n.prototype.init=function(t,n,i){if(this.enabled=!0,this.type=t,this.$element=e(n),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&e(e.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var a=this.options.trigger.split(" "),r=a.length;r--;){var s=a[r];if("click"==s)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=s){var o="hover"==s?"mouseenter":"focusin",l="hover"==s?"mouseleave":"focusout";this.$element.on(o+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},n.prototype.getDefaults=function(){return n.DEFAULTS},n.prototype.getOptions=function(t){return t=e.extend({},this.getDefaults(),this.$element.data(),t),t.delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t},n.prototype.getDelegateOptions=function(){var t={},n=this.getDefaults();return this._options&&e.each(this._options,function(e,i){n[e]!=i&&(t[e]=i)}),t},n.prototype.enter=function(t){var n=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);return n||(n=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,n)),t instanceof e.Event&&(n.inState["focusin"==t.type?"focus":"hover"]=!0),n.tip().hasClass("in")||"in"==n.hoverState?void(n.hoverState="in"):(clearTimeout(n.timeout),n.hoverState="in",n.options.delay&&n.options.delay.show?void(n.timeout=setTimeout(function(){"in"==n.hoverState&&n.show()},n.options.delay.show)):n.show())},n.prototype.isInStateTrue=function(){for(var e in this.inState)if(this.inState[e])return!0;return!1},n.prototype.leave=function(t){var n=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);if(n||(n=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,n)),t instanceof e.Event&&(n.inState["focusout"==t.type?"focus":"hover"]=!1),!n.isInStateTrue())return clearTimeout(n.timeout),n.hoverState="out",n.options.delay&&n.options.delay.hide?void(n.timeout=setTimeout(function(){"out"==n.hoverState&&n.hide()},n.options.delay.hide)):n.hide()},n.prototype.show=function(){var t=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(t);var i=e.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(t.isDefaultPrevented()||!i)return;var a=this,r=this.tip(),s=this.getUID(this.type);this.setContent(),r.attr("id",s),this.$element.attr("aria-describedby",s),this.options.animation&&r.addClass("fade");var o="function"==typeof this.options.placement?this.options.placement.call(this,r[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,p=l.test(o);p&&(o=o.replace(l,"")||"top"),r.detach().css({top:0,left:0,display:"block"}).addClass(o).data("bs."+this.type,this),this.options.container?r.appendTo(this.options.container):r.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var u=this.getPosition(),d=r[0].offsetWidth,c=r[0].offsetHeight;if(p){var f=o,h=this.getPosition(this.$viewport);o="bottom"==o&&u.bottom+c>h.bottom?"top":"top"==o&&u.top-c<h.top?"bottom":"right"==o&&u.right+d>h.width?"left":"left"==o&&u.left-d<h.left?"right":o,r.removeClass(f).addClass(o)}var m=this.getCalculatedOffset(o,u,d,c);this.applyPlacement(m,o);var g=function(){var e=a.hoverState;a.$element.trigger("shown.bs."+a.type),a.hoverState=null,"out"==e&&a.leave(a)};e.support.transition&&this.$tip.hasClass("fade")?r.one("bsTransitionEnd",g).emulateTransitionEnd(n.TRANSITION_DURATION):g()}},n.prototype.applyPlacement=function(t,n){var i=this.tip(),a=i[0].offsetWidth,r=i[0].offsetHeight,s=parseInt(i.css("margin-top"),10),o=parseInt(i.css("margin-left"),10);isNaN(s)&&(s=0),isNaN(o)&&(o=0),t.top+=s,t.left+=o,e.offset.setOffset(i[0],e.extend({using:function(e){i.css({top:Math.round(e.top),left:Math.round(e.left)})}},t),0),i.addClass("in");var l=i[0].offsetWidth,p=i[0].offsetHeight;"top"==n&&p!=r&&(t.top=t.top+r-p);var u=this.getViewportAdjustedDelta(n,t,l,p);u.left?t.left+=u.left:t.top+=u.top;var d=/top|bottom/.test(n),c=d?2*u.left-a+l:2*u.top-r+p,f=d?"offsetWidth":"offsetHeight";i.offset(t),this.replaceArrow(c,i[0][f],d)},n.prototype.replaceArrow=function(e,t,n){this.arrow().css(n?"left":"top",50*(1-e/t)+"%").css(n?"top":"left","")},n.prototype.setContent=function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},n.prototype.hide=function(t){function i(){"in"!=a.hoverState&&r.detach(),a.$element&&a.$element.removeAttr("aria-describedby").trigger("hidden.bs."+a.type),t&&t()}var a=this,r=e(this.$tip),s=e.Event("hide.bs."+this.type);if(this.$element.trigger(s),!s.isDefaultPrevented())return r.removeClass("in"),e.support.transition&&r.hasClass("fade")?r.one("bsTransitionEnd",i).emulateTransitionEnd(n.TRANSITION_DURATION):i(),this.hoverState=null,this},n.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},n.prototype.hasContent=function(){return this.getTitle()},n.prototype.getPosition=function(t){t=t||this.$element;var n=t[0],i="BODY"==n.tagName,a=n.getBoundingClientRect();null==a.width&&(a=e.extend({},a,{width:a.right-a.left,height:a.bottom-a.top}));var r=window.SVGElement&&n instanceof window.SVGElement,s=i?{top:0,left:0}:r?null:t.offset(),o={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop()},l=i?{width:e(window).width(),height:e(window).height()}:null;return e.extend({},a,o,l,s)},n.prototype.getCalculatedOffset=function(e,t,n,i){return"bottom"==e?{top:t.top+t.height,left:t.left+t.width/2-n/2}:"top"==e?{top:t.top-i,left:t.left+t.width/2-n/2}:"left"==e?{top:t.top+t.height/2-i/2,left:t.left-n}:{top:t.top+t.height/2-i/2,left:t.left+t.width}},n.prototype.getViewportAdjustedDelta=function(e,t,n,i){var a={top:0,left:0};if(!this.$viewport)return a;var r=this.options.viewport&&this.options.viewport.padding||0,s=this.getPosition(this.$viewport);if(/right|left/.test(e)){var o=t.top-r-s.scroll,l=t.top+r-s.scroll+i;o<s.top?a.top=s.top-o:l>s.top+s.height&&(a.top=s.top+s.height-l)}else{var p=t.left-r,u=t.left+r+n;p<s.left?a.left=s.left-p:u>s.right&&(a.left=s.left+s.width-u)}return a},n.prototype.getTitle=function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||("function"==typeof n.title?n.title.call(t[0]):n.title)},n.prototype.getUID=function(e){do e+=~~(1e6*Math.random());while(document.getElementById(e));return e},n.prototype.tip=function(){if(!this.$tip&&(this.$tip=e(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},n.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},n.prototype.enable=function(){this.enabled=!0},n.prototype.disable=function(){this.enabled=!1},n.prototype.toggleEnabled=function(){this.enabled=!this.enabled},n.prototype.toggle=function(t){var n=this;t&&(n=e(t.currentTarget).data("bs."+this.type),n||(n=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,n))),t?(n.inState.click=!n.inState.click,n.isInStateTrue()?n.enter(n):n.leave(n)):n.tip().hasClass("in")?n.leave(n):n.enter(n)},n.prototype.destroy=function(){var e=this;clearTimeout(this.timeout),this.hide(function(){e.$element.off("."+e.type).removeData("bs."+e.type),e.$tip&&e.$tip.detach(),e.$tip=null,e.$arrow=null,e.$viewport=null,e.$element=null})};var i=e.fn.tooltip;e.fn.tooltip=t,e.fn.tooltip.Constructor=n,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=i,this}}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),a=i.data("bs.popover"),r="object"==typeof t&&t;!a&&/destroy|hide/.test(t)||(a||i.data("bs.popover",a=new n(this,r)),"string"==typeof t&&a[t]())})}var n=function(e,t){this.init("popover",e,t)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");n.VERSION="3.3.7",n.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),n.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),n.prototype.constructor=n,n.prototype.getDefaults=function(){return n.DEFAULTS},n.prototype.setContent=function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof n?"html":"append":"text"](n),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},n.prototype.hasContent=function(){return this.getTitle()||this.getContent()},n.prototype.getContent=function(){var e=this.$element,t=this.options;return e.attr("data-content")||("function"==typeof t.content?t.content.call(e[0]):t.content)},n.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var i=e.fn.popover;e.fn.popover=t,e.fn.popover.Constructor=n,e.fn.popover.noConflict=function(){return e.fn.popover=i,this}}(jQuery),+function(e){"use strict";function t(n,i){this.$body=e(document.body),this.$scrollElement=e(e(n).is(document.body)?window:n),this.options=e.extend({},t.DEFAULTS,i),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",e.proxy(this.process,this)),this.refresh(),this.process()}function n(n){return this.each(function(){var i=e(this),a=i.data("bs.scrollspy"),r="object"==typeof n&&n;a||i.data("bs.scrollspy",a=new t(this,r)),"string"==typeof n&&a[n]()})}t.VERSION="3.3.7",t.DEFAULTS={offset:10},t.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},t.prototype.refresh=function(){var t=this,n="offset",i=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),e.isWindow(this.$scrollElement[0])||(n="position",i=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var t=e(this),a=t.data("target")||t.attr("href"),r=/^#./.test(a)&&e(a);return r&&r.length&&r.is(":visible")&&[[r[n]().top+i,a]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},t.prototype.process=function(){var e,t=this.$scrollElement.scrollTop()+this.options.offset,n=this.getScrollHeight(),i=this.options.offset+n-this.$scrollElement.height(),a=this.offsets,r=this.targets,s=this.activeTarget;if(this.scrollHeight!=n&&this.refresh(),t>=i)return s!=(e=r[r.length-1])&&this.activate(e);if(s&&t<a[0])return this.activeTarget=null,this.clear();for(e=a.length;e--;)s!=r[e]&&t>=a[e]&&(void 0===a[e+1]||t<a[e+1])&&this.activate(r[e])},t.prototype.activate=function(t){this.activeTarget=t,this.clear();var n=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',i=e(n).parents("li").addClass("active");i.parent(".dropdown-menu").length&&(i=i.closest("li.dropdown").addClass("active")),i.trigger("activate.bs.scrollspy")},t.prototype.clear=function(){e(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var i=e.fn.scrollspy;e.fn.scrollspy=n,e.fn.scrollspy.Constructor=t,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=i,this},e(window).on("load.bs.scrollspy.data-api",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);n.call(t,t.data())})})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),a=i.data("bs.tab");a||i.data("bs.tab",a=new n(this)),"string"==typeof t&&a[t]()})}var n=function(t){this.element=e(t)};n.VERSION="3.3.7",n.TRANSITION_DURATION=150,n.prototype.show=function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),i=t.data("target");if(i||(i=t.attr("href"),i=i&&i.replace(/.*(?=#[^\s]*$)/,"")),!t.parent("li").hasClass("active")){var a=n.find(".active:last a"),r=e.Event("hide.bs.tab",{relatedTarget:t[0]}),s=e.Event("show.bs.tab",{relatedTarget:a[0]});if(a.trigger(r),t.trigger(s),!s.isDefaultPrevented()&&!r.isDefaultPrevented()){var o=e(i);this.activate(t.closest("li"),n),this.activate(o,o.parent(),function(){a.trigger({type:"hidden.bs.tab",relatedTarget:t[0]}),t.trigger({type:"shown.bs.tab",relatedTarget:a[0]})})}}},n.prototype.activate=function(t,i,a){function r(){s.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),t.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),o?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu").length&&t.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),a&&a()}var s=i.find("> .active"),o=a&&e.support.transition&&(s.length&&s.hasClass("fade")||!!i.find("> .fade").length);s.length&&o?s.one("bsTransitionEnd",r).emulateTransitionEnd(n.TRANSITION_DURATION):r(),s.removeClass("in")};var i=e.fn.tab;e.fn.tab=t,e.fn.tab.Constructor=n,e.fn.tab.noConflict=function(){return e.fn.tab=i,this};var a=function(n){n.preventDefault(),t.call(e(this),"show")};e(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',a).on("click.bs.tab.data-api",'[data-toggle="pill"]',a)}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),a=i.data("bs.affix"),r="object"==typeof t&&t;a||i.data("bs.affix",a=new n(this,r)),"string"==typeof t&&a[t]()})}var n=function(t,i){this.options=e.extend({},n.DEFAULTS,i),this.$target=e(this.options.target).on("scroll.bs.affix.data-api",e.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",e.proxy(this.checkPositionWithEventLoop,this)),this.$element=e(t),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};n.VERSION="3.3.7",n.RESET="affix affix-top affix-bottom",n.DEFAULTS={offset:0,target:window},n.prototype.getState=function(e,t,n,i){var a=this.$target.scrollTop(),r=this.$element.offset(),s=this.$target.height();if(null!=n&&"top"==this.affixed)return a<n&&"top";if("bottom"==this.affixed)return null!=n?!(a+this.unpin<=r.top)&&"bottom":!(a+s<=e-i)&&"bottom";var o=null==this.affixed,l=o?a:r.top,p=o?s:t;return null!=n&&a<=n?"top":null!=i&&l+p>=e-i&&"bottom"},n.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(n.RESET).addClass("affix");var e=this.$target.scrollTop(),t=this.$element.offset();return this.pinnedOffset=t.top-e},n.prototype.checkPositionWithEventLoop=function(){setTimeout(e.proxy(this.checkPosition,this),1)},n.prototype.checkPosition=function(){if(this.$element.is(":visible")){var t=this.$element.height(),i=this.options.offset,a=i.top,r=i.bottom,s=Math.max(e(document).height(),e(document.body).height());"object"!=typeof i&&(r=a=i),"function"==typeof a&&(a=i.top(this.$element)),"function"==typeof r&&(r=i.bottom(this.$element));var o=this.getState(s,t,a,r);if(this.affixed!=o){null!=this.unpin&&this.$element.css("top","");var l="affix"+(o?"-"+o:""),p=e.Event(l+".bs.affix");if(this.$element.trigger(p),p.isDefaultPrevented())return;this.affixed=o,this.unpin="bottom"==o?this.getPinnedOffset():null,this.$element.removeClass(n.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==o&&this.$element.offset({top:s-t-r})}};var i=e.fn.affix;e.fn.affix=t,e.fn.affix.Constructor=n,e.fn.affix.noConflict=function(){return e.fn.affix=i,this},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var n=e(this),i=n.data();i.offset=i.offset||{},null!=i.offsetBottom&&(i.offset.bottom=i.offsetBottom),null!=i.offsetTop&&(i.offset.top=i.offsetTop),t.call(n,i)})})}(jQuery),function(e){var t,n,i,a,r,s,o,l="Close",p="BeforeClose",u="AfterClose",d="BeforeAppend",c="MarkupParse",f="Open",h="Change",m="mfp",g="."+m,v="mfp-ready",y="mfp-removing",w="mfp-prevent-close",b=function(){},x=!!window.jQuery,T=e(window),C=function(e,n){t.ev.on(m+e+g,n)},S=function(t,n,i,a){var r=document.createElement("div");return r.className="mfp-"+t,i&&(r.innerHTML=i),a?n&&n.appendChild(r):(r=e(r),n&&r.appendTo(n)),r},E=function(n,i){t.ev.triggerHandler(m+n,i),t.st.callbacks&&(n=n.charAt(0).toLowerCase()+n.slice(1),t.st.callbacks[n]&&t.st.callbacks[n].apply(t,e.isArray(i)?i:[i]))},k=function(n){return n===o&&t.currTemplate.closeBtn||(t.currTemplate.closeBtn=e(t.st.closeMarkup.replace("%title%",t.st.tClose)),o=n),t.currTemplate.closeBtn},I=function(){e.magnificPopup.instance||(t=new b,t.init(),e.magnificPopup.instance=t)},M=function(){var e=document.createElement("p").style,t=["ms","O","Moz","Webkit"];if(void 0!==e.transition)return!0;for(;t.length;)if(t.pop()+"Transition"in e)return!0;return!1};b.prototype={constructor:b,init:function(){var n=navigator.appVersion;t.isIE7=n.indexOf("MSIE 7.")!==-1,t.isIE8=n.indexOf("MSIE 8.")!==-1,t.isLowIE=t.isIE7||t.isIE8,t.isAndroid=/android/gi.test(n),t.isIOS=/iphone|ipad|ipod/gi.test(n),t.supportsTransition=M(),t.probablyMobile=t.isAndroid||t.isIOS||/(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),i=e(document.body),a=e(document),t.popupsCache={}},open:function(n){var i;if(n.isObj===!1){t.items=n.items.toArray(),t.index=0;var r,o=n.items;for(i=0;i<o.length;i++)if(r=o[i],r.parsed&&(r=r.el[0]),r===n.el[0]){t.index=i;break}}else t.items=e.isArray(n.items)?n.items:[n.items],t.index=n.index||0;if(t.isOpen)return void t.updateItemHTML();t.types=[],s="",n.mainEl&&n.mainEl.length?t.ev=n.mainEl.eq(0):t.ev=a,n.key?(t.popupsCache[n.key]||(t.popupsCache[n.key]={}),t.currTemplate=t.popupsCache[n.key]):t.currTemplate={},t.st=e.extend(!0,{},e.magnificPopup.defaults,n),t.fixedContentPos="auto"===t.st.fixedContentPos?!t.probablyMobile:t.st.fixedContentPos,t.st.modal&&(t.st.closeOnContentClick=!1,t.st.closeOnBgClick=!1,t.st.showCloseBtn=!1,t.st.enableEscapeKey=!1),t.bgOverlay||(t.bgOverlay=S("bg").on("click"+g,function(){t.close()}),t.wrap=S("wrap").attr("tabindex",-1).on("click"+g,function(e){t._checkIfClose(e.target)&&t.close()}),t.container=S("container",t.wrap)),t.contentContainer=S("content"),t.st.preloader&&(t.preloader=S("preloader",t.container,t.st.tLoading));var l=e.magnificPopup.modules;for(i=0;i<l.length;i++){var p=l[i];p=p.charAt(0).toUpperCase()+p.slice(1),t["init"+p].call(t)}E("BeforeOpen"),t.st.showCloseBtn&&(t.st.closeBtnInside?(C(c,function(e,t,n,i){n.close_replaceWith=k(i.type)}),s+=" error-btn-in"):t.wrap.append(k())),t.st.alignTop&&(s+=" mfp-align-top"),t.fixedContentPos?t.wrap.css({overflow:t.st.overflowY,overflowX:"hidden",overflowY:t.st.overflowY}):t.wrap.css({top:T.scrollTop(),position:"absolute"}),(t.st.fixedBgPos===!1||"auto"===t.st.fixedBgPos&&!t.fixedContentPos)&&t.bgOverlay.css({height:a.height(),position:"absolute"}),t.st.enableEscapeKey&&a.on("keyup"+g,function(e){27===e.keyCode&&t.close()}),T.on("resize"+g,function(){t.updateSize()}),t.st.closeOnContentClick||(s+=" mfp-auto-cursor"),s&&t.wrap.addClass(s);var u=t.wH=T.height(),d={};if(t.fixedContentPos&&t._hasScrollBar(u)){var h=t._getScrollbarSize();h&&(d.marginRight=h)}t.fixedContentPos&&(t.isIE7?e("body, html").css("overflow","hidden"):d.overflow="hidden");
var m=t.st.mainClass;return t.isIE7&&(m+=" mfp-ie7"),m&&t._addClassToMFP(m),t.updateItemHTML(),E("BuildControls"),e("html").css(d),t.bgOverlay.add(t.wrap).prependTo(document.body),t._lastFocusedEl=document.activeElement,setTimeout(function(){t.content?(t._addClassToMFP(v),t._setFocus()):t.bgOverlay.addClass(v),a.on("focusin"+g,t._onFocusIn)},16),t.isOpen=!0,t.updateSize(u),E(f),n},close:function(){t.isOpen&&(E(p),t.isOpen=!1,t.st.removalDelay&&!t.isLowIE&&t.supportsTransition?(t._addClassToMFP(y),setTimeout(function(){t._close()},t.st.removalDelay)):t._close())},_close:function(){E(l);var n=y+" "+v+" ";if(t.bgOverlay.detach(),t.wrap.detach(),t.container.empty(),t.st.mainClass&&(n+=t.st.mainClass+" "),t._removeClassFromMFP(n),t.fixedContentPos){var i={marginRight:""};t.isIE7?e("body, html").css("overflow",""):i.overflow="",e("html").css(i)}a.off("keyup"+g+" focusin"+g),t.ev.off(g),t.wrap.attr("class","mfp-wrap").removeAttr("style"),t.bgOverlay.attr("class","mfp-bg"),t.container.attr("class","mfp-container"),!t.st.showCloseBtn||t.st.closeBtnInside&&t.currTemplate[t.currItem.type]!==!0||t.currTemplate.closeBtn&&t.currTemplate.closeBtn.detach(),t._lastFocusedEl&&e(t._lastFocusedEl).focus(),t.currItem=null,t.content=null,t.currTemplate=null,t.prevHeight=0,E(u)},updateSize:function(e){if(t.isIOS){var n=document.documentElement.clientWidth/window.innerWidth,i=window.innerHeight*n;t.wrap.css("height",i),t.wH=i}else t.wH=e||T.height();t.fixedContentPos||t.wrap.css("height",t.wH),E("Resize")},updateItemHTML:function(){var n=t.items[t.index];t.contentContainer.detach(),t.content&&t.content.detach(),n.parsed||(n=t.parseEl(t.index));var i=n.type;if(E("BeforeChange",[t.currItem?t.currItem.type:"",i]),t.currItem=n,!t.currTemplate[i]){var a=!!t.st[i]&&t.st[i].markup;E("FirstMarkupParse",a),a?t.currTemplate[i]=e(a):t.currTemplate[i]=!0}r&&r!==n.type&&t.container.removeClass("mfp-"+r+"-holder");var s=t["get"+i.charAt(0).toUpperCase()+i.slice(1)](n,t.currTemplate[i]);t.appendContent(s,i),n.preloaded=!0,E(h,n),r=n.type,t.container.prepend(t.contentContainer),E("AfterChange")},appendContent:function(e,n){t.content=e,e?t.st.showCloseBtn&&t.st.closeBtnInside&&t.currTemplate[n]===!0?t.content.find(".error").length||t.content.append(k()):t.content=e:t.content="",E(d),t.container.addClass("mfp-"+n+"-holder"),t.contentContainer.append(t.content)},parseEl:function(n){var i=t.items[n],a=i.type;if(i=i.tagName?{el:e(i)}:{data:i,src:i.src},i.el){for(var r=t.types,s=0;s<r.length;s++)if(i.el.hasClass("mfp-"+r[s])){a=r[s];break}i.src=i.el.attr("data-mfp-src"),i.src||(i.src=i.el.attr("href"))}return i.type=a||t.st.type||"inline",i.index=n,i.parsed=!0,t.items[n]=i,E("ElementParse",i),t.items[n]},addGroup:function(e,n){var i=function(i){i.mfpEl=this,t._openClick(i,e,n)};n||(n={});var a="click.magnificPopup";n.mainEl=e,n.items?(n.isObj=!0,e.off(a).on(a,i)):(n.isObj=!1,n.delegate?e.off(a).on(a,n.delegate,i):(n.items=e,e.off(a).on(a,i)))},_openClick:function(n,i,a){var r=void 0!==a.midClick?a.midClick:e.magnificPopup.defaults.midClick;if(r||2!==n.which&&!n.ctrlKey&&!n.metaKey){var s=void 0!==a.disableOn?a.disableOn:e.magnificPopup.defaults.disableOn;if(s)if(e.isFunction(s)){if(!s.call(t))return!0}else if(T.width()<s)return!0;n.type&&(n.preventDefault(),t.isOpen&&n.stopPropagation()),a.el=e(n.mfpEl),a.delegate&&(a.items=i.find(a.delegate)),t.open(a)}},updateStatus:function(e,i){if(t.preloader){n!==e&&t.container.removeClass("mfp-s-"+n),i||"loading"!==e||(i=t.st.tLoading);var a={status:e,text:i};E("UpdateStatus",a),e=a.status,i=a.text,t.preloader.html(i),t.preloader.find("a").on("click",function(e){e.stopImmediatePropagation()}),t.container.addClass("mfp-s-"+e),n=e}},_checkIfClose:function(n){if(!e(n).hasClass(w)){var i=t.st.closeOnContentClick,a=t.st.closeOnBgClick;if(i&&a)return!0;if(!t.content||e(n).hasClass("error")||t.preloader&&n===t.preloader[0])return!0;if(n===t.content[0]||e.contains(t.content[0],n)){if(i)return!0}else if(a&&e.contains(document,n))return!0;return!1}},_addClassToMFP:function(e){t.bgOverlay.addClass(e),t.wrap.addClass(e)},_removeClassFromMFP:function(e){this.bgOverlay.removeClass(e),t.wrap.removeClass(e)},_hasScrollBar:function(e){return(t.isIE7?a.height():document.body.scrollHeight)>(e||T.height())},_setFocus:function(){(t.st.focus?t.content.find(t.st.focus).eq(0):t.wrap).focus()},_onFocusIn:function(n){if(n.target!==t.wrap[0]&&!e.contains(t.wrap[0],n.target))return t._setFocus(),!1},_parseMarkup:function(t,n,i){var a;i.data&&(n=e.extend(i.data,n)),E(c,[t,n,i]),e.each(n,function(e,n){if(void 0===n||n===!1)return!0;if(a=e.split("_"),a.length>1){var i=t.find(g+"-"+a[0]);if(i.length>0){var r=a[1];"replaceWith"===r?i[0]!==n[0]&&i.replaceWith(n):"img"===r?i.is("img")?i.attr("src",n):i.replaceWith('<img src="'+n+'" class="'+i.attr("class")+'" />'):i.attr(a[1],n)}}else t.find(g+"-"+e).html(n)})},_getScrollbarSize:function(){if(void 0===t.scrollbarSize){var e=document.createElement("div");e.id="mfp-sbm",e.style.cssText="width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;",document.body.appendChild(e),t.scrollbarSize=e.offsetWidth-e.clientWidth,document.body.removeChild(e)}return t.scrollbarSize}},e.magnificPopup={instance:null,proto:b.prototype,modules:[],open:function(t,n){return I(),t=t?e.extend(!0,{},t):{},t.isObj=!0,t.index=n||0,this.instance.open(t)},close:function(){return e.magnificPopup.instance&&e.magnificPopup.instance.close()},registerModule:function(t,n){n.options&&(e.magnificPopup.defaults[t]=n.options),e.extend(this.proto,n.proto),this.modules.push(t)},defaults:{disableOn:0,key:null,midClick:!1,mainClass:"",preloader:!0,focus:"",closeOnContentClick:!1,closeOnBgClick:!0,closeBtnInside:!0,showCloseBtn:!0,enableEscapeKey:!0,modal:!1,alignTop:!1,removalDelay:0,fixedContentPos:"auto",fixedBgPos:"auto",overflowY:"auto",closeMarkup:'<button title="%title%" type="button" class="error">&times;</button>',tClose:"Close (Esc)",tLoading:"Loading..."}},e.fn.magnificPopup=function(n){I();var i=e(this);if("string"==typeof n)if("open"===n){var a,r=x?i.data("magnificPopup"):i[0].magnificPopup,s=parseInt(arguments[1],10)||0;r.items?a=r.items[s]:(a=i,r.delegate&&(a=a.find(r.delegate)),a=a.eq(s)),t._openClick({mfpEl:a},i,r)}else t.isOpen&&t[n].apply(t,Array.prototype.slice.call(arguments,1));else n=e.extend(!0,{},n),x?i.data("magnificPopup",n):i[0].magnificPopup=n,t.addGroup(i,n);return i};var P,D,z,A="inline",N=function(){z&&(D.after(z.addClass(P)).detach(),z=null)};e.magnificPopup.registerModule(A,{options:{hiddenClass:"hide",markup:"",tNotFound:"Content not found"},proto:{initInline:function(){t.types.push(A),C(l+"."+A,function(){N()})},getInline:function(n,i){if(N(),n.src){var a=t.st.inline,r=e(n.src);if(r.length){var s=r[0].parentNode;s&&s.tagName&&(D||(P=a.hiddenClass,D=S(P),P="mfp-"+P),z=r.after(D).detach().removeClass(P)),t.updateStatus("ready")}else t.updateStatus("error",a.tNotFound),r=e("<div>");return n.inlineElement=r,r}return t.updateStatus("ready"),t._parseMarkup(i,{},n),i}}});var L,O="ajax",$=function(){L&&i.removeClass(L)},H=function(){$(),t.req&&t.req.abort()};e.magnificPopup.registerModule(O,{options:{settings:null,cursor:"mfp-ajax-cur",tError:'<a href="%url%">The content</a> could not be loaded.'},proto:{initAjax:function(){t.types.push(O),L=t.st.ajax.cursor,C(l+"."+O,H),C("BeforeChange."+O,H)},getAjax:function(n){L&&i.addClass(L),t.updateStatus("loading");var a=e.extend({url:n.src,success:function(i,a,r){var s={data:i,xhr:r};E("ParseAjax",s),t.appendContent(e(s.data),O),n.finished=!0,$(),t._setFocus(),setTimeout(function(){t.wrap.addClass(v)},16),t.updateStatus("ready"),E("AjaxContentAdded")},error:function(){$(),n.finished=n.loadError=!0,t.updateStatus("error",t.st.ajax.tError.replace("%url%",n.src))}},t.st.ajax.settings);return t.req=e.ajax(a),""}}});var B,j=function(n){if(n.data&&void 0!==n.data.title)return n.data.title;var i=t.st.image.titleSrc;if(i){if(e.isFunction(i))return i.call(t,n);if(n.el)return n.el.attr(i)||""}return""};e.magnificPopup.registerModule("image",{options:{markup:'<div class="mfp-figure"><div class="error"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',cursor:"mfp-zoom-out-cur",titleSrc:"title",verticalFit:!0,tError:'<a href="%url%">The image</a> could not be loaded.'},proto:{initImage:function(){var e=t.st.image,n=".image";t.types.push("image"),C(f+n,function(){"image"===t.currItem.type&&e.cursor&&i.addClass(e.cursor)}),C(l+n,function(){e.cursor&&i.removeClass(e.cursor),T.off("resize"+g)}),C("Resize"+n,t.resizeImage),t.isLowIE&&C("AfterChange",t.resizeImage)},resizeImage:function(){var e=t.currItem;if(e&&e.img&&t.st.image.verticalFit){var n=0;t.isLowIE&&(n=parseInt(e.img.css("padding-top"),10)+parseInt(e.img.css("padding-bottom"),10)),e.img.css("max-height",t.wH-n)}},_onImageHasSize:function(e){e.img&&(e.hasSize=!0,B&&clearInterval(B),e.isCheckingImgSize=!1,E("ImageHasSize",e),e.imgHidden&&(t.content&&t.content.removeClass("mfp-loading"),e.imgHidden=!1))},findImageSize:function(e){var n=0,i=e.img[0],a=function(r){B&&clearInterval(B),B=setInterval(function(){return i.naturalWidth>0?void t._onImageHasSize(e):(n>200&&clearInterval(B),n++,void(3===n?a(10):40===n?a(50):100===n&&a(500)))},r)};a(1)},getImage:function(n,i){var a=0,r=function(){n&&(n.img[0].complete?(n.img.off(".mfploader"),n===t.currItem&&(t._onImageHasSize(n),t.updateStatus("ready")),n.hasSize=!0,n.loaded=!0,E("ImageLoadComplete")):(a++,a<200?setTimeout(r,100):s()))},s=function(){n&&(n.img.off(".mfploader"),n===t.currItem&&(t._onImageHasSize(n),t.updateStatus("error",o.tError.replace("%url%",n.src))),n.hasSize=!0,n.loaded=!0,n.loadError=!0)},o=t.st.image,l=i.find(".mfp-img");if(l.length){var p=document.createElement("img");p.className="mfp-img",n.img=e(p).on("load.mfploader",r).on("error.mfploader",s),p.src=n.src,l.is("img")&&(n.img=n.img.clone()),n.img[0].naturalWidth>0&&(n.hasSize=!0)}return t._parseMarkup(i,{title:j(n),img_replaceWith:n.img},n),t.resizeImage(),n.hasSize?(B&&clearInterval(B),n.loadError?(i.addClass("mfp-loading"),t.updateStatus("error",o.tError.replace("%url%",n.src))):(i.removeClass("mfp-loading"),t.updateStatus("ready")),i):(t.updateStatus("loading"),n.loading=!0,n.hasSize||(n.imgHidden=!0,i.addClass("mfp-loading"),t.findImageSize(n)),i)}}});var R,F=function(){return void 0===R&&(R=void 0!==document.createElement("p").style.MozTransform),R};e.magnificPopup.registerModule("zoom",{options:{enabled:!1,easing:"ease-in-out",duration:300,opener:function(e){return e.is("img")?e:e.find("img")}},proto:{initZoom:function(){var e,n=t.st.zoom,i=".zoom";if(n.enabled&&t.supportsTransition){var a,r,s=n.duration,o=function(e){var t=e.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"),i="all "+n.duration/1e3+"s "+n.easing,a={position:"fixed",zIndex:9999,left:0,top:0,"-webkit-backface-visibility":"hidden"},r="transition";return a["-webkit-"+r]=a["-moz-"+r]=a["-o-"+r]=a[r]=i,t.css(a),t},u=function(){t.content.css("visibility","visible")};C("BuildControls"+i,function(){if(t._allowZoom()){if(clearTimeout(a),t.content.css("visibility","hidden"),e=t._getItemToZoom(),!e)return void u();r=o(e),r.css(t._getOffset()),t.wrap.append(r),a=setTimeout(function(){r.css(t._getOffset(!0)),a=setTimeout(function(){u(),setTimeout(function(){r.remove(),e=r=null,E("ZoomAnimationEnded")},16)},s)},16)}}),C(p+i,function(){if(t._allowZoom()){if(clearTimeout(a),t.st.removalDelay=s,!e){if(e=t._getItemToZoom(),!e)return;r=o(e)}r.css(t._getOffset(!0)),t.wrap.append(r),t.content.css("visibility","hidden"),setTimeout(function(){r.css(t._getOffset())},16)}}),C(l+i,function(){t._allowZoom()&&(u(),r&&r.remove(),e=null)})}},_allowZoom:function(){return"image"===t.currItem.type},_getItemToZoom:function(){return!!t.currItem.hasSize&&t.currItem.img},_getOffset:function(n){var i;i=n?t.currItem.img:t.st.zoom.opener(t.currItem.el||t.currItem);var a=i.offset(),r=parseInt(i.css("padding-top"),10),s=parseInt(i.css("padding-bottom"),10);a.top-=e(window).scrollTop()-r;var o={width:i.width(),height:(x?i.innerHeight():i[0].offsetHeight)-s-r};return F()?o["-moz-transform"]=o.transform="translate("+a.left+"px,"+a.top+"px)":(o.left=a.left,o.top=a.top),o}}});var q="iframe",W="//about:blank",X=function(e){if(t.currTemplate[q]){var n=t.currTemplate[q].find("iframe");n.length&&(e||(n[0].src=W),t.isIE8&&n.css("display",e?"block":"none"))}};e.magnificPopup.registerModule(q,{options:{markup:'<div class="mfp-iframe-scaler"><div class="error"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',srcAction:"iframe_src",patterns:{youtube:{index:"youtube.com",id:"v=",src:"//www.youtube.com/embed/%id%?autoplay=1"},vimeo:{index:"vimeo.com/",id:"/",src:"//player.vimeo.com/video/%id%?autoplay=1"},gmaps:{index:"//maps.google.",src:"%id%&output=embed"}}},proto:{initIframe:function(){t.types.push(q),C("BeforeChange",function(e,t,n){t!==n&&(t===q?X():n===q&&X(!0))}),C(l+"."+q,function(){X()})},getIframe:function(n,i){var a=n.src,r=t.st.iframe;e.each(r.patterns,function(){if(a.indexOf(this.index)>-1)return this.id&&(a="string"==typeof this.id?a.substr(a.lastIndexOf(this.id)+this.id.length,a.length):this.id.call(this,a)),a=this.src.replace("%id%",a),!1});var s={};return r.srcAction&&(s[r.srcAction]=a),t._parseMarkup(i,s,n),t.updateStatus("ready"),i}}});var _=function(e){var n=t.items.length;return e>n-1?e-n:e<0?n+e:e},G=function(e,t,n){return e.replace(/%curr%/gi,t+1).replace(/%total%/gi,n)};e.magnificPopup.registerModule("gallery",{options:{enabled:!1,arrowMarkup:'<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',preload:[0,2],navigateByImgClick:!0,arrows:!0,tPrev:"Previous (Left arrow key)",tNext:"Next (Right arrow key)",tCounter:"%curr% of %total%"},proto:{initGallery:function(){var n=t.st.gallery,i=".mfp-gallery",r=Boolean(e.fn.mfpFastClick);return t.direction=!0,!(!n||!n.enabled)&&(s+=" mfp-gallery",C(f+i,function(){n.navigateByImgClick&&t.wrap.on("click"+i,".mfp-img",function(){if(t.items.length>1)return t.next(),!1}),a.on("keydown"+i,function(e){37===e.keyCode?t.prev():39===e.keyCode&&t.next()})}),C("UpdateStatus"+i,function(e,n){n.text&&(n.text=G(n.text,t.currItem.index,t.items.length))}),C(c+i,function(e,i,a,r){var s=t.items.length;a.counter=s>1?G(n.tCounter,r.index,s):""}),C("BuildControls"+i,function(){if(t.items.length>1&&n.arrows&&!t.arrowLeft){var i=n.arrowMarkup,a=t.arrowLeft=e(i.replace(/%title%/gi,n.tPrev).replace(/%dir%/gi,"left")).addClass(w),s=t.arrowRight=e(i.replace(/%title%/gi,n.tNext).replace(/%dir%/gi,"right")).addClass(w),o=r?"mfpFastClick":"click";a[o](function(){t.prev()}),s[o](function(){t.next()}),t.isIE7&&(S("b",a[0],!1,!0),S("a",a[0],!1,!0),S("b",s[0],!1,!0),S("a",s[0],!1,!0)),t.container.append(a.add(s))}}),C(h+i,function(){t._preloadTimeout&&clearTimeout(t._preloadTimeout),t._preloadTimeout=setTimeout(function(){t.preloadNearbyImages(),t._preloadTimeout=null},16)}),void C(l+i,function(){a.off(i),t.wrap.off("click"+i),t.arrowLeft&&r&&t.arrowLeft.add(t.arrowRight).destroyMfpFastClick(),t.arrowRight=t.arrowLeft=null}))},next:function(){t.direction=!0,t.index=_(t.index+1),t.updateItemHTML()},prev:function(){t.direction=!1,t.index=_(t.index-1),t.updateItemHTML()},goTo:function(e){t.direction=e>=t.index,t.index=e,t.updateItemHTML()},preloadNearbyImages:function(){var e,n=t.st.gallery.preload,i=Math.min(n[0],t.items.length),a=Math.min(n[1],t.items.length);for(e=1;e<=(t.direction?a:i);e++)t._preloadItem(t.index+e);for(e=1;e<=(t.direction?i:a);e++)t._preloadItem(t.index-e)},_preloadItem:function(n){if(n=_(n),!t.items[n].preloaded){var i=t.items[n];i.parsed||(i=t.parseEl(n)),E("LazyLoad",i),"image"===i.type&&(i.img=e('<img class="mfp-img" />').on("load.mfploader",function(){i.hasSize=!0}).on("error.mfploader",function(){i.hasSize=!0,i.loadError=!0,E("LazyLoadError",i)}).attr("src",i.src)),i.preloaded=!0}}}});var Y="retina";e.magnificPopup.registerModule(Y,{options:{replaceSrc:function(e){return e.src.replace(/\.\w+$/,function(e){return"@2x"+e})},ratio:1},proto:{initRetina:function(){if(window.devicePixelRatio>1){var e=t.st.retina,n=e.ratio;n=isNaN(n)?n():n,n>1&&(C("ImageHasSize."+Y,function(e,t){t.img.css({"max-width":t.img[0].naturalWidth/n,width:"100%"})}),C("ElementParse."+Y,function(t,i){i.src=e.replaceSrc(i,n)}))}}}}),function(){var t=1e3,n="ontouchstart"in window,i=function(){T.off("touchmove"+r+" touchend"+r)},a="mfpFastClick",r="."+a;e.fn.mfpFastClick=function(a){return e(this).each(function(){var s,o=e(this);if(n){var l,p,u,d,c,f;o.on("touchstart"+r,function(e){d=!1,f=1,c=e.originalEvent?e.originalEvent.touches[0]:e.touches[0],p=c.clientX,u=c.clientY,T.on("touchmove"+r,function(e){c=e.originalEvent?e.originalEvent.touches:e.touches,f=c.length,c=c[0],(Math.abs(c.clientX-p)>10||Math.abs(c.clientY-u)>10)&&(d=!0,i())}).on("touchend"+r,function(e){i(),d||f>1||(s=!0,e.preventDefault(),clearTimeout(l),l=setTimeout(function(){s=!1},t),a())})})}o.on("click"+r,function(){s||a()})})},e.fn.destroyMfpFastClick=function(){e(this).off("touchstart"+r+" click"+r),n&&T.off("touchmove"+r+" touchend"+r)}}(),I()}(window.jQuery||window.Zepto),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(window.jQuery||window.Zepto)}(function(e){var t=function(t,n,i){var a,r,s=this;t=e(t),n="function"==typeof n?n(t.val(),void 0,t,i):n;var o={getCaret:function(){try{var e,n=0,i=t.get(0),a=document.selection,r=i.selectionStart;return a&&!~navigator.appVersion.indexOf("MSIE 10")?(e=a.createRange(),e.moveStart("character",t.is("input")?-t.val().length:-t.text().length),n=e.text.length):(r||"0"===r)&&(n=r),n}catch(e){}},setCaret:function(e){try{if(t.is(":focus")){var n,i=t.get(0);i.setSelectionRange?i.setSelectionRange(e,e):i.createTextRange&&(n=i.createTextRange(),n.collapse(!0),n.moveEnd("character",e),n.moveStart("character",e),n.select())}}catch(e){}},events:function(){t.on("keydown.mask",function(){a=o.val()}).on("keyup.mask",o.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){t.keydown().keyup()},100)}).on("change.mask",function(){t.data("changed",!0)}).on("blur.mask",function(){a===t.val()||t.data("changed")||t.trigger("change"),t.data("changed",!1)}).on("focusout.mask",function(){i.clearIfNotMatch&&!r.test(o.val())&&o.val("")})},getRegexMask:function(){for(var e,t,i,a,r=[],o=0;o<n.length;o++)(e=s.translation[n[o]])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),i=e.optional,(e=e.recursive)?(r.push(n[o]),a={digit:n[o],pattern:t}):r.push(i||e?t+"?":t)):r.push(n[o].replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return r=r.join(""),a&&(r=r.replace(new RegExp("("+a.digit+"(.*"+a.digit+")?)"),"($1)?").replace(new RegExp(a.digit,"g"),a.pattern)),new RegExp(r)},destroyEvents:function(){t.off("keydown keyup paste drop change blur focusout DOMNodeInserted ".split(" ").join(".mask ")).removeData("changeCalled")},val:function(e){var n=t.is("input");return 0<arguments.length?n?t.val(e):t.text(e):n?t.val():t.text()},getMCharsBeforeCount:function(e,t){for(var i=0,a=0,r=n.length;a<r&&a<e;a++)s.translation[n.charAt(a)]||(e=t?e+1:e,i++);return i},caretPos:function(e,t,i,a){return s.translation[n.charAt(Math.min(e-1,n.length-1))]?Math.min(e+i-t-a,i):o.caretPos(e+1,t,i,a)},behaviour:function(t){t=t||window.event;var n=t.keyCode||t.which;if(-1===e.inArray(n,s.byPassKeys)){var i=o.getCaret(),a=o.val(),r=a.length,l=i<r,p=o.getMasked(),u=p.length,d=o.getMCharsBeforeCount(u-1)-o.getMCharsBeforeCount(r-1);return p!==a&&o.val(p),!l||65===n&&t.ctrlKey||(8!==n&&46!==n&&(i=o.caretPos(i,r,u,d)),o.setCaret(i)),o.callbacks(t)}},getMasked:function(e){var t,a,r=[],l=o.val(),p=0,u=n.length,d=0,c=l.length,f=1,h="push",m=-1;for(i.reverse?(h="unshift",f=-1,t=0,p=u-1,d=c-1,a=function(){return-1<p&&-1<d}):(t=u-1,a=function(){return p<u&&d<c});a();){var g=n.charAt(p),v=l.charAt(d),y=s.translation[g];y?(v.match(y.pattern)?(r[h](v),y.recursive&&(-1===m?m=p:p===t&&(p=m-f),t===m&&(p-=f)),p+=f):y.optional&&(p+=f,d-=f),d+=f):(e||r[h](g),v===g&&(d+=f),p+=f)}return e=n.charAt(t),u!==c+1||s.translation[e]||r.push(e),r.join("")},callbacks:function(e){var r=o.val(),s=r!==a;!0===s&&"function"==typeof i.onChange&&i.onChange(r,e,t,i),!0===s&&"function"==typeof i.onKeyPress&&i.onKeyPress(r,e,t,i),"function"==typeof i.onComplete&&r.length===n.length&&i.onComplete(r,e,t,i)}};s.mask=n,s.options=i,s.remove=function(){var e;return o.destroyEvents(),o.val(s.getCleanVal()).removeAttr("maxlength"),e=o.getCaret(),o.setCaret(e-o.getMCharsBeforeCount(e)),t},s.getCleanVal=function(){return o.getMasked(!0)},s.init=function(){i=i||{},s.byPassKeys=[9,16,17,18,36,37,38,39,40,91],s.translation={0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}},s.translation=e.extend({},s.translation,i.translation),s=e.extend(!0,{},s,i),r=o.getRegexMask(),!1!==i.maxlength&&t.attr("maxlength",n.length),i.placeholder&&t.attr("placeholder",i.placeholder),t.attr("autocomplete","off"),o.destroyEvents(),o.events();var a=o.getCaret();o.val(o.getMasked()),o.setCaret(a+o.getMCharsBeforeCount(a,!0))}()},n={},i=function(){var t=e(this),n={};t.attr("data-mask-reverse")&&(n.reverse=!0),"false"===t.attr("data-mask-maxlength")&&(n.maxlength=!1),t.attr("data-mask-clearifnotmatch")&&(n.clearIfNotMatch=!0),t.mask(t.attr("data-mask"),n)};e.fn.mask=function(i,a){var r=this.selector,s=function(){var n=e(this).data("mask"),r=JSON.stringify;if("object"!=typeof n||r(n.options)!==r(a)||n.mask!==i)return e(this).data("mask",new t(this,i,a))};this.each(s),r&&!n[r]&&(n[r]=!0,setTimeout(function(){e(document).on("DOMNodeInserted.mask",r,s)},500))},e.fn.unmask=function(){try{return this.each(function(){e(this).data("mask").remove().removeData("mask")})}catch(e){}},e.fn.cleanVal=function(){return this.data("mask").getCleanVal()},e("*[data-mask]").each(i),e(document).on("DOMNodeInserted.mask","*[data-mask]",i)}),window.onload=function(){new Swiper(".swiper-container",{pagination:".swiper-pagination",nextButton:".swiper-button-next",prevButton:".swiper-button-prev",paginationClickable:!0,spaceBetween:30,centeredSlides:!0,autoplay:4e3,autoplayDisableOnInteraction:!1})};var map,styles={default:null,silver:[{elementType:"geometry",stylers:[{color:"#000000"}]},{elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{elementType:"labels.text.stroke",stylers:[{color:"#626262"}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{color:"#ffffff"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"administrative.province",elementType:"geometry.stroke",stylers:[{color:"#4b6878"}]},{featureType:"landscape.man_made",elementType:"geometry.fill",stylers:[{color:"#000000"}]},{featureType:"landscape.man_made",elementType:"geometry.stroke",stylers:[{color:"#828282"}]},{featureType:"landscape.natural",elementType:"geometry",stylers:[{color:"#004800"}]},{featureType:"landscape.natural.landcover",elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#454545"}]},{featureType:"poi",elementType:"geometry.fill",stylers:[{color:"#4b4b4b"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"poi",elementType:"labels.text.stroke",stylers:[{color:"#242424"}]},{featureType:"poi.park",elementType:"geometry.fill",stylers:[{color:"#002f17"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#3C7680"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#616161"}]},{featureType:"road",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"road",elementType:"labels.text.stroke",stylers:[{color:"#2e2e2e"}]},{featureType:"road.arterial",elementType:"geometry.fill",stylers:[{color:"#2e2e2e"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#606060"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#4d4d4d"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#c0c0c0"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#c0c0c0"}]},{featureType:"road.highway",elementType:"labels.text.stroke",stylers:[{color:"#333333"}]},{featureType:"road.local",elementType:"geometry.fill",stylers:[{color:"#313131"}]},{featureType:"road.local",elementType:"geometry.stroke",stylers:[{color:"#bbbbbb"}]},{featureType:"transit",elementType:"labels.text.fill",stylers:[{color:"#98a5be"}]},{featureType:"transit",elementType:"labels.text.stroke",stylers:[{color:"#1d2c4d"}]},{featureType:"transit.line",elementType:"geometry.fill",stylers:[{color:"#727272"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#c0c0c0"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#0e1626"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#4e6d70"}]}]};$(document).ready(function(){$(".popup").magnificPopup(),$(".date").mask("00/00/0000"),$(".phone_us").mask("+38 (000) 000-00-00"),$("#header").removeClass("default"),$(window).scroll(function(){$(this).scrollTop()>0?$("#header").addClass("default").fadeIn("fast"):$("#header").removeClass("default").fadeIn("fast")});var e=800,t=$("#list-images li"),n=t.length;t.wrapAll('<div id="slide-wrap"></div>').css({float:"left",width:e}),$("#slide-wrap").css({width:e*n}),$("#list-links li").hover(function(){$("#list-links li").removeClass("hover");var t=$(this).index("#list-links li");$(this).parent().addClass("hover"),$("#slide-wrap").stop().animate({marginLeft:e*-t})}),$('a[href^="#"]').click(function(){var e=$(this).attr("href");return $("body").animate({scrollTop:$(e).offset().top-55},1e3),!1}),function(){"use strict";function e(e){e.fn.swiper=function(t){var i;return e(this).each(function(){var e=new n(this,t);i||(i=e)}),i}}var t,n=function(e,a){function s(e){return Math.floor(e)}function o(){var e=C.params.autoplay,t=C.slides.eq(C.activeIndex);t.attr("data-swiper-autoplay")&&(e=t.attr("data-swiper-autoplay")||C.params.autoplay),C.autoplayTimeoutId=setTimeout(function(){C.params.loop?(C.fixLoop(),C._slideNext(),C.emit("onAutoplay",C)):C.isEnd?a.autoplayStopOnLast?C.stopAutoplay():(C._slideTo(0),C.emit("onAutoplay",C)):(C._slideNext(),C.emit("onAutoplay",C))},e)}function l(e,n){var i=t(e.target);if(!i.is(n))if("string"==typeof n)i=i.parents(n);else if(n.nodeType){var a;return i.parents().each(function(e,t){t===n&&(a=n)}),a?n:void 0}if(0!==i.length)return i[0]}function p(e,t){t=t||{};var n=window.MutationObserver||window.WebkitMutationObserver,i=new n(function(e){e.forEach(function(e){C.onResize(!0),C.emit("onObserverUpdate",C,e)})});i.observe(e,{attributes:"undefined"==typeof t.attributes||t.attributes,childList:"undefined"==typeof t.childList||t.childList,characterData:"undefined"==typeof t.characterData||t.characterData}),C.observers.push(i)}function u(e){e.originalEvent&&(e=e.originalEvent);var t=e.keyCode||e.charCode;if(!C.params.allowSwipeToNext&&(C.isHorizontal()&&39===t||!C.isHorizontal()&&40===t))return!1;if(!C.params.allowSwipeToPrev&&(C.isHorizontal()&&37===t||!C.isHorizontal()&&38===t))return!1;if(!(e.shiftKey||e.altKey||e.ctrlKey||e.metaKey||document.activeElement&&document.activeElement.nodeName&&("input"===document.activeElement.nodeName.toLowerCase()||"textarea"===document.activeElement.nodeName.toLowerCase()))){if(37===t||39===t||38===t||40===t){var n=!1;if(C.container.parents("."+C.params.slideClass).length>0&&0===C.container.parents("."+C.params.slideActiveClass).length)return;var i={left:window.pageXOffset,top:window.pageYOffset},a=window.innerWidth,r=window.innerHeight,s=C.container.offset();C.rtl&&(s.left=s.left-C.container[0].scrollLeft);for(var o=[[s.left,s.top],[s.left+C.width,s.top],[s.left,s.top+C.height],[s.left+C.width,s.top+C.height]],l=0;l<o.length;l++){var p=o[l];p[0]>=i.left&&p[0]<=i.left+a&&p[1]>=i.top&&p[1]<=i.top+r&&(n=!0)}if(!n)return}C.isHorizontal()?(37!==t&&39!==t||(e.preventDefault?e.preventDefault():e.returnValue=!1),(39===t&&!C.rtl||37===t&&C.rtl)&&C.slideNext(),(37===t&&!C.rtl||39===t&&C.rtl)&&C.slidePrev()):(38!==t&&40!==t||(e.preventDefault?e.preventDefault():e.returnValue=!1),40===t&&C.slideNext(),38===t&&C.slidePrev())}}function d(){var e="onwheel",t=e in document;if(!t){var n=document.createElement("div");n.setAttribute(e,"return;"),t="function"==typeof n[e]}return!t&&document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0&&(t=document.implementation.hasFeature("Events.wheel","3.0")),t}function c(e){e.originalEvent&&(e=e.originalEvent);var t=0,n=C.rtl?-1:1,i=f(e);if(C.params.mousewheelForceToAxis)if(C.isHorizontal()){if(!(Math.abs(i.pixelX)>Math.abs(i.pixelY)))return;t=i.pixelX*n}else{if(!(Math.abs(i.pixelY)>Math.abs(i.pixelX)))return;t=i.pixelY}else t=Math.abs(i.pixelX)>Math.abs(i.pixelY)?-i.pixelX*n:-i.pixelY;if(0!==t){if(C.params.mousewheelInvert&&(t=-t),C.params.freeMode){var a=C.getWrapperTranslate()+t*C.params.mousewheelSensitivity,r=C.isBeginning,s=C.isEnd;if(a>=C.minTranslate()&&(a=C.minTranslate()),a<=C.maxTranslate()&&(a=C.maxTranslate()),C.setWrapperTransition(0),C.setWrapperTranslate(a),C.updateProgress(),C.updateActiveIndex(),(!r&&C.isBeginning||!s&&C.isEnd)&&C.updateClasses(),C.params.freeModeSticky?(clearTimeout(C.mousewheel.timeout),C.mousewheel.timeout=setTimeout(function(){C.slideReset()},300)):C.params.lazyLoading&&C.lazy&&C.lazy.load(),C.emit("onScroll",C,e),C.params.autoplay&&C.params.autoplayDisableOnInteraction&&C.stopAutoplay(),0===a||a===C.maxTranslate())return}else{if((new window.Date).getTime()-C.mousewheel.lastScrollTime>60)if(t<0)if(C.isEnd&&!C.params.loop||C.animating){if(C.params.mousewheelReleaseOnEdges)return!0}else C.slideNext(),C.emit("onScroll",C,e);else if(C.isBeginning&&!C.params.loop||C.animating){if(C.params.mousewheelReleaseOnEdges)return!0}else C.slidePrev(),C.emit("onScroll",C,e);C.mousewheel.lastScrollTime=(new window.Date).getTime()}return e.preventDefault?e.preventDefault():e.returnValue=!1,!1}}function f(e){var t=10,n=40,i=800,a=0,r=0,s=0,o=0;return"detail"in e&&(r=e.detail),"wheelDelta"in e&&(r=-e.wheelDelta/120),"wheelDeltaY"in e&&(r=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(a=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(a=r,r=0),s=a*t,o=r*t,"deltaY"in e&&(o=e.deltaY),"deltaX"in e&&(s=e.deltaX),(s||o)&&e.deltaMode&&(1===e.deltaMode?(s*=n,o*=n):(s*=i,o*=i)),s&&!a&&(a=s<1?-1:1),o&&!r&&(r=o<1?-1:1),{spinX:a,spinY:r,pixelX:s,pixelY:o}}function h(e,n){e=t(e);var i,a,r,s=C.rtl?-1:1;i=e.attr("data-swiper-parallax")||"0",a=e.attr("data-swiper-parallax-x"),r=e.attr("data-swiper-parallax-y"),a||r?(a=a||"0",r=r||"0"):C.isHorizontal()?(a=i,r="0"):(r=i,a="0"),a=a.indexOf("%")>=0?parseInt(a,10)*n*s+"%":a*n*s+"px",r=r.indexOf("%")>=0?parseInt(r,10)*n+"%":r*n+"px",e.transform("translate3d("+a+", "+r+",0px)")}function m(e){return 0!==e.indexOf("on")&&(e=e[0]!==e[0].toUpperCase()?"on"+e[0].toUpperCase()+e.substring(1):"on"+e),e}if(!(this instanceof n))return new n(e,a);var g={direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,autoplay:!1,autoplayDisableOnInteraction:!0,autoplayStopOnLast:!1,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",coverflow:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0},flip:{slideShadows:!0,limitRotation:!0},cube:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94},fade:{crossFade:!1},parallax:!1,zoom:!1,zoomMax:3,zoomMin:1,zoomToggle:!0,scrollbar:null,scrollbarHide:!0,scrollbarDraggable:!1,scrollbarSnapOnRelease:!1,keyboardControl:!1,mousewheelControl:!1,mousewheelReleaseOnEdges:!1,mousewheelInvert:!1,
mousewheelForceToAxis:!1,mousewheelSensitivity:1,mousewheelEventsTarged:"container",hashnav:!1,hashnavWatchState:!1,history:!1,replaceState:!1,breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,onlyExternal:!1,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,pagination:null,paginationElement:"span",paginationClickable:!1,paginationHide:!1,paginationBulletRender:null,paginationProgressRender:null,paginationFractionRender:null,paginationCustomRender:null,paginationType:"bullets",resistance:!0,resistanceRatio:.85,nextButton:null,prevButton:null,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,lazyLoading:!1,lazyLoadingInPrevNext:!1,lazyLoadingInPrevNextAmount:1,lazyLoadingOnTransitionStart:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,control:void 0,controlInverse:!1,controlBy:"slide",normalizeSlideIndex:!0,allowSwipeToPrev:!0,allowSwipeToNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",buttonDisabledClass:"swiper-button-disabled",paginationCurrentClass:"swiper-pagination-current",paginationTotalClass:"swiper-pagination-total",paginationHiddenClass:"swiper-pagination-hidden",paginationProgressbarClass:"swiper-pagination-progressbar",paginationClickableClass:"swiper-pagination-clickable",paginationModifierClass:"swiper-pagination-",lazyLoadingClass:"swiper-lazy",lazyStatusLoadingClass:"swiper-lazy-loading",lazyStatusLoadedClass:"swiper-lazy-loaded",lazyPreloaderClass:"swiper-lazy-preloader",notificationClass:"swiper-notification",preloaderClass:"preloader",zoomContainerClass:"swiper-zoom-container",observer:!1,observeParents:!1,a11y:!1,prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",runCallbacksOnInit:!0},v=a&&a.virtualTranslate;a=a||{};var y={};for(var w in a)if("object"!=typeof a[w]||null===a[w]||(a[w].nodeType||a[w]===window||a[w]===document||"undefined"!=typeof i&&a[w]instanceof i||"undefined"!=typeof jQuery&&a[w]instanceof jQuery))y[w]=a[w];else{y[w]={};for(var b in a[w])y[w][b]=a[w][b]}for(var x in g)if("undefined"==typeof a[x])a[x]=g[x];else if("object"==typeof a[x])for(var T in g[x])"undefined"==typeof a[x][T]&&(a[x][T]=g[x][T]);var C=this;if(C.params=a,C.originalParams=y,C.classNames=[],"undefined"!=typeof t&&"undefined"!=typeof i&&(t=i),("undefined"!=typeof t||(t="undefined"==typeof i?window.Dom7||window.Zepto||window.jQuery:i))&&(C.$=t,C.currentBreakpoint=void 0,C.getActiveBreakpoint=function(){if(!C.params.breakpoints)return!1;var e,t=!1,n=[];for(e in C.params.breakpoints)C.params.breakpoints.hasOwnProperty(e)&&n.push(e);n.sort(function(e,t){return parseInt(e,10)>parseInt(t,10)});for(var i=0;i<n.length;i++)e=n[i],e>=window.innerWidth&&!t&&(t=e);return t||"max"},C.setBreakpoint=function(){var e=C.getActiveBreakpoint();if(e&&C.currentBreakpoint!==e){var t=e in C.params.breakpoints?C.params.breakpoints[e]:C.originalParams,n=C.params.loop&&t.slidesPerView!==C.params.slidesPerView;for(var i in t)C.params[i]=t[i];C.currentBreakpoint=e,n&&C.destroyLoop&&C.reLoop(!0)}},C.params.breakpoints&&C.setBreakpoint(),C.container=t(e),0!==C.container.length)){if(C.container.length>1){var S=[];return C.container.each(function(){S.push(new n(this,a))}),S}C.container[0].swiper=C,C.container.data("swiper",C),C.classNames.push(C.params.containerModifierClass+C.params.direction),C.params.freeMode&&C.classNames.push(C.params.containerModifierClass+"free-mode"),C.support.flexbox||(C.classNames.push(C.params.containerModifierClass+"no-flexbox"),C.params.slidesPerColumn=1),C.params.autoHeight&&C.classNames.push(C.params.containerModifierClass+"autoheight"),(C.params.parallax||C.params.watchSlidesVisibility)&&(C.params.watchSlidesProgress=!0),C.params.touchReleaseOnEdges&&(C.params.resistanceRatio=0),["cube","coverflow","flip"].indexOf(C.params.effect)>=0&&(C.support.transforms3d?(C.params.watchSlidesProgress=!0,C.classNames.push(C.params.containerModifierClass+"3d")):C.params.effect="slide"),"slide"!==C.params.effect&&C.classNames.push(C.params.containerModifierClass+C.params.effect),"cube"===C.params.effect&&(C.params.resistanceRatio=0,C.params.slidesPerView=1,C.params.slidesPerColumn=1,C.params.slidesPerGroup=1,C.params.centeredSlides=!1,C.params.spaceBetween=0,C.params.virtualTranslate=!0,C.params.setWrapperSize=!1),"fade"!==C.params.effect&&"flip"!==C.params.effect||(C.params.slidesPerView=1,C.params.slidesPerColumn=1,C.params.slidesPerGroup=1,C.params.watchSlidesProgress=!0,C.params.spaceBetween=0,C.params.setWrapperSize=!1,"undefined"==typeof v&&(C.params.virtualTranslate=!0)),C.params.grabCursor&&C.support.touch&&(C.params.grabCursor=!1),C.wrapper=C.container.children("."+C.params.wrapperClass),C.params.pagination&&(C.paginationContainer=t(C.params.pagination),C.params.uniqueNavElements&&"string"==typeof C.params.pagination&&C.paginationContainer.length>1&&1===C.container.find(C.params.pagination).length&&(C.paginationContainer=C.container.find(C.params.pagination)),"bullets"===C.params.paginationType&&C.params.paginationClickable?C.paginationContainer.addClass(C.params.paginationModifierClass+"clickable"):C.params.paginationClickable=!1,C.paginationContainer.addClass(C.params.paginationModifierClass+C.params.paginationType)),(C.params.nextButton||C.params.prevButton)&&(C.params.nextButton&&(C.nextButton=t(C.params.nextButton),C.params.uniqueNavElements&&"string"==typeof C.params.nextButton&&C.nextButton.length>1&&1===C.container.find(C.params.nextButton).length&&(C.nextButton=C.container.find(C.params.nextButton))),C.params.prevButton&&(C.prevButton=t(C.params.prevButton),C.params.uniqueNavElements&&"string"==typeof C.params.prevButton&&C.prevButton.length>1&&1===C.container.find(C.params.prevButton).length&&(C.prevButton=C.container.find(C.params.prevButton)))),C.isHorizontal=function(){return"horizontal"===C.params.direction},C.rtl=C.isHorizontal()&&("rtl"===C.container[0].dir.toLowerCase()||"rtl"===C.container.css("direction")),C.rtl&&C.classNames.push(C.params.containerModifierClass+"rtl"),C.rtl&&(C.wrongRTL="-webkit-box"===C.wrapper.css("display")),C.params.slidesPerColumn>1&&C.classNames.push(C.params.containerModifierClass+"multirow"),C.device.android&&C.classNames.push(C.params.containerModifierClass+"android"),C.container.addClass(C.classNames.join(" ")),C.translate=0,C.progress=0,C.velocity=0,C.lockSwipeToNext=function(){C.params.allowSwipeToNext=!1,C.params.allowSwipeToPrev===!1&&C.params.grabCursor&&C.unsetGrabCursor()},C.lockSwipeToPrev=function(){C.params.allowSwipeToPrev=!1,C.params.allowSwipeToNext===!1&&C.params.grabCursor&&C.unsetGrabCursor()},C.lockSwipes=function(){C.params.allowSwipeToNext=C.params.allowSwipeToPrev=!1,C.params.grabCursor&&C.unsetGrabCursor()},C.unlockSwipeToNext=function(){C.params.allowSwipeToNext=!0,C.params.allowSwipeToPrev===!0&&C.params.grabCursor&&C.setGrabCursor()},C.unlockSwipeToPrev=function(){C.params.allowSwipeToPrev=!0,C.params.allowSwipeToNext===!0&&C.params.grabCursor&&C.setGrabCursor()},C.unlockSwipes=function(){C.params.allowSwipeToNext=C.params.allowSwipeToPrev=!0,C.params.grabCursor&&C.setGrabCursor()},C.setGrabCursor=function(e){C.container[0].style.cursor="move",C.container[0].style.cursor=e?"-webkit-grabbing":"-webkit-grab",C.container[0].style.cursor=e?"-moz-grabbin":"-moz-grab",C.container[0].style.cursor=e?"grabbing":"grab"},C.unsetGrabCursor=function(){C.container[0].style.cursor=""},C.params.grabCursor&&C.setGrabCursor(),C.imagesToLoad=[],C.imagesLoaded=0,C.loadImage=function(e,t,n,i,a,r){function s(){r&&r()}var o;e.complete&&a?s():t?(o=new window.Image,o.onload=s,o.onerror=s,i&&(o.sizes=i),n&&(o.srcset=n),t&&(o.src=t)):s()},C.preloadImages=function(){function e(){"undefined"!=typeof C&&null!==C&&(void 0!==C.imagesLoaded&&C.imagesLoaded++,C.imagesLoaded===C.imagesToLoad.length&&(C.params.updateOnImagesReady&&C.update(),C.emit("onImagesReady",C)))}C.imagesToLoad=C.container.find("img");for(var t=0;t<C.imagesToLoad.length;t++)C.loadImage(C.imagesToLoad[t],C.imagesToLoad[t].currentSrc||C.imagesToLoad[t].getAttribute("src"),C.imagesToLoad[t].srcset||C.imagesToLoad[t].getAttribute("srcset"),C.imagesToLoad[t].sizes||C.imagesToLoad[t].getAttribute("sizes"),!0,e)},C.autoplayTimeoutId=void 0,C.autoplaying=!1,C.autoplayPaused=!1,C.startAutoplay=function(){return"undefined"==typeof C.autoplayTimeoutId&&(!!C.params.autoplay&&(!C.autoplaying&&(C.autoplaying=!0,C.emit("onAutoplayStart",C),void o())))},C.stopAutoplay=function(e){C.autoplayTimeoutId&&(C.autoplayTimeoutId&&clearTimeout(C.autoplayTimeoutId),C.autoplaying=!1,C.autoplayTimeoutId=void 0,C.emit("onAutoplayStop",C))},C.pauseAutoplay=function(e){C.autoplayPaused||(C.autoplayTimeoutId&&clearTimeout(C.autoplayTimeoutId),C.autoplayPaused=!0,0===e?(C.autoplayPaused=!1,o()):C.wrapper.transitionEnd(function(){C&&(C.autoplayPaused=!1,C.autoplaying?o():C.stopAutoplay())}))},C.minTranslate=function(){return-C.snapGrid[0]},C.maxTranslate=function(){return-C.snapGrid[C.snapGrid.length-1]},C.updateAutoHeight=function(){var e=[],t=0;if("auto"!==C.params.slidesPerView&&C.params.slidesPerView>1)for(r=0;r<Math.ceil(C.params.slidesPerView);r++){var n=C.activeIndex+r;if(n>C.slides.length)break;e.push(C.slides.eq(n)[0])}else e.push(C.slides.eq(C.activeIndex)[0]);for(r=0;r<e.length;r++)if("undefined"!=typeof e[r]){var i=e[r].offsetHeight;t=i>t?i:t}t&&C.wrapper.css("height",t+"px")},C.updateContainerSize=function(){var e,t;e="undefined"!=typeof C.params.width?C.params.width:C.container[0].clientWidth,t="undefined"!=typeof C.params.height?C.params.height:C.container[0].clientHeight,0===e&&C.isHorizontal()||0===t&&!C.isHorizontal()||(e=e-parseInt(C.container.css("padding-left"),10)-parseInt(C.container.css("padding-right"),10),t=t-parseInt(C.container.css("padding-top"),10)-parseInt(C.container.css("padding-bottom"),10),C.width=e,C.height=t,C.size=C.isHorizontal()?C.width:C.height)},C.updateSlidesSize=function(){C.slides=C.wrapper.children("."+C.params.slideClass),C.snapGrid=[],C.slidesGrid=[],C.slidesSizesGrid=[];var e,t=C.params.spaceBetween,n=-C.params.slidesOffsetBefore,i=0,a=0;if("undefined"!=typeof C.size){"string"==typeof t&&t.indexOf("%")>=0&&(t=parseFloat(t.replace("%",""))/100*C.size),C.virtualSize=-t,C.rtl?C.slides.css({marginLeft:"",marginTop:""}):C.slides.css({marginRight:"",marginBottom:""});var r;C.params.slidesPerColumn>1&&(r=Math.floor(C.slides.length/C.params.slidesPerColumn)===C.slides.length/C.params.slidesPerColumn?C.slides.length:Math.ceil(C.slides.length/C.params.slidesPerColumn)*C.params.slidesPerColumn,"auto"!==C.params.slidesPerView&&"row"===C.params.slidesPerColumnFill&&(r=Math.max(r,C.params.slidesPerView*C.params.slidesPerColumn)));var o,l=C.params.slidesPerColumn,p=r/l,u=p-(C.params.slidesPerColumn*p-C.slides.length);for(e=0;e<C.slides.length;e++){o=0;var d=C.slides.eq(e);if(C.params.slidesPerColumn>1){var c,f,h;"column"===C.params.slidesPerColumnFill?(f=Math.floor(e/l),h=e-f*l,(f>u||f===u&&h===l-1)&&++h>=l&&(h=0,f++),c=f+h*r/l,d.css({"-webkit-box-ordinal-group":c,"-moz-box-ordinal-group":c,"-ms-flex-order":c,"-webkit-order":c,order:c})):(h=Math.floor(e/p),f=e-h*p),d.css("margin-"+(C.isHorizontal()?"top":"left"),0!==h&&C.params.spaceBetween&&C.params.spaceBetween+"px").attr("data-swiper-column",f).attr("data-swiper-row",h)}"none"!==d.css("display")&&("auto"===C.params.slidesPerView?(o=C.isHorizontal()?d.outerWidth(!0):d.outerHeight(!0),C.params.roundLengths&&(o=s(o))):(o=(C.size-(C.params.slidesPerView-1)*t)/C.params.slidesPerView,C.params.roundLengths&&(o=s(o)),C.isHorizontal()?C.slides[e].style.width=o+"px":C.slides[e].style.height=o+"px"),C.slides[e].swiperSlideSize=o,C.slidesSizesGrid.push(o),C.params.centeredSlides?(n=n+o/2+i/2+t,0===e&&(n=n-C.size/2-t),Math.abs(n)<.001&&(n=0),a%C.params.slidesPerGroup===0&&C.snapGrid.push(n),C.slidesGrid.push(n)):(a%C.params.slidesPerGroup===0&&C.snapGrid.push(n),C.slidesGrid.push(n),n=n+o+t),C.virtualSize+=o+t,i=o,a++)}C.virtualSize=Math.max(C.virtualSize,C.size)+C.params.slidesOffsetAfter;var m;if(C.rtl&&C.wrongRTL&&("slide"===C.params.effect||"coverflow"===C.params.effect)&&C.wrapper.css({width:C.virtualSize+C.params.spaceBetween+"px"}),C.support.flexbox&&!C.params.setWrapperSize||(C.isHorizontal()?C.wrapper.css({width:C.virtualSize+C.params.spaceBetween+"px"}):C.wrapper.css({height:C.virtualSize+C.params.spaceBetween+"px"})),C.params.slidesPerColumn>1&&(C.virtualSize=(o+C.params.spaceBetween)*r,C.virtualSize=Math.ceil(C.virtualSize/C.params.slidesPerColumn)-C.params.spaceBetween,C.isHorizontal()?C.wrapper.css({width:C.virtualSize+C.params.spaceBetween+"px"}):C.wrapper.css({height:C.virtualSize+C.params.spaceBetween+"px"}),C.params.centeredSlides)){for(m=[],e=0;e<C.snapGrid.length;e++)C.snapGrid[e]<C.virtualSize+C.snapGrid[0]&&m.push(C.snapGrid[e]);C.snapGrid=m}if(!C.params.centeredSlides){for(m=[],e=0;e<C.snapGrid.length;e++)C.snapGrid[e]<=C.virtualSize-C.size&&m.push(C.snapGrid[e]);C.snapGrid=m,Math.floor(C.virtualSize-C.size)-Math.floor(C.snapGrid[C.snapGrid.length-1])>1&&C.snapGrid.push(C.virtualSize-C.size)}0===C.snapGrid.length&&(C.snapGrid=[0]),0!==C.params.spaceBetween&&(C.isHorizontal()?C.rtl?C.slides.css({marginLeft:t+"px"}):C.slides.css({marginRight:t+"px"}):C.slides.css({marginBottom:t+"px"})),C.params.watchSlidesProgress&&C.updateSlidesOffset()}},C.updateSlidesOffset=function(){for(var e=0;e<C.slides.length;e++)C.slides[e].swiperSlideOffset=C.isHorizontal()?C.slides[e].offsetLeft:C.slides[e].offsetTop},C.updateSlidesProgress=function(e){if("undefined"==typeof e&&(e=C.translate||0),0!==C.slides.length){"undefined"==typeof C.slides[0].swiperSlideOffset&&C.updateSlidesOffset();var t=-e;C.rtl&&(t=e),C.slides.removeClass(C.params.slideVisibleClass);for(var n=0;n<C.slides.length;n++){var i=C.slides[n],a=(t+(C.params.centeredSlides?C.minTranslate():0)-i.swiperSlideOffset)/(i.swiperSlideSize+C.params.spaceBetween);if(C.params.watchSlidesVisibility){var r=-(t-i.swiperSlideOffset),s=r+C.slidesSizesGrid[n],o=r>=0&&r<C.size||s>0&&s<=C.size||r<=0&&s>=C.size;o&&C.slides.eq(n).addClass(C.params.slideVisibleClass)}i.progress=C.rtl?-a:a}}},C.updateProgress=function(e){"undefined"==typeof e&&(e=C.translate||0);var t=C.maxTranslate()-C.minTranslate(),n=C.isBeginning,i=C.isEnd;0===t?(C.progress=0,C.isBeginning=C.isEnd=!0):(C.progress=(e-C.minTranslate())/t,C.isBeginning=C.progress<=0,C.isEnd=C.progress>=1),C.isBeginning&&!n&&C.emit("onReachBeginning",C),C.isEnd&&!i&&C.emit("onReachEnd",C),C.params.watchSlidesProgress&&C.updateSlidesProgress(e),C.emit("onProgress",C,C.progress)},C.updateActiveIndex=function(){var e,t,n,i=C.rtl?C.translate:-C.translate;for(t=0;t<C.slidesGrid.length;t++)"undefined"!=typeof C.slidesGrid[t+1]?i>=C.slidesGrid[t]&&i<C.slidesGrid[t+1]-(C.slidesGrid[t+1]-C.slidesGrid[t])/2?e=t:i>=C.slidesGrid[t]&&i<C.slidesGrid[t+1]&&(e=t+1):i>=C.slidesGrid[t]&&(e=t);C.params.normalizeSlideIndex&&(e<0||"undefined"==typeof e)&&(e=0),n=Math.floor(e/C.params.slidesPerGroup),n>=C.snapGrid.length&&(n=C.snapGrid.length-1),e!==C.activeIndex&&(C.snapIndex=n,C.previousIndex=C.activeIndex,C.activeIndex=e,C.updateClasses(),C.updateRealIndex())},C.updateRealIndex=function(){C.realIndex=C.slides.eq(C.activeIndex).attr("data-swiper-slide-index")||C.activeIndex},C.updateClasses=function(){C.slides.removeClass(C.params.slideActiveClass+" "+C.params.slideNextClass+" "+C.params.slidePrevClass+" "+C.params.slideDuplicateActiveClass+" "+C.params.slideDuplicateNextClass+" "+C.params.slideDuplicatePrevClass);var e=C.slides.eq(C.activeIndex);e.addClass(C.params.slideActiveClass),a.loop&&(e.hasClass(C.params.slideDuplicateClass)?C.wrapper.children("."+C.params.slideClass+":not(."+C.params.slideDuplicateClass+')[data-swiper-slide-index="'+C.realIndex+'"]').addClass(C.params.slideDuplicateActiveClass):C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+C.realIndex+'"]').addClass(C.params.slideDuplicateActiveClass));var n=e.next("."+C.params.slideClass).addClass(C.params.slideNextClass);C.params.loop&&0===n.length&&(n=C.slides.eq(0),n.addClass(C.params.slideNextClass));var i=e.prev("."+C.params.slideClass).addClass(C.params.slidePrevClass);if(C.params.loop&&0===i.length&&(i=C.slides.eq(-1),i.addClass(C.params.slidePrevClass)),a.loop&&(n.hasClass(C.params.slideDuplicateClass)?C.wrapper.children("."+C.params.slideClass+":not(."+C.params.slideDuplicateClass+')[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicateNextClass):C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicateNextClass),i.hasClass(C.params.slideDuplicateClass)?C.wrapper.children("."+C.params.slideClass+":not(."+C.params.slideDuplicateClass+')[data-swiper-slide-index="'+i.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicatePrevClass):C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+i.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicatePrevClass)),C.paginationContainer&&C.paginationContainer.length>0){var r,s=C.params.loop?Math.ceil((C.slides.length-2*C.loopedSlides)/C.params.slidesPerGroup):C.snapGrid.length;if(C.params.loop?(r=Math.ceil((C.activeIndex-C.loopedSlides)/C.params.slidesPerGroup),r>C.slides.length-1-2*C.loopedSlides&&(r-=C.slides.length-2*C.loopedSlides),r>s-1&&(r-=s),r<0&&"bullets"!==C.params.paginationType&&(r=s+r)):r="undefined"!=typeof C.snapIndex?C.snapIndex:C.activeIndex||0,"bullets"===C.params.paginationType&&C.bullets&&C.bullets.length>0&&(C.bullets.removeClass(C.params.bulletActiveClass),C.paginationContainer.length>1?C.bullets.each(function(){t(this).index()===r&&t(this).addClass(C.params.bulletActiveClass)}):C.bullets.eq(r).addClass(C.params.bulletActiveClass)),"fraction"===C.params.paginationType&&(C.paginationContainer.find("."+C.params.paginationCurrentClass).text(r+1),C.paginationContainer.find("."+C.params.paginationTotalClass).text(s)),"progress"===C.params.paginationType){var o=(r+1)/s,l=o,p=1;C.isHorizontal()||(p=o,l=1),C.paginationContainer.find("."+C.params.paginationProgressbarClass).transform("translate3d(0,0,0) scaleX("+l+") scaleY("+p+")").transition(C.params.speed)}"custom"===C.params.paginationType&&C.params.paginationCustomRender&&(C.paginationContainer.html(C.params.paginationCustomRender(C,r+1,s)),C.emit("onPaginationRendered",C,C.paginationContainer[0]))}C.params.loop||(C.params.prevButton&&C.prevButton&&C.prevButton.length>0&&(C.isBeginning?(C.prevButton.addClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.disable(C.prevButton)):(C.prevButton.removeClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.enable(C.prevButton))),C.params.nextButton&&C.nextButton&&C.nextButton.length>0&&(C.isEnd?(C.nextButton.addClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.disable(C.nextButton)):(C.nextButton.removeClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.enable(C.nextButton))))},C.updatePagination=function(){if(C.params.pagination&&C.paginationContainer&&C.paginationContainer.length>0){var e="";if("bullets"===C.params.paginationType){for(var t=C.params.loop?Math.ceil((C.slides.length-2*C.loopedSlides)/C.params.slidesPerGroup):C.snapGrid.length,n=0;n<t;n++)e+=C.params.paginationBulletRender?C.params.paginationBulletRender(C,n,C.params.bulletClass):"<"+C.params.paginationElement+' class="'+C.params.bulletClass+'"></'+C.params.paginationElement+">";C.paginationContainer.html(e),C.bullets=C.paginationContainer.find("."+C.params.bulletClass),C.params.paginationClickable&&C.params.a11y&&C.a11y&&C.a11y.initPagination()}"fraction"===C.params.paginationType&&(e=C.params.paginationFractionRender?C.params.paginationFractionRender(C,C.params.paginationCurrentClass,C.params.paginationTotalClass):'<span class="'+C.params.paginationCurrentClass+'"></span> / <span class="'+C.params.paginationTotalClass+'"></span>',C.paginationContainer.html(e)),"progress"===C.params.paginationType&&(e=C.params.paginationProgressRender?C.params.paginationProgressRender(C,C.params.paginationProgressbarClass):'<span class="'+C.params.paginationProgressbarClass+'"></span>',C.paginationContainer.html(e)),"custom"!==C.params.paginationType&&C.emit("onPaginationRendered",C,C.paginationContainer[0])}},C.update=function(e){function t(){C.rtl?-C.translate:C.translate;i=Math.min(Math.max(C.translate,C.maxTranslate()),C.minTranslate()),C.setWrapperTranslate(i),C.updateActiveIndex(),C.updateClasses()}if(C.updateContainerSize(),C.updateSlidesSize(),C.updateProgress(),C.updatePagination(),C.updateClasses(),C.params.scrollbar&&C.scrollbar&&C.scrollbar.set(),e){var n,i;C.controller&&C.controller.spline&&(C.controller.spline=void 0),C.params.freeMode?(t(),C.params.autoHeight&&C.updateAutoHeight()):(n=("auto"===C.params.slidesPerView||C.params.slidesPerView>1)&&C.isEnd&&!C.params.centeredSlides?C.slideTo(C.slides.length-1,0,!1,!0):C.slideTo(C.activeIndex,0,!1,!0),n||t())}else C.params.autoHeight&&C.updateAutoHeight()},C.onResize=function(e){C.params.breakpoints&&C.setBreakpoint();var t=C.params.allowSwipeToPrev,n=C.params.allowSwipeToNext;C.params.allowSwipeToPrev=C.params.allowSwipeToNext=!0,C.updateContainerSize(),C.updateSlidesSize(),("auto"===C.params.slidesPerView||C.params.freeMode||e)&&C.updatePagination(),C.params.scrollbar&&C.scrollbar&&C.scrollbar.set(),C.controller&&C.controller.spline&&(C.controller.spline=void 0);var i=!1;if(C.params.freeMode){var a=Math.min(Math.max(C.translate,C.maxTranslate()),C.minTranslate());C.setWrapperTranslate(a),C.updateActiveIndex(),C.updateClasses(),C.params.autoHeight&&C.updateAutoHeight()}else C.updateClasses(),i=("auto"===C.params.slidesPerView||C.params.slidesPerView>1)&&C.isEnd&&!C.params.centeredSlides?C.slideTo(C.slides.length-1,0,!1,!0):C.slideTo(C.activeIndex,0,!1,!0);C.params.lazyLoading&&!i&&C.lazy&&C.lazy.load(),C.params.allowSwipeToPrev=t,C.params.allowSwipeToNext=n},C.touchEventsDesktop={start:"mousedown",move:"mousemove",end:"mouseup"},window.navigator.pointerEnabled?C.touchEventsDesktop={start:"pointerdown",move:"pointermove",end:"pointerup"}:window.navigator.msPointerEnabled&&(C.touchEventsDesktop={start:"MSPointerDown",move:"MSPointerMove",end:"MSPointerUp"}),C.touchEvents={start:C.support.touch||!C.params.simulateTouch?"touchstart":C.touchEventsDesktop.start,move:C.support.touch||!C.params.simulateTouch?"touchmove":C.touchEventsDesktop.move,end:C.support.touch||!C.params.simulateTouch?"touchend":C.touchEventsDesktop.end},(window.navigator.pointerEnabled||window.navigator.msPointerEnabled)&&("container"===C.params.touchEventsTarget?C.container:C.wrapper).addClass("swiper-wp8-"+C.params.direction),C.initEvents=function(e){var t=e?"off":"on",n=e?"removeEventListener":"addEventListener",i="container"===C.params.touchEventsTarget?C.container[0]:C.wrapper[0],r=C.support.touch?i:document,s=!!C.params.nested;if(C.browser.ie)i[n](C.touchEvents.start,C.onTouchStart,!1),r[n](C.touchEvents.move,C.onTouchMove,s),r[n](C.touchEvents.end,C.onTouchEnd,!1);else{if(C.support.touch){var o=!("touchstart"!==C.touchEvents.start||!C.support.passiveListener||!C.params.passiveListeners)&&{passive:!0,capture:!1};i[n](C.touchEvents.start,C.onTouchStart,o),i[n](C.touchEvents.move,C.onTouchMove,s),i[n](C.touchEvents.end,C.onTouchEnd,o)}(a.simulateTouch&&!C.device.ios&&!C.device.android||a.simulateTouch&&!C.support.touch&&C.device.ios)&&(i[n]("mousedown",C.onTouchStart,!1),document[n]("mousemove",C.onTouchMove,s),document[n]("mouseup",C.onTouchEnd,!1))}window[n]("resize",C.onResize),C.params.nextButton&&C.nextButton&&C.nextButton.length>0&&(C.nextButton[t]("click",C.onClickNext),C.params.a11y&&C.a11y&&C.nextButton[t]("keydown",C.a11y.onEnterKey)),C.params.prevButton&&C.prevButton&&C.prevButton.length>0&&(C.prevButton[t]("click",C.onClickPrev),C.params.a11y&&C.a11y&&C.prevButton[t]("keydown",C.a11y.onEnterKey)),C.params.pagination&&C.params.paginationClickable&&(C.paginationContainer[t]("click","."+C.params.bulletClass,C.onClickIndex),C.params.a11y&&C.a11y&&C.paginationContainer[t]("keydown","."+C.params.bulletClass,C.a11y.onEnterKey)),(C.params.preventClicks||C.params.preventClicksPropagation)&&i[n]("click",C.preventClicks,!0)},C.attachEvents=function(){C.initEvents()},C.detachEvents=function(){C.initEvents(!0)},C.allowClick=!0,C.preventClicks=function(e){C.allowClick||(C.params.preventClicks&&e.preventDefault(),C.params.preventClicksPropagation&&C.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))},C.onClickNext=function(e){e.preventDefault(),C.isEnd&&!C.params.loop||C.slideNext()},C.onClickPrev=function(e){e.preventDefault(),C.isBeginning&&!C.params.loop||C.slidePrev()},C.onClickIndex=function(e){e.preventDefault();var n=t(this).index()*C.params.slidesPerGroup;C.params.loop&&(n+=C.loopedSlides),C.slideTo(n)},C.updateClickedSlide=function(e){var n=l(e,"."+C.params.slideClass),i=!1;if(n)for(var a=0;a<C.slides.length;a++)C.slides[a]===n&&(i=!0);if(!n||!i)return C.clickedSlide=void 0,void(C.clickedIndex=void 0);if(C.clickedSlide=n,C.clickedIndex=t(n).index(),C.params.slideToClickedSlide&&void 0!==C.clickedIndex&&C.clickedIndex!==C.activeIndex){var r,s=C.clickedIndex;if(C.params.loop){if(C.animating)return;r=t(C.clickedSlide).attr("data-swiper-slide-index"),C.params.centeredSlides?s<C.loopedSlides-C.params.slidesPerView/2||s>C.slides.length-C.loopedSlides+C.params.slidesPerView/2?(C.fixLoop(),s=C.wrapper.children("."+C.params.slideClass+'[data-swiper-slide-index="'+r+'"]:not(.'+C.params.slideDuplicateClass+")").eq(0).index(),setTimeout(function(){C.slideTo(s)},0)):C.slideTo(s):s>C.slides.length-C.params.slidesPerView?(C.fixLoop(),s=C.wrapper.children("."+C.params.slideClass+'[data-swiper-slide-index="'+r+'"]:not(.'+C.params.slideDuplicateClass+")").eq(0).index(),setTimeout(function(){C.slideTo(s)},0)):C.slideTo(s)}else C.slideTo(s)}};var E,k,I,M,P,D,z,A,N,L,O="input, select, textarea, button, video",$=Date.now(),H=[];C.animating=!1,C.touches={startX:0,startY:0,currentX:0,currentY:0,diff:0};var B,j;C.onTouchStart=function(e){if(e.originalEvent&&(e=e.originalEvent),B="touchstart"===e.type,B||!("which"in e)||3!==e.which){if(C.params.noSwiping&&l(e,"."+C.params.noSwipingClass))return void(C.allowClick=!0);if(!C.params.swipeHandler||l(e,C.params.swipeHandler)){var n=C.touches.currentX="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,i=C.touches.currentY="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY;if(!(C.device.ios&&C.params.iOSEdgeSwipeDetection&&n<=C.params.iOSEdgeSwipeThreshold)){if(E=!0,k=!1,I=!0,P=void 0,j=void 0,C.touches.startX=n,C.touches.startY=i,M=Date.now(),C.allowClick=!0,C.updateContainerSize(),C.swipeDirection=void 0,C.params.threshold>0&&(A=!1),"touchstart"!==e.type){var a=!0;t(e.target).is(O)&&(a=!1),document.activeElement&&t(document.activeElement).is(O)&&document.activeElement.blur(),a&&e.preventDefault()}C.emit("onTouchStart",C,e)}}}},C.onTouchMove=function(e){if(e.originalEvent&&(e=e.originalEvent),!B||"mousemove"!==e.type){if(e.preventedByNestedSwiper)return C.touches.startX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,void(C.touches.startY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY);if(C.params.onlyExternal)return C.allowClick=!1,void(E&&(C.touches.startX=C.touches.currentX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,C.touches.startY=C.touches.currentY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,M=Date.now()));if(B&&C.params.touchReleaseOnEdges&&!C.params.loop)if(C.isHorizontal()){if(C.touches.currentX<C.touches.startX&&C.translate<=C.maxTranslate()||C.touches.currentX>C.touches.startX&&C.translate>=C.minTranslate())return}else if(C.touches.currentY<C.touches.startY&&C.translate<=C.maxTranslate()||C.touches.currentY>C.touches.startY&&C.translate>=C.minTranslate())return;if(B&&document.activeElement&&e.target===document.activeElement&&t(e.target).is(O))return k=!0,void(C.allowClick=!1);if(I&&C.emit("onTouchMove",C,e),!(e.targetTouches&&e.targetTouches.length>1)){if(C.touches.currentX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,C.touches.currentY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,"undefined"==typeof P){var n;C.isHorizontal()&&C.touches.currentY===C.touches.startY||!C.isHorizontal()&&C.touches.currentX!==C.touches.startX?P=!1:(n=180*Math.atan2(Math.abs(C.touches.currentY-C.touches.startY),Math.abs(C.touches.currentX-C.touches.startX))/Math.PI,P=C.isHorizontal()?n>C.params.touchAngle:90-n>C.params.touchAngle)}if(P&&C.emit("onTouchMoveOpposite",C,e),"undefined"==typeof j&&C.browser.ieTouch&&(C.touches.currentX===C.touches.startX&&C.touches.currentY===C.touches.startY||(j=!0)),E){if(P)return void(E=!1);if(j||!C.browser.ieTouch){C.allowClick=!1,C.emit("onSliderMove",C,e),e.preventDefault(),C.params.touchMoveStopPropagation&&!C.params.nested&&e.stopPropagation(),k||(a.loop&&C.fixLoop(),z=C.getWrapperTranslate(),C.setWrapperTransition(0),C.animating&&C.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd"),C.params.autoplay&&C.autoplaying&&(C.params.autoplayDisableOnInteraction?C.stopAutoplay():C.pauseAutoplay()),L=!1,!C.params.grabCursor||C.params.allowSwipeToNext!==!0&&C.params.allowSwipeToPrev!==!0||C.setGrabCursor(!0)),k=!0;var i=C.touches.diff=C.isHorizontal()?C.touches.currentX-C.touches.startX:C.touches.currentY-C.touches.startY;i*=C.params.touchRatio,C.rtl&&(i=-i),C.swipeDirection=i>0?"prev":"next",D=i+z;var r=!0;if(i>0&&D>C.minTranslate()?(r=!1,C.params.resistance&&(D=C.minTranslate()-1+Math.pow(-C.minTranslate()+z+i,C.params.resistanceRatio))):i<0&&D<C.maxTranslate()&&(r=!1,C.params.resistance&&(D=C.maxTranslate()+1-Math.pow(C.maxTranslate()-z-i,C.params.resistanceRatio))),r&&(e.preventedByNestedSwiper=!0),!C.params.allowSwipeToNext&&"next"===C.swipeDirection&&D<z&&(D=z),!C.params.allowSwipeToPrev&&"prev"===C.swipeDirection&&D>z&&(D=z),C.params.threshold>0){if(!(Math.abs(i)>C.params.threshold||A))return void(D=z);if(!A)return A=!0,C.touches.startX=C.touches.currentX,C.touches.startY=C.touches.currentY,D=z,void(C.touches.diff=C.isHorizontal()?C.touches.currentX-C.touches.startX:C.touches.currentY-C.touches.startY)}C.params.followFinger&&((C.params.freeMode||C.params.watchSlidesProgress)&&C.updateActiveIndex(),C.params.freeMode&&(0===H.length&&H.push({position:C.touches[C.isHorizontal()?"startX":"startY"],time:M}),H.push({position:C.touches[C.isHorizontal()?"currentX":"currentY"],time:(new window.Date).getTime()})),C.updateProgress(D),C.setWrapperTranslate(D))}}}}},C.onTouchEnd=function(e){if(e.originalEvent&&(e=e.originalEvent),I&&C.emit("onTouchEnd",C,e),I=!1,E){C.params.grabCursor&&k&&E&&(C.params.allowSwipeToNext===!0||C.params.allowSwipeToPrev===!0)&&C.setGrabCursor(!1);var n=Date.now(),i=n-M;if(C.allowClick&&(C.updateClickedSlide(e),C.emit("onTap",C,e),i<300&&n-$>300&&(N&&clearTimeout(N),N=setTimeout(function(){
C&&(C.params.paginationHide&&C.paginationContainer.length>0&&!t(e.target).hasClass(C.params.bulletClass)&&C.paginationContainer.toggleClass(C.params.paginationHiddenClass),C.emit("onClick",C,e))},300)),i<300&&n-$<300&&(N&&clearTimeout(N),C.emit("onDoubleTap",C,e))),$=Date.now(),setTimeout(function(){C&&(C.allowClick=!0)},0),!E||!k||!C.swipeDirection||0===C.touches.diff||D===z)return void(E=k=!1);E=k=!1;var a;if(a=C.params.followFinger?C.rtl?C.translate:-C.translate:-D,C.params.freeMode){if(a<-C.minTranslate())return void C.slideTo(C.activeIndex);if(a>-C.maxTranslate())return void(C.slides.length<C.snapGrid.length?C.slideTo(C.snapGrid.length-1):C.slideTo(C.slides.length-1));if(C.params.freeModeMomentum){if(H.length>1){var r=H.pop(),s=H.pop(),o=r.position-s.position,l=r.time-s.time;C.velocity=o/l,C.velocity=C.velocity/2,Math.abs(C.velocity)<C.params.freeModeMinimumVelocity&&(C.velocity=0),(l>150||(new window.Date).getTime()-r.time>300)&&(C.velocity=0)}else C.velocity=0;C.velocity=C.velocity*C.params.freeModeMomentumVelocityRatio,H.length=0;var p=1e3*C.params.freeModeMomentumRatio,u=C.velocity*p,d=C.translate+u;C.rtl&&(d=-d);var c,f=!1,h=20*Math.abs(C.velocity)*C.params.freeModeMomentumBounceRatio;if(d<C.maxTranslate())C.params.freeModeMomentumBounce?(d+C.maxTranslate()<-h&&(d=C.maxTranslate()-h),c=C.maxTranslate(),f=!0,L=!0):d=C.maxTranslate();else if(d>C.minTranslate())C.params.freeModeMomentumBounce?(d-C.minTranslate()>h&&(d=C.minTranslate()+h),c=C.minTranslate(),f=!0,L=!0):d=C.minTranslate();else if(C.params.freeModeSticky){var m,g=0;for(g=0;g<C.snapGrid.length;g+=1)if(C.snapGrid[g]>-d){m=g;break}d=Math.abs(C.snapGrid[m]-d)<Math.abs(C.snapGrid[m-1]-d)||"next"===C.swipeDirection?C.snapGrid[m]:C.snapGrid[m-1],C.rtl||(d=-d)}if(0!==C.velocity)p=C.rtl?Math.abs((-d-C.translate)/C.velocity):Math.abs((d-C.translate)/C.velocity);else if(C.params.freeModeSticky)return void C.slideReset();C.params.freeModeMomentumBounce&&f?(C.updateProgress(c),C.setWrapperTransition(p),C.setWrapperTranslate(d),C.onTransitionStart(),C.animating=!0,C.wrapper.transitionEnd(function(){C&&L&&(C.emit("onMomentumBounce",C),C.setWrapperTransition(C.params.speed),C.setWrapperTranslate(c),C.wrapper.transitionEnd(function(){C&&C.onTransitionEnd()}))})):C.velocity?(C.updateProgress(d),C.setWrapperTransition(p),C.setWrapperTranslate(d),C.onTransitionStart(),C.animating||(C.animating=!0,C.wrapper.transitionEnd(function(){C&&C.onTransitionEnd()}))):C.updateProgress(d),C.updateActiveIndex()}return void((!C.params.freeModeMomentum||i>=C.params.longSwipesMs)&&(C.updateProgress(),C.updateActiveIndex()))}var v,y=0,w=C.slidesSizesGrid[0];for(v=0;v<C.slidesGrid.length;v+=C.params.slidesPerGroup)"undefined"!=typeof C.slidesGrid[v+C.params.slidesPerGroup]?a>=C.slidesGrid[v]&&a<C.slidesGrid[v+C.params.slidesPerGroup]&&(y=v,w=C.slidesGrid[v+C.params.slidesPerGroup]-C.slidesGrid[v]):a>=C.slidesGrid[v]&&(y=v,w=C.slidesGrid[C.slidesGrid.length-1]-C.slidesGrid[C.slidesGrid.length-2]);var b=(a-C.slidesGrid[y])/w;if(i>C.params.longSwipesMs){if(!C.params.longSwipes)return void C.slideTo(C.activeIndex);"next"===C.swipeDirection&&(b>=C.params.longSwipesRatio?C.slideTo(y+C.params.slidesPerGroup):C.slideTo(y)),"prev"===C.swipeDirection&&(b>1-C.params.longSwipesRatio?C.slideTo(y+C.params.slidesPerGroup):C.slideTo(y))}else{if(!C.params.shortSwipes)return void C.slideTo(C.activeIndex);"next"===C.swipeDirection&&C.slideTo(y+C.params.slidesPerGroup),"prev"===C.swipeDirection&&C.slideTo(y)}}},C._slideTo=function(e,t){return C.slideTo(e,t,!0,!0)},C.slideTo=function(e,t,n,i){"undefined"==typeof n&&(n=!0),"undefined"==typeof e&&(e=0),e<0&&(e=0),C.snapIndex=Math.floor(e/C.params.slidesPerGroup),C.snapIndex>=C.snapGrid.length&&(C.snapIndex=C.snapGrid.length-1);var a=-C.snapGrid[C.snapIndex];if(C.params.autoplay&&C.autoplaying&&(i||!C.params.autoplayDisableOnInteraction?C.pauseAutoplay(t):C.stopAutoplay()),C.updateProgress(a),C.params.normalizeSlideIndex)for(var r=0;r<C.slidesGrid.length;r++)-Math.floor(100*a)>=Math.floor(100*C.slidesGrid[r])&&(e=r);return!(!C.params.allowSwipeToNext&&a<C.translate&&a<C.minTranslate())&&(!(!C.params.allowSwipeToPrev&&a>C.translate&&a>C.maxTranslate()&&(C.activeIndex||0)!==e)&&("undefined"==typeof t&&(t=C.params.speed),C.previousIndex=C.activeIndex||0,C.activeIndex=e,C.updateRealIndex(),C.rtl&&-a===C.translate||!C.rtl&&a===C.translate?(C.params.autoHeight&&C.updateAutoHeight(),C.updateClasses(),"slide"!==C.params.effect&&C.setWrapperTranslate(a),!1):(C.updateClasses(),C.onTransitionStart(n),0===t||C.browser.lteIE9?(C.setWrapperTranslate(a),C.setWrapperTransition(0),C.onTransitionEnd(n)):(C.setWrapperTranslate(a),C.setWrapperTransition(t),C.animating||(C.animating=!0,C.wrapper.transitionEnd(function(){C&&C.onTransitionEnd(n)}))),!0)))},C.onTransitionStart=function(e){"undefined"==typeof e&&(e=!0),C.params.autoHeight&&C.updateAutoHeight(),C.lazy&&C.lazy.onTransitionStart(),e&&(C.emit("onTransitionStart",C),C.activeIndex!==C.previousIndex&&(C.emit("onSlideChangeStart",C),C.activeIndex>C.previousIndex?C.emit("onSlideNextStart",C):C.emit("onSlidePrevStart",C)))},C.onTransitionEnd=function(e){C.animating=!1,C.setWrapperTransition(0),"undefined"==typeof e&&(e=!0),C.lazy&&C.lazy.onTransitionEnd(),e&&(C.emit("onTransitionEnd",C),C.activeIndex!==C.previousIndex&&(C.emit("onSlideChangeEnd",C),C.activeIndex>C.previousIndex?C.emit("onSlideNextEnd",C):C.emit("onSlidePrevEnd",C))),C.params.history&&C.history&&C.history.setHistory(C.params.history,C.activeIndex),C.params.hashnav&&C.hashnav&&C.hashnav.setHash()},C.slideNext=function(e,t,n){if(C.params.loop){if(C.animating)return!1;C.fixLoop();C.container[0].clientLeft;return C.slideTo(C.activeIndex+C.params.slidesPerGroup,t,e,n)}return C.slideTo(C.activeIndex+C.params.slidesPerGroup,t,e,n)},C._slideNext=function(e){return C.slideNext(!0,e,!0)},C.slidePrev=function(e,t,n){if(C.params.loop){if(C.animating)return!1;C.fixLoop();C.container[0].clientLeft;return C.slideTo(C.activeIndex-1,t,e,n)}return C.slideTo(C.activeIndex-1,t,e,n)},C._slidePrev=function(e){return C.slidePrev(!0,e,!0)},C.slideReset=function(e,t,n){return C.slideTo(C.activeIndex,t,e)},C.disableTouchControl=function(){return C.params.onlyExternal=!0,!0},C.enableTouchControl=function(){return C.params.onlyExternal=!1,!0},C.setWrapperTransition=function(e,t){C.wrapper.transition(e),"slide"!==C.params.effect&&C.effects[C.params.effect]&&C.effects[C.params.effect].setTransition(e),C.params.parallax&&C.parallax&&C.parallax.setTransition(e),C.params.scrollbar&&C.scrollbar&&C.scrollbar.setTransition(e),C.params.control&&C.controller&&C.controller.setTransition(e,t),C.emit("onSetTransition",C,e)},C.setWrapperTranslate=function(e,t,n){var i=0,a=0,r=0;C.isHorizontal()?i=C.rtl?-e:e:a=e,C.params.roundLengths&&(i=s(i),a=s(a)),C.params.virtualTranslate||(C.support.transforms3d?C.wrapper.transform("translate3d("+i+"px, "+a+"px, "+r+"px)"):C.wrapper.transform("translate("+i+"px, "+a+"px)")),C.translate=C.isHorizontal()?i:a;var o,l=C.maxTranslate()-C.minTranslate();o=0===l?0:(e-C.minTranslate())/l,o!==C.progress&&C.updateProgress(e),t&&C.updateActiveIndex(),"slide"!==C.params.effect&&C.effects[C.params.effect]&&C.effects[C.params.effect].setTranslate(C.translate),C.params.parallax&&C.parallax&&C.parallax.setTranslate(C.translate),C.params.scrollbar&&C.scrollbar&&C.scrollbar.setTranslate(C.translate),C.params.control&&C.controller&&C.controller.setTranslate(C.translate,n),C.emit("onSetTranslate",C,C.translate)},C.getTranslate=function(e,t){var n,i,a,r;return"undefined"==typeof t&&(t="x"),C.params.virtualTranslate?C.rtl?-C.translate:C.translate:(a=window.getComputedStyle(e,null),window.WebKitCSSMatrix?(i=a.transform||a.webkitTransform,i.split(",").length>6&&(i=i.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),r=new window.WebKitCSSMatrix("none"===i?"":i)):(r=a.MozTransform||a.OTransform||a.MsTransform||a.msTransform||a.transform||a.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),n=r.toString().split(",")),"x"===t&&(i=window.WebKitCSSMatrix?r.m41:16===n.length?parseFloat(n[12]):parseFloat(n[4])),"y"===t&&(i=window.WebKitCSSMatrix?r.m42:16===n.length?parseFloat(n[13]):parseFloat(n[5])),C.rtl&&i&&(i=-i),i||0)},C.getWrapperTranslate=function(e){return"undefined"==typeof e&&(e=C.isHorizontal()?"x":"y"),C.getTranslate(C.wrapper[0],e)},C.observers=[],C.initObservers=function(){if(C.params.observeParents)for(var e=C.container.parents(),t=0;t<e.length;t++)p(e[t]);p(C.container[0],{childList:!1}),p(C.wrapper[0],{attributes:!1})},C.disconnectObservers=function(){for(var e=0;e<C.observers.length;e++)C.observers[e].disconnect();C.observers=[]},C.createLoop=function(){C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass).remove();var e=C.wrapper.children("."+C.params.slideClass);"auto"!==C.params.slidesPerView||C.params.loopedSlides||(C.params.loopedSlides=e.length),C.loopedSlides=parseInt(C.params.loopedSlides||C.params.slidesPerView,10),C.loopedSlides=C.loopedSlides+C.params.loopAdditionalSlides,C.loopedSlides>e.length&&(C.loopedSlides=e.length);var n,i=[],a=[];for(e.each(function(n,r){var s=t(this);n<C.loopedSlides&&a.push(r),n<e.length&&n>=e.length-C.loopedSlides&&i.push(r),s.attr("data-swiper-slide-index",n)}),n=0;n<a.length;n++)C.wrapper.append(t(a[n].cloneNode(!0)).addClass(C.params.slideDuplicateClass));for(n=i.length-1;n>=0;n--)C.wrapper.prepend(t(i[n].cloneNode(!0)).addClass(C.params.slideDuplicateClass))},C.destroyLoop=function(){C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass).remove(),C.slides.removeAttr("data-swiper-slide-index")},C.reLoop=function(e){var t=C.activeIndex-C.loopedSlides;C.destroyLoop(),C.createLoop(),C.updateSlidesSize(),e&&C.slideTo(t+C.loopedSlides,0,!1)},C.fixLoop=function(){var e;C.activeIndex<C.loopedSlides?(e=C.slides.length-3*C.loopedSlides+C.activeIndex,e+=C.loopedSlides,C.slideTo(e,0,!1,!0)):("auto"===C.params.slidesPerView&&C.activeIndex>=2*C.loopedSlides||C.activeIndex>C.slides.length-2*C.params.slidesPerView)&&(e=-C.slides.length+C.activeIndex+C.loopedSlides,e+=C.loopedSlides,C.slideTo(e,0,!1,!0))},C.appendSlide=function(e){if(C.params.loop&&C.destroyLoop(),"object"==typeof e&&e.length)for(var t=0;t<e.length;t++)e[t]&&C.wrapper.append(e[t]);else C.wrapper.append(e);C.params.loop&&C.createLoop(),C.params.observer&&C.support.observer||C.update(!0)},C.prependSlide=function(e){C.params.loop&&C.destroyLoop();var t=C.activeIndex+1;if("object"==typeof e&&e.length){for(var n=0;n<e.length;n++)e[n]&&C.wrapper.prepend(e[n]);t=C.activeIndex+e.length}else C.wrapper.prepend(e);C.params.loop&&C.createLoop(),C.params.observer&&C.support.observer||C.update(!0),C.slideTo(t,0,!1)},C.removeSlide=function(e){C.params.loop&&(C.destroyLoop(),C.slides=C.wrapper.children("."+C.params.slideClass));var t,n=C.activeIndex;if("object"==typeof e&&e.length){for(var i=0;i<e.length;i++)t=e[i],C.slides[t]&&C.slides.eq(t).remove(),t<n&&n--;n=Math.max(n,0)}else t=e,C.slides[t]&&C.slides.eq(t).remove(),t<n&&n--,n=Math.max(n,0);C.params.loop&&C.createLoop(),C.params.observer&&C.support.observer||C.update(!0),C.params.loop?C.slideTo(n+C.loopedSlides,0,!1):C.slideTo(n,0,!1)},C.removeAllSlides=function(){for(var e=[],t=0;t<C.slides.length;t++)e.push(t);C.removeSlide(e)},C.effects={fade:{setTranslate:function(){for(var e=0;e<C.slides.length;e++){var t=C.slides.eq(e),n=t[0].swiperSlideOffset,i=-n;C.params.virtualTranslate||(i-=C.translate);var a=0;C.isHorizontal()||(a=i,i=0);var r=C.params.fade.crossFade?Math.max(1-Math.abs(t[0].progress),0):1+Math.min(Math.max(t[0].progress,-1),0);t.css({opacity:r}).transform("translate3d("+i+"px, "+a+"px, 0px)")}},setTransition:function(e){if(C.slides.transition(e),C.params.virtualTranslate&&0!==e){var t=!1;C.slides.transitionEnd(function(){if(!t&&C){t=!0,C.animating=!1;for(var e=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],n=0;n<e.length;n++)C.wrapper.trigger(e[n])}})}}},flip:{setTranslate:function(){for(var e=0;e<C.slides.length;e++){var n=C.slides.eq(e),i=n[0].progress;C.params.flip.limitRotation&&(i=Math.max(Math.min(n[0].progress,1),-1));var a=n[0].swiperSlideOffset,r=-180*i,s=r,o=0,l=-a,p=0;if(C.isHorizontal()?C.rtl&&(s=-s):(p=l,l=0,o=-s,s=0),n[0].style.zIndex=-Math.abs(Math.round(i))+C.slides.length,C.params.flip.slideShadows){var u=C.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),d=C.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom");0===u.length&&(u=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"left":"top")+'"></div>'),n.append(u)),0===d.length&&(d=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"right":"bottom")+'"></div>'),n.append(d)),u.length&&(u[0].style.opacity=Math.max(-i,0)),d.length&&(d[0].style.opacity=Math.max(i,0))}n.transform("translate3d("+l+"px, "+p+"px, 0px) rotateX("+o+"deg) rotateY("+s+"deg)")}},setTransition:function(e){if(C.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),C.params.virtualTranslate&&0!==e){var n=!1;C.slides.eq(C.activeIndex).transitionEnd(function(){if(!n&&C&&t(this).hasClass(C.params.slideActiveClass)){n=!0,C.animating=!1;for(var e=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],i=0;i<e.length;i++)C.wrapper.trigger(e[i])}})}}},cube:{setTranslate:function(){var e,n=0;C.params.cube.shadow&&(C.isHorizontal()?(e=C.wrapper.find(".swiper-cube-shadow"),0===e.length&&(e=t('<div class="swiper-cube-shadow"></div>'),C.wrapper.append(e)),e.css({height:C.width+"px"})):(e=C.container.find(".swiper-cube-shadow"),0===e.length&&(e=t('<div class="swiper-cube-shadow"></div>'),C.container.append(e))));for(var i=0;i<C.slides.length;i++){var a=C.slides.eq(i),r=90*i,s=Math.floor(r/360);C.rtl&&(r=-r,s=Math.floor(-r/360));var o=Math.max(Math.min(a[0].progress,1),-1),l=0,p=0,u=0;i%4===0?(l=4*-s*C.size,u=0):(i-1)%4===0?(l=0,u=4*-s*C.size):(i-2)%4===0?(l=C.size+4*s*C.size,u=C.size):(i-3)%4===0&&(l=-C.size,u=3*C.size+4*C.size*s),C.rtl&&(l=-l),C.isHorizontal()||(p=l,l=0);var d="rotateX("+(C.isHorizontal()?0:-r)+"deg) rotateY("+(C.isHorizontal()?r:0)+"deg) translate3d("+l+"px, "+p+"px, "+u+"px)";if(o<=1&&o>-1&&(n=90*i+90*o,C.rtl&&(n=90*-i-90*o)),a.transform(d),C.params.cube.slideShadows){var c=C.isHorizontal()?a.find(".swiper-slide-shadow-left"):a.find(".swiper-slide-shadow-top"),f=C.isHorizontal()?a.find(".swiper-slide-shadow-right"):a.find(".swiper-slide-shadow-bottom");0===c.length&&(c=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"left":"top")+'"></div>'),a.append(c)),0===f.length&&(f=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"right":"bottom")+'"></div>'),a.append(f)),c.length&&(c[0].style.opacity=Math.max(-o,0)),f.length&&(f[0].style.opacity=Math.max(o,0))}}if(C.wrapper.css({"-webkit-transform-origin":"50% 50% -"+C.size/2+"px","-moz-transform-origin":"50% 50% -"+C.size/2+"px","-ms-transform-origin":"50% 50% -"+C.size/2+"px","transform-origin":"50% 50% -"+C.size/2+"px"}),C.params.cube.shadow)if(C.isHorizontal())e.transform("translate3d(0px, "+(C.width/2+C.params.cube.shadowOffset)+"px, "+-C.width/2+"px) rotateX(90deg) rotateZ(0deg) scale("+C.params.cube.shadowScale+")");else{var h=Math.abs(n)-90*Math.floor(Math.abs(n)/90),m=1.5-(Math.sin(2*h*Math.PI/360)/2+Math.cos(2*h*Math.PI/360)/2),g=C.params.cube.shadowScale,v=C.params.cube.shadowScale/m,y=C.params.cube.shadowOffset;e.transform("scale3d("+g+", 1, "+v+") translate3d(0px, "+(C.height/2+y)+"px, "+-C.height/2/v+"px) rotateX(-90deg)")}var w=C.isSafari||C.isUiWebView?-C.size/2:0;C.wrapper.transform("translate3d(0px,0,"+w+"px) rotateX("+(C.isHorizontal()?0:n)+"deg) rotateY("+(C.isHorizontal()?-n:0)+"deg)")},setTransition:function(e){C.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),C.params.cube.shadow&&!C.isHorizontal()&&C.container.find(".swiper-cube-shadow").transition(e)}},coverflow:{setTranslate:function(){for(var e=C.translate,n=C.isHorizontal()?-e+C.width/2:-e+C.height/2,i=C.isHorizontal()?C.params.coverflow.rotate:-C.params.coverflow.rotate,a=C.params.coverflow.depth,r=0,s=C.slides.length;r<s;r++){var o=C.slides.eq(r),l=C.slidesSizesGrid[r],p=o[0].swiperSlideOffset,u=(n-p-l/2)/l*C.params.coverflow.modifier,d=C.isHorizontal()?i*u:0,c=C.isHorizontal()?0:i*u,f=-a*Math.abs(u),h=C.isHorizontal()?0:C.params.coverflow.stretch*u,m=C.isHorizontal()?C.params.coverflow.stretch*u:0;Math.abs(m)<.001&&(m=0),Math.abs(h)<.001&&(h=0),Math.abs(f)<.001&&(f=0),Math.abs(d)<.001&&(d=0),Math.abs(c)<.001&&(c=0);var g="translate3d("+m+"px,"+h+"px,"+f+"px)  rotateX("+c+"deg) rotateY("+d+"deg)";if(o.transform(g),o[0].style.zIndex=-Math.abs(Math.round(u))+1,C.params.coverflow.slideShadows){var v=C.isHorizontal()?o.find(".swiper-slide-shadow-left"):o.find(".swiper-slide-shadow-top"),y=C.isHorizontal()?o.find(".swiper-slide-shadow-right"):o.find(".swiper-slide-shadow-bottom");0===v.length&&(v=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"left":"top")+'"></div>'),o.append(v)),0===y.length&&(y=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"right":"bottom")+'"></div>'),o.append(y)),v.length&&(v[0].style.opacity=u>0?u:0),y.length&&(y[0].style.opacity=-u>0?-u:0)}}if(C.browser.ie){var w=C.wrapper[0].style;w.perspectiveOrigin=n+"px 50%"}},setTransition:function(e){C.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}}},C.lazy={initialImageLoaded:!1,loadImageInSlide:function(e,n){if("undefined"!=typeof e&&("undefined"==typeof n&&(n=!0),0!==C.slides.length)){var i=C.slides.eq(e),a=i.find("."+C.params.lazyLoadingClass+":not(."+C.params.lazyStatusLoadedClass+"):not(."+C.params.lazyStatusLoadingClass+")");!i.hasClass(C.params.lazyLoadingClass)||i.hasClass(C.params.lazyStatusLoadedClass)||i.hasClass(C.params.lazyStatusLoadingClass)||(a=a.add(i[0])),0!==a.length&&a.each(function(){var e=t(this);e.addClass(C.params.lazyStatusLoadingClass);var a=e.attr("data-background"),r=e.attr("data-src"),s=e.attr("data-srcset"),o=e.attr("data-sizes");C.loadImage(e[0],r||a,s,o,!1,function(){if(a?(e.css("background-image",'url("'+a+'")'),e.removeAttr("data-background")):(s&&(e.attr("srcset",s),e.removeAttr("data-srcset")),o&&(e.attr("sizes",o),e.removeAttr("data-sizes")),r&&(e.attr("src",r),e.removeAttr("data-src"))),e.addClass(C.params.lazyStatusLoadedClass).removeClass(C.params.lazyStatusLoadingClass),i.find("."+C.params.lazyPreloaderClass+", ."+C.params.preloaderClass).remove(),C.params.loop&&n){var t=i.attr("data-swiper-slide-index");if(i.hasClass(C.params.slideDuplicateClass)){var l=C.wrapper.children('[data-swiper-slide-index="'+t+'"]:not(.'+C.params.slideDuplicateClass+")");C.lazy.loadImageInSlide(l.index(),!1)}else{var p=C.wrapper.children("."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+t+'"]');C.lazy.loadImageInSlide(p.index(),!1)}}C.emit("onLazyImageReady",C,i[0],e[0])}),C.emit("onLazyImageLoad",C,i[0],e[0])})}},load:function(){var e,n=C.params.slidesPerView;if("auto"===n&&(n=0),C.lazy.initialImageLoaded||(C.lazy.initialImageLoaded=!0),C.params.watchSlidesVisibility)C.wrapper.children("."+C.params.slideVisibleClass).each(function(){C.lazy.loadImageInSlide(t(this).index())});else if(n>1)for(e=C.activeIndex;e<C.activeIndex+n;e++)C.slides[e]&&C.lazy.loadImageInSlide(e);else C.lazy.loadImageInSlide(C.activeIndex);if(C.params.lazyLoadingInPrevNext)if(n>1||C.params.lazyLoadingInPrevNextAmount&&C.params.lazyLoadingInPrevNextAmount>1){var i=C.params.lazyLoadingInPrevNextAmount,a=n,r=Math.min(C.activeIndex+a+Math.max(i,a),C.slides.length),s=Math.max(C.activeIndex-Math.max(a,i),0);for(e=C.activeIndex+n;e<r;e++)C.slides[e]&&C.lazy.loadImageInSlide(e);for(e=s;e<C.activeIndex;e++)C.slides[e]&&C.lazy.loadImageInSlide(e)}else{var o=C.wrapper.children("."+C.params.slideNextClass);o.length>0&&C.lazy.loadImageInSlide(o.index());var l=C.wrapper.children("."+C.params.slidePrevClass);l.length>0&&C.lazy.loadImageInSlide(l.index())}},onTransitionStart:function(){C.params.lazyLoading&&(C.params.lazyLoadingOnTransitionStart||!C.params.lazyLoadingOnTransitionStart&&!C.lazy.initialImageLoaded)&&C.lazy.load()},onTransitionEnd:function(){C.params.lazyLoading&&!C.params.lazyLoadingOnTransitionStart&&C.lazy.load()}},C.scrollbar={isTouched:!1,setDragPosition:function(e){var t=C.scrollbar,n=C.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY,i=n-t.track.offset()[C.isHorizontal()?"left":"top"]-t.dragSize/2,a=-C.minTranslate()*t.moveDivider,r=-C.maxTranslate()*t.moveDivider;i<a?i=a:i>r&&(i=r),i=-i/t.moveDivider,C.updateProgress(i),C.setWrapperTranslate(i,!0)},dragStart:function(e){var t=C.scrollbar;t.isTouched=!0,e.preventDefault(),e.stopPropagation(),t.setDragPosition(e),clearTimeout(t.dragTimeout),t.track.transition(0),C.params.scrollbarHide&&t.track.css("opacity",1),C.wrapper.transition(100),t.drag.transition(100),C.emit("onScrollbarDragStart",C)},dragMove:function(e){var t=C.scrollbar;t.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),C.wrapper.transition(0),t.track.transition(0),t.drag.transition(0),C.emit("onScrollbarDragMove",C))},dragEnd:function(e){var t=C.scrollbar;t.isTouched&&(t.isTouched=!1,C.params.scrollbarHide&&(clearTimeout(t.dragTimeout),t.dragTimeout=setTimeout(function(){t.track.css("opacity",0),t.track.transition(400)},1e3)),C.emit("onScrollbarDragEnd",C),C.params.scrollbarSnapOnRelease&&C.slideReset())},draggableEvents:function(){return C.params.simulateTouch!==!1||C.support.touch?C.touchEvents:C.touchEventsDesktop}(),enableDraggable:function(){var e=C.scrollbar,n=C.support.touch?e.track:document;t(e.track).on(e.draggableEvents.start,e.dragStart),t(n).on(e.draggableEvents.move,e.dragMove),t(n).on(e.draggableEvents.end,e.dragEnd)},disableDraggable:function(){var e=C.scrollbar,n=C.support.touch?e.track:document;t(e.track).off(C.draggableEvents.start,e.dragStart),t(n).off(C.draggableEvents.move,e.dragMove),t(n).off(C.draggableEvents.end,e.dragEnd)},set:function(){if(C.params.scrollbar){var e=C.scrollbar;e.track=t(C.params.scrollbar),C.params.uniqueNavElements&&"string"==typeof C.params.scrollbar&&e.track.length>1&&1===C.container.find(C.params.scrollbar).length&&(e.track=C.container.find(C.params.scrollbar)),e.drag=e.track.find(".swiper-scrollbar-drag"),0===e.drag.length&&(e.drag=t('<div class="swiper-scrollbar-drag"></div>'),e.track.append(e.drag)),e.drag[0].style.width="",e.drag[0].style.height="",e.trackSize=C.isHorizontal()?e.track[0].offsetWidth:e.track[0].offsetHeight,e.divider=C.size/C.virtualSize,e.moveDivider=e.divider*(e.trackSize/C.size),e.dragSize=e.trackSize*e.divider,C.isHorizontal()?e.drag[0].style.width=e.dragSize+"px":e.drag[0].style.height=e.dragSize+"px",e.divider>=1?e.track[0].style.display="none":e.track[0].style.display="",C.params.scrollbarHide&&(e.track[0].style.opacity=0)}},setTranslate:function(){if(C.params.scrollbar){var e,t=C.scrollbar,n=(C.translate||0,t.dragSize);e=(t.trackSize-t.dragSize)*C.progress,C.rtl&&C.isHorizontal()?(e=-e,e>0?(n=t.dragSize-e,e=0):-e+t.dragSize>t.trackSize&&(n=t.trackSize+e)):e<0?(n=t.dragSize+e,e=0):e+t.dragSize>t.trackSize&&(n=t.trackSize-e),C.isHorizontal()?(C.support.transforms3d?t.drag.transform("translate3d("+e+"px, 0, 0)"):t.drag.transform("translateX("+e+"px)"),t.drag[0].style.width=n+"px"):(C.support.transforms3d?t.drag.transform("translate3d(0px, "+e+"px, 0)"):t.drag.transform("translateY("+e+"px)"),t.drag[0].style.height=n+"px"),C.params.scrollbarHide&&(clearTimeout(t.timeout),t.track[0].style.opacity=1,t.timeout=setTimeout(function(){t.track[0].style.opacity=0,t.track.transition(400)},1e3))}},setTransition:function(e){C.params.scrollbar&&C.scrollbar.drag.transition(e)}},C.controller={LinearSpline:function(e,t){this.x=e,this.y=t,this.lastIndex=e.length-1;var n,i;this.x.length;this.interpolate=function(e){return e?(i=a(this.x,e),n=i-1,(e-this.x[n])*(this.y[i]-this.y[n])/(this.x[i]-this.x[n])+this.y[n]):0};var a=function(){var e,t,n;return function(i,a){for(t=-1,e=i.length;e-t>1;)i[n=e+t>>1]<=a?t=n:e=n;return e}}()},getInterpolateFunction:function(e){C.controller.spline||(C.controller.spline=C.params.loop?new C.controller.LinearSpline(C.slidesGrid,e.slidesGrid):new C.controller.LinearSpline(C.snapGrid,e.snapGrid))},setTranslate:function(e,t){function i(t){e=t.rtl&&"horizontal"===t.params.direction?-C.translate:C.translate,"slide"===C.params.controlBy&&(C.controller.getInterpolateFunction(t),r=-C.controller.spline.interpolate(-e)),r&&"container"!==C.params.controlBy||(a=(t.maxTranslate()-t.minTranslate())/(C.maxTranslate()-C.minTranslate()),r=(e-C.minTranslate())*a+t.minTranslate()),C.params.controlInverse&&(r=t.maxTranslate()-r),t.updateProgress(r),t.setWrapperTranslate(r,!1,C),t.updateActiveIndex()}var a,r,s=C.params.control;if(C.isArray(s))for(var o=0;o<s.length;o++)s[o]!==t&&s[o]instanceof n&&i(s[o]);else s instanceof n&&t!==s&&i(s)},setTransition:function(e,t){function i(t){t.setWrapperTransition(e,C),0!==e&&(t.onTransitionStart(),t.wrapper.transitionEnd(function(){r&&(t.params.loop&&"slide"===C.params.controlBy&&t.fixLoop(),t.onTransitionEnd())}))}var a,r=C.params.control;if(C.isArray(r))for(a=0;a<r.length;a++)r[a]!==t&&r[a]instanceof n&&i(r[a]);else r instanceof n&&t!==r&&i(r)}},C.hashnav={onHashCange:function(e,t){var n=document.location.hash.replace("#",""),i=C.slides.eq(C.activeIndex).attr("data-hash");n!==i&&C.slideTo(C.wrapper.children("."+C.params.slideClass+'[data-hash="'+n+'"]').index())},attachEvents:function(e){var n=e?"off":"on";t(window)[n]("hashchange",C.hashnav.onHashCange)},setHash:function(){if(C.hashnav.initialized&&C.params.hashnav)if(C.params.replaceState&&window.history&&window.history.replaceState)window.history.replaceState(null,null,"#"+C.slides.eq(C.activeIndex).attr("data-hash")||"");else{var e=C.slides.eq(C.activeIndex),t=e.attr("data-hash")||e.attr("data-history");document.location.hash=t||""}},init:function(){if(C.params.hashnav&&!C.params.history){C.hashnav.initialized=!0;var e=document.location.hash.replace("#","");if(e){for(var t=0,n=0,i=C.slides.length;n<i;n++){var a=C.slides.eq(n),r=a.attr("data-hash")||a.attr("data-history");if(r===e&&!a.hasClass(C.params.slideDuplicateClass)){var s=a.index();C.slideTo(s,t,C.params.runCallbacksOnInit,!0)}}C.params.hashnavWatchState&&C.hashnav.attachEvents()}}},destroy:function(){C.params.hashnavWatchState&&C.hashnav.attachEvents(!0)}},C.history={init:function(){if(C.params.history){if(!window.history||!window.history.pushState)return C.params.history=!1,void(C.params.hashnav=!0);C.history.initialized=!0,this.paths=this.getPathValues(),(this.paths.key||this.paths.value)&&(this.scrollToSlide(0,this.paths.value,C.params.runCallbacksOnInit),C.params.replaceState||window.addEventListener("popstate",this.setHistoryPopState))}},setHistoryPopState:function(){C.history.paths=C.history.getPathValues(),C.history.scrollToSlide(C.params.speed,C.history.paths.value,!1)},getPathValues:function(){var e=window.location.pathname.slice(1).split("/"),t=e.length,n=e[t-2],i=e[t-1];return{key:n,value:i}},setHistory:function(e,t){if(C.history.initialized&&C.params.history){var n=C.slides.eq(t),i=this.slugify(n.attr("data-history"));window.location.pathname.includes(e)||(i=e+"/"+i),C.params.replaceState?window.history.replaceState(null,null,i):window.history.pushState(null,null,i)}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,n){if(t)for(var i=0,a=C.slides.length;i<a;i++){var r=C.slides.eq(i),s=this.slugify(r.attr("data-history"));if(s===t&&!r.hasClass(C.params.slideDuplicateClass)){var o=r.index();C.slideTo(o,e,n)}}else C.slideTo(0,e,n)}},C.disableKeyboardControl=function(){C.params.keyboardControl=!1,t(document).off("keydown",u)},C.enableKeyboardControl=function(){C.params.keyboardControl=!0,t(document).on("keydown",u)},C.mousewheel={event:!1,lastScrollTime:(new window.Date).getTime()},C.params.mousewheelControl&&(C.mousewheel.event=navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":d()?"wheel":"mousewheel"),C.disableMousewheelControl=function(){if(!C.mousewheel.event)return!1;var e=C.container;return"container"!==C.params.mousewheelEventsTarged&&(e=t(C.params.mousewheelEventsTarged)),e.off(C.mousewheel.event,c),!0},C.enableMousewheelControl=function(){if(!C.mousewheel.event)return!1;var e=C.container;return"container"!==C.params.mousewheelEventsTarged&&(e=t(C.params.mousewheelEventsTarged)),e.on(C.mousewheel.event,c),!0},C.parallax={setTranslate:function(){C.container.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){h(this,C.progress)}),C.slides.each(function(){var e=t(this);e.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){var t=Math.min(Math.max(e[0].progress,-1),1);h(this,t)})})},setTransition:function(e){"undefined"==typeof e&&(e=C.params.speed),C.container.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){var n=t(this),i=parseInt(n.attr("data-swiper-parallax-duration"),10)||e;0===e&&(i=0),n.transition(i)})}},C.zoom={scale:1,currentScale:1,isScaling:!1,gesture:{slide:void 0,slideWidth:void 0,slideHeight:void 0,image:void 0,imageWrap:void 0,zoomMax:C.params.zoomMax},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0},getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,n=e.targetTouches[0].pageY,i=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY,r=Math.sqrt(Math.pow(i-t,2)+Math.pow(a-n,2));return r},onGestureStart:function(e){var n=C.zoom;if(!C.support.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;n.gesture.scaleStart=n.getDistanceBetweenTouches(e)}return n.gesture.slide&&n.gesture.slide.length||(n.gesture.slide=t(this),0===n.gesture.slide.length&&(n.gesture.slide=C.slides.eq(C.activeIndex)),n.gesture.image=n.gesture.slide.find("img, svg, canvas"),n.gesture.imageWrap=n.gesture.image.parent("."+C.params.zoomContainerClass),n.gesture.zoomMax=n.gesture.imageWrap.attr("data-swiper-zoom")||C.params.zoomMax,0!==n.gesture.imageWrap.length)?(n.gesture.image.transition(0),void(n.isScaling=!0)):void(n.gesture.image=void 0)},onGestureChange:function(e){var t=C.zoom;if(!C.support.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;t.gesture.scaleMove=t.getDistanceBetweenTouches(e)}t.gesture.image&&0!==t.gesture.image.length&&(C.support.gestures?t.scale=e.scale*t.currentScale:t.scale=t.gesture.scaleMove/t.gesture.scaleStart*t.currentScale,t.scale>t.gesture.zoomMax&&(t.scale=t.gesture.zoomMax-1+Math.pow(t.scale-t.gesture.zoomMax+1,.5)),t.scale<C.params.zoomMin&&(t.scale=C.params.zoomMin+1-Math.pow(C.params.zoomMin-t.scale+1,.5)),t.gesture.image.transform("translate3d(0,0,0) scale("+t.scale+")"))},onGestureEnd:function(e){var t=C.zoom;!C.support.gestures&&("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2)||t.gesture.image&&0!==t.gesture.image.length&&(t.scale=Math.max(Math.min(t.scale,t.gesture.zoomMax),C.params.zoomMin),t.gesture.image.transition(C.params.speed).transform("translate3d(0,0,0) scale("+t.scale+")"),t.currentScale=t.scale,t.isScaling=!1,1===t.scale&&(t.gesture.slide=void 0))},onTouchStart:function(e,t){var n=e.zoom;
n.gesture.image&&0!==n.gesture.image.length&&(n.image.isTouched||("android"===e.device.os&&t.preventDefault(),n.image.isTouched=!0,n.image.touchesStart.x="touchstart"===t.type?t.targetTouches[0].pageX:t.pageX,n.image.touchesStart.y="touchstart"===t.type?t.targetTouches[0].pageY:t.pageY))},onTouchMove:function(e){var t=C.zoom;if(t.gesture.image&&0!==t.gesture.image.length&&(C.allowClick=!1,t.image.isTouched&&t.gesture.slide)){t.image.isMoved||(t.image.width=t.gesture.image[0].offsetWidth,t.image.height=t.gesture.image[0].offsetHeight,t.image.startX=C.getTranslate(t.gesture.imageWrap[0],"x")||0,t.image.startY=C.getTranslate(t.gesture.imageWrap[0],"y")||0,t.gesture.slideWidth=t.gesture.slide[0].offsetWidth,t.gesture.slideHeight=t.gesture.slide[0].offsetHeight,t.gesture.imageWrap.transition(0));var n=t.image.width*t.scale,i=t.image.height*t.scale;if(!(n<t.gesture.slideWidth&&i<t.gesture.slideHeight)){if(t.image.minX=Math.min(t.gesture.slideWidth/2-n/2,0),t.image.maxX=-t.image.minX,t.image.minY=Math.min(t.gesture.slideHeight/2-i/2,0),t.image.maxY=-t.image.minY,t.image.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,t.image.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!t.image.isMoved&&!t.isScaling){if(C.isHorizontal()&&Math.floor(t.image.minX)===Math.floor(t.image.startX)&&t.image.touchesCurrent.x<t.image.touchesStart.x||Math.floor(t.image.maxX)===Math.floor(t.image.startX)&&t.image.touchesCurrent.x>t.image.touchesStart.x)return void(t.image.isTouched=!1);if(!C.isHorizontal()&&Math.floor(t.image.minY)===Math.floor(t.image.startY)&&t.image.touchesCurrent.y<t.image.touchesStart.y||Math.floor(t.image.maxY)===Math.floor(t.image.startY)&&t.image.touchesCurrent.y>t.image.touchesStart.y)return void(t.image.isTouched=!1)}e.preventDefault(),e.stopPropagation(),t.image.isMoved=!0,t.image.currentX=t.image.touchesCurrent.x-t.image.touchesStart.x+t.image.startX,t.image.currentY=t.image.touchesCurrent.y-t.image.touchesStart.y+t.image.startY,t.image.currentX<t.image.minX&&(t.image.currentX=t.image.minX+1-Math.pow(t.image.minX-t.image.currentX+1,.8)),t.image.currentX>t.image.maxX&&(t.image.currentX=t.image.maxX-1+Math.pow(t.image.currentX-t.image.maxX+1,.8)),t.image.currentY<t.image.minY&&(t.image.currentY=t.image.minY+1-Math.pow(t.image.minY-t.image.currentY+1,.8)),t.image.currentY>t.image.maxY&&(t.image.currentY=t.image.maxY-1+Math.pow(t.image.currentY-t.image.maxY+1,.8)),t.velocity.prevPositionX||(t.velocity.prevPositionX=t.image.touchesCurrent.x),t.velocity.prevPositionY||(t.velocity.prevPositionY=t.image.touchesCurrent.y),t.velocity.prevTime||(t.velocity.prevTime=Date.now()),t.velocity.x=(t.image.touchesCurrent.x-t.velocity.prevPositionX)/(Date.now()-t.velocity.prevTime)/2,t.velocity.y=(t.image.touchesCurrent.y-t.velocity.prevPositionY)/(Date.now()-t.velocity.prevTime)/2,Math.abs(t.image.touchesCurrent.x-t.velocity.prevPositionX)<2&&(t.velocity.x=0),Math.abs(t.image.touchesCurrent.y-t.velocity.prevPositionY)<2&&(t.velocity.y=0),t.velocity.prevPositionX=t.image.touchesCurrent.x,t.velocity.prevPositionY=t.image.touchesCurrent.y,t.velocity.prevTime=Date.now(),t.gesture.imageWrap.transform("translate3d("+t.image.currentX+"px, "+t.image.currentY+"px,0)")}}},onTouchEnd:function(e,t){var n=e.zoom;if(n.gesture.image&&0!==n.gesture.image.length){if(!n.image.isTouched||!n.image.isMoved)return n.image.isTouched=!1,void(n.image.isMoved=!1);n.image.isTouched=!1,n.image.isMoved=!1;var i=300,a=300,r=n.velocity.x*i,s=n.image.currentX+r,o=n.velocity.y*a,l=n.image.currentY+o;0!==n.velocity.x&&(i=Math.abs((s-n.image.currentX)/n.velocity.x)),0!==n.velocity.y&&(a=Math.abs((l-n.image.currentY)/n.velocity.y));var p=Math.max(i,a);n.image.currentX=s,n.image.currentY=l;var u=n.image.width*n.scale,d=n.image.height*n.scale;n.image.minX=Math.min(n.gesture.slideWidth/2-u/2,0),n.image.maxX=-n.image.minX,n.image.minY=Math.min(n.gesture.slideHeight/2-d/2,0),n.image.maxY=-n.image.minY,n.image.currentX=Math.max(Math.min(n.image.currentX,n.image.maxX),n.image.minX),n.image.currentY=Math.max(Math.min(n.image.currentY,n.image.maxY),n.image.minY),n.gesture.imageWrap.transition(p).transform("translate3d("+n.image.currentX+"px, "+n.image.currentY+"px,0)")}},onTransitionEnd:function(e){var t=e.zoom;t.gesture.slide&&e.previousIndex!==e.activeIndex&&(t.gesture.image.transform("translate3d(0,0,0) scale(1)"),t.gesture.imageWrap.transform("translate3d(0,0,0)"),t.gesture.slide=t.gesture.image=t.gesture.imageWrap=void 0,t.scale=t.currentScale=1)},toggleZoom:function(e,n){var i=e.zoom;if(i.gesture.slide||(i.gesture.slide=e.clickedSlide?t(e.clickedSlide):e.slides.eq(e.activeIndex),i.gesture.image=i.gesture.slide.find("img, svg, canvas"),i.gesture.imageWrap=i.gesture.image.parent("."+e.params.zoomContainerClass)),i.gesture.image&&0!==i.gesture.image.length){var a,r,s,o,l,p,u,d,c,f,h,m,g,v,y,w,b,x;"undefined"==typeof i.image.touchesStart.x&&n?(a="touchend"===n.type?n.changedTouches[0].pageX:n.pageX,r="touchend"===n.type?n.changedTouches[0].pageY:n.pageY):(a=i.image.touchesStart.x,r=i.image.touchesStart.y),i.scale&&1!==i.scale?(i.scale=i.currentScale=1,i.gesture.imageWrap.transition(300).transform("translate3d(0,0,0)"),i.gesture.image.transition(300).transform("translate3d(0,0,0) scale(1)"),i.gesture.slide=void 0):(i.scale=i.currentScale=i.gesture.imageWrap.attr("data-swiper-zoom")||e.params.zoomMax,n?(b=i.gesture.slide[0].offsetWidth,x=i.gesture.slide[0].offsetHeight,s=i.gesture.slide.offset().left,o=i.gesture.slide.offset().top,l=s+b/2-a,p=o+x/2-r,c=i.gesture.image[0].offsetWidth,f=i.gesture.image[0].offsetHeight,h=c*i.scale,m=f*i.scale,g=Math.min(b/2-h/2,0),v=Math.min(x/2-m/2,0),y=-g,w=-v,u=l*i.scale,d=p*i.scale,u<g&&(u=g),u>y&&(u=y),d<v&&(d=v),d>w&&(d=w)):(u=0,d=0),i.gesture.imageWrap.transition(300).transform("translate3d("+u+"px, "+d+"px,0)"),i.gesture.image.transition(300).transform("translate3d(0,0,0) scale("+i.scale+")"))}},attachEvents:function(e){var n=e?"off":"on";if(C.params.zoom){var i=(C.slides,!("touchstart"!==C.touchEvents.start||!C.support.passiveListener||!C.params.passiveListeners)&&{passive:!0,capture:!1});C.support.gestures?(C.slides[n]("gesturestart",C.zoom.onGestureStart,i),C.slides[n]("gesturechange",C.zoom.onGestureChange,i),C.slides[n]("gestureend",C.zoom.onGestureEnd,i)):"touchstart"===C.touchEvents.start&&(C.slides[n](C.touchEvents.start,C.zoom.onGestureStart,i),C.slides[n](C.touchEvents.move,C.zoom.onGestureChange,i),C.slides[n](C.touchEvents.end,C.zoom.onGestureEnd,i)),C[n]("touchStart",C.zoom.onTouchStart),C.slides.each(function(e,i){t(i).find("."+C.params.zoomContainerClass).length>0&&t(i)[n](C.touchEvents.move,C.zoom.onTouchMove)}),C[n]("touchEnd",C.zoom.onTouchEnd),C[n]("transitionEnd",C.zoom.onTransitionEnd),C.params.zoomToggle&&C.on("doubleTap",C.zoom.toggleZoom)}},init:function(){C.zoom.attachEvents()},destroy:function(){C.zoom.attachEvents(!0)}},C._plugins=[];for(var R in C.plugins){var F=C.plugins[R](C,C.params[R]);F&&C._plugins.push(F)}return C.callPlugins=function(e){for(var t=0;t<C._plugins.length;t++)e in C._plugins[t]&&C._plugins[t][e](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},C.emitterEventListeners={},C.emit=function(e){C.params[e]&&C.params[e](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);var t;if(C.emitterEventListeners[e])for(t=0;t<C.emitterEventListeners[e].length;t++)C.emitterEventListeners[e][t](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);C.callPlugins&&C.callPlugins(e,arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},C.on=function(e,t){return e=m(e),C.emitterEventListeners[e]||(C.emitterEventListeners[e]=[]),C.emitterEventListeners[e].push(t),C},C.off=function(e,t){var n;if(e=m(e),"undefined"==typeof t)return C.emitterEventListeners[e]=[],C;if(C.emitterEventListeners[e]&&0!==C.emitterEventListeners[e].length){for(n=0;n<C.emitterEventListeners[e].length;n++)C.emitterEventListeners[e][n]===t&&C.emitterEventListeners[e].splice(n,1);return C}},C.once=function(e,t){e=m(e);var n=function(){t(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]),C.off(e,n)};return C.on(e,n),C},C.a11y={makeFocusable:function(e){return e.attr("tabIndex","0"),e},addRole:function(e,t){return e.attr("role",t),e},addLabel:function(e,t){return e.attr("aria-label",t),e},disable:function(e){return e.attr("aria-disabled",!0),e},enable:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){13===e.keyCode&&(t(e.target).is(C.params.nextButton)?(C.onClickNext(e),C.isEnd?C.a11y.notify(C.params.lastSlideMessage):C.a11y.notify(C.params.nextSlideMessage)):t(e.target).is(C.params.prevButton)&&(C.onClickPrev(e),C.isBeginning?C.a11y.notify(C.params.firstSlideMessage):C.a11y.notify(C.params.prevSlideMessage)),t(e.target).is("."+C.params.bulletClass)&&t(e.target)[0].click())},liveRegion:t('<span class="'+C.params.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>'),notify:function(e){var t=C.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},init:function(){C.params.nextButton&&C.nextButton&&C.nextButton.length>0&&(C.a11y.makeFocusable(C.nextButton),C.a11y.addRole(C.nextButton,"button"),C.a11y.addLabel(C.nextButton,C.params.nextSlideMessage)),C.params.prevButton&&C.prevButton&&C.prevButton.length>0&&(C.a11y.makeFocusable(C.prevButton),C.a11y.addRole(C.prevButton,"button"),C.a11y.addLabel(C.prevButton,C.params.prevSlideMessage)),t(C.container).append(C.a11y.liveRegion)},initPagination:function(){C.params.pagination&&C.params.paginationClickable&&C.bullets&&C.bullets.length&&C.bullets.each(function(){var e=t(this);C.a11y.makeFocusable(e),C.a11y.addRole(e,"button"),C.a11y.addLabel(e,C.params.paginationBulletMessage.replace(/{{index}}/,e.index()+1))})},destroy:function(){C.a11y.liveRegion&&C.a11y.liveRegion.length>0&&C.a11y.liveRegion.remove()}},C.init=function(){C.params.loop&&C.createLoop(),C.updateContainerSize(),C.updateSlidesSize(),C.updatePagination(),C.params.scrollbar&&C.scrollbar&&(C.scrollbar.set(),C.params.scrollbarDraggable&&C.scrollbar.enableDraggable()),"slide"!==C.params.effect&&C.effects[C.params.effect]&&(C.params.loop||C.updateProgress(),C.effects[C.params.effect].setTranslate()),C.params.loop?C.slideTo(C.params.initialSlide+C.loopedSlides,0,C.params.runCallbacksOnInit):(C.slideTo(C.params.initialSlide,0,C.params.runCallbacksOnInit),0===C.params.initialSlide&&(C.parallax&&C.params.parallax&&C.parallax.setTranslate(),C.lazy&&C.params.lazyLoading&&(C.lazy.load(),C.lazy.initialImageLoaded=!0))),C.attachEvents(),C.params.observer&&C.support.observer&&C.initObservers(),C.params.preloadImages&&!C.params.lazyLoading&&C.preloadImages(),C.params.zoom&&C.zoom&&C.zoom.init(),C.params.autoplay&&C.startAutoplay(),C.params.keyboardControl&&C.enableKeyboardControl&&C.enableKeyboardControl(),C.params.mousewheelControl&&C.enableMousewheelControl&&C.enableMousewheelControl(),C.params.hashnavReplaceState&&(C.params.replaceState=C.params.hashnavReplaceState),C.params.history&&C.history&&C.history.init(),C.params.hashnav&&C.hashnav&&C.hashnav.init(),C.params.a11y&&C.a11y&&C.a11y.init(),C.emit("onInit",C)},C.cleanupStyles=function(){C.container.removeClass(C.classNames.join(" ")).removeAttr("style"),C.wrapper.removeAttr("style"),C.slides&&C.slides.length&&C.slides.removeClass([C.params.slideVisibleClass,C.params.slideActiveClass,C.params.slideNextClass,C.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row"),C.paginationContainer&&C.paginationContainer.length&&C.paginationContainer.removeClass(C.params.paginationHiddenClass),C.bullets&&C.bullets.length&&C.bullets.removeClass(C.params.bulletActiveClass),C.params.prevButton&&t(C.params.prevButton).removeClass(C.params.buttonDisabledClass),C.params.nextButton&&t(C.params.nextButton).removeClass(C.params.buttonDisabledClass),C.params.scrollbar&&C.scrollbar&&(C.scrollbar.track&&C.scrollbar.track.length&&C.scrollbar.track.removeAttr("style"),C.scrollbar.drag&&C.scrollbar.drag.length&&C.scrollbar.drag.removeAttr("style"))},C.destroy=function(e,t){C.detachEvents(),C.stopAutoplay(),C.params.scrollbar&&C.scrollbar&&C.params.scrollbarDraggable&&C.scrollbar.disableDraggable(),C.params.loop&&C.destroyLoop(),t&&C.cleanupStyles(),C.disconnectObservers(),C.params.zoom&&C.zoom&&C.zoom.destroy(),C.params.keyboardControl&&C.disableKeyboardControl&&C.disableKeyboardControl(),C.params.mousewheelControl&&C.disableMousewheelControl&&C.disableMousewheelControl(),C.params.a11y&&C.a11y&&C.a11y.destroy(),C.params.history&&!C.params.replaceState&&window.removeEventListener("popstate",C.history.setHistoryPopState),C.params.hashnav&&C.hashnav&&C.hashnav.destroy(),C.emit("onDestroy"),e!==!1&&(C=null)},C.init(),C}};n.prototype={isSafari:function(){var e=navigator.userAgent.toLowerCase();return e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0}(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),isArray:function(e){return"[object Array]"===Object.prototype.toString.apply(e)},browser:{ie:window.navigator.pointerEnabled||window.navigator.msPointerEnabled,ieTouch:window.navigator.msPointerEnabled&&window.navigator.msMaxTouchPoints>1||window.navigator.pointerEnabled&&window.navigator.maxTouchPoints>1,lteIE9:function(){var e=document.createElement("div");return e.innerHTML="<!--[if lte IE 9]><i></i><![endif]-->",1===e.getElementsByTagName("i").length}()},device:function(){var e=navigator.userAgent,t=e.match(/(Android);?[\s\/]+([\d.]+)?/),n=e.match(/(iPad).*OS\s([\d_]+)/),i=e.match(/(iPod)(.*OS\s([\d_]+))?/),a=!n&&e.match(/(iPhone\sOS)\s([\d_]+)/);return{ios:n||a||i,android:t}}(),support:{touch:window.Modernizr&&Modernizr.touch===!0||function(){return!!("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch)}(),transforms3d:window.Modernizr&&Modernizr.csstransforms3d===!0||function(){var e=document.createElement("div").style;return"webkitPerspective"in e||"MozPerspective"in e||"OPerspective"in e||"MsPerspective"in e||"perspective"in e}(),flexbox:function(){for(var e=document.createElement("div").style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),n=0;n<t.length;n++)if(t[n]in e)return!0}(),observer:function(){return"MutationObserver"in window||"WebkitMutationObserver"in window}(),passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});window.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:function(){return"ongesturestart"in window}()},plugins:{}};for(var i=(function(){var e=function(e){var t=this,n=0;for(n=0;n<e.length;n++)t[n]=e[n];return t.length=e.length,this},t=function(t,n){var i=[],a=0;if(t&&!n&&t instanceof e)return t;if(t)if("string"==typeof t){var r,s,o=t.trim();if(o.indexOf("<")>=0&&o.indexOf(">")>=0){var l="div";for(0===o.indexOf("<li")&&(l="ul"),0===o.indexOf("<tr")&&(l="tbody"),0!==o.indexOf("<td")&&0!==o.indexOf("<th")||(l="tr"),0===o.indexOf("<tbody")&&(l="table"),0===o.indexOf("<option")&&(l="select"),s=document.createElement(l),s.innerHTML=t,a=0;a<s.childNodes.length;a++)i.push(s.childNodes[a])}else for(r=n||"#"!==t[0]||t.match(/[ .<>:~]/)?(n||document).querySelectorAll(t):[document.getElementById(t.split("#")[1])],a=0;a<r.length;a++)r[a]&&i.push(r[a])}else if(t.nodeType||t===window||t===document)i.push(t);else if(t.length>0&&t[0].nodeType)for(a=0;a<t.length;a++)i.push(t[a]);return new e(i)};return e.prototype={addClass:function(e){if("undefined"==typeof e)return this;for(var t=e.split(" "),n=0;n<t.length;n++)for(var i=0;i<this.length;i++)this[i].classList.add(t[n]);return this},removeClass:function(e){for(var t=e.split(" "),n=0;n<t.length;n++)for(var i=0;i<this.length;i++)this[i].classList.remove(t[n]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),n=0;n<t.length;n++)for(var i=0;i<this.length;i++)this[i].classList.toggle(t[n]);return this},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n++)if(2===arguments.length)this[n].setAttribute(e,t);else for(var i in e)this[n][i]=e[i],this[n].setAttribute(i,e[i]);return this},removeAttr:function(e){for(var t=0;t<this.length;t++)this[t].removeAttribute(e);return this},data:function(e,t){if("undefined"!=typeof t){for(var n=0;n<this.length;n++){var i=this[n];i.dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t}return this}if(this[0]){var a=this[0].getAttribute("data-"+e);return a?a:this[0].dom7ElementDataStorage&&e in this[0].dom7ElementDataStorage?this[0].dom7ElementDataStorage[e]:void 0}},transform:function(e){for(var t=0;t<this.length;t++){var n=this[t].style;n.webkitTransform=n.MsTransform=n.msTransform=n.MozTransform=n.OTransform=n.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t++){var n=this[t].style;n.webkitTransitionDuration=n.MsTransitionDuration=n.msTransitionDuration=n.MozTransitionDuration=n.OTransitionDuration=n.transitionDuration=e}return this},on:function(e,n,i,a){function r(e){var a=e.target;if(t(a).is(n))i.call(a,e);else for(var r=t(a).parents(),s=0;s<r.length;s++)t(r[s]).is(n)&&i.call(r[s],e)}var s,o,l=e.split(" ");for(s=0;s<this.length;s++)if("function"==typeof n||n===!1)for("function"==typeof n&&(i=arguments[1],a=arguments[2]||!1),o=0;o<l.length;o++)this[s].addEventListener(l[o],i,a);else for(o=0;o<l.length;o++)this[s].dom7LiveListeners||(this[s].dom7LiveListeners=[]),this[s].dom7LiveListeners.push({listener:i,liveListener:r}),this[s].addEventListener(l[o],r,a);return this},off:function(e,t,n,i){for(var a=e.split(" "),r=0;r<a.length;r++)for(var s=0;s<this.length;s++)if("function"==typeof t||t===!1)"function"==typeof t&&(n=arguments[1],i=arguments[2]||!1),this[s].removeEventListener(a[r],n,i);else if(this[s].dom7LiveListeners)for(var o=0;o<this[s].dom7LiveListeners.length;o++)this[s].dom7LiveListeners[o].listener===n&&this[s].removeEventListener(a[r],this[s].dom7LiveListeners[o].liveListener,i);return this},once:function(e,t,n,i){function a(s){n(s),r.off(e,t,a,i)}var r=this;"function"==typeof t&&(t=!1,n=arguments[1],i=arguments[2]),r.on(e,t,a,i)},trigger:function(e,t){for(var n=0;n<this.length;n++){var i;try{i=new window.CustomEvent(e,{detail:t,bubbles:!0,cancelable:!0})}catch(n){i=document.createEvent("Event"),i.initEvent(e,!0,!0),i.detail=t}this[n].dispatchEvent(i)}return this},transitionEnd:function(e){function t(r){if(r.target===this)for(e.call(this,r),n=0;n<i.length;n++)a.off(i[n],t)}var n,i=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],a=this;if(e)for(n=0;n<i.length;n++)a.on(i[n],t);return this},width:function(){return this[0]===window?window.innerWidth:this.length>0?parseFloat(this.css("width")):null},outerWidth:function(e){return this.length>0?e?this[0].offsetWidth+parseFloat(this.css("margin-right"))+parseFloat(this.css("margin-left")):this[0].offsetWidth:null},height:function(){return this[0]===window?window.innerHeight:this.length>0?parseFloat(this.css("height")):null},outerHeight:function(e){return this.length>0?e?this[0].offsetHeight+parseFloat(this.css("margin-top"))+parseFloat(this.css("margin-bottom")):this[0].offsetHeight:null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),n=document.body,i=e.clientTop||n.clientTop||0,a=e.clientLeft||n.clientLeft||0,r=window.pageYOffset||e.scrollTop,s=window.pageXOffset||e.scrollLeft;return{top:t.top+r-i,left:t.left+s-a}}return null},css:function(e,t){var n;if(1===arguments.length){if("string"!=typeof e){for(n=0;n<this.length;n++)for(var i in e)this[n].style[i]=e[i];return this}if(this[0])return window.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(n=0;n<this.length;n++)this[n].style[e]=t;return this}return this},each:function(e){for(var t=0;t<this.length;t++)e.call(this[t],t,this[t]);return this},html:function(e){if("undefined"==typeof e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t++)this[t].innerHTML=e;return this},text:function(e){if("undefined"==typeof e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t++)this[t].textContent=e;return this},is:function(n){if(!this[0])return!1;var i,a;if("string"==typeof n){var r=this[0];if(r===document)return n===document;if(r===window)return n===window;if(r.matches)return r.matches(n);if(r.webkitMatchesSelector)return r.webkitMatchesSelector(n);if(r.mozMatchesSelector)return r.mozMatchesSelector(n);if(r.msMatchesSelector)return r.msMatchesSelector(n);for(i=t(n),a=0;a<i.length;a++)if(i[a]===this[0])return!0;return!1}if(n===document)return this[0]===document;if(n===window)return this[0]===window;if(n.nodeType||n instanceof e){for(i=n.nodeType?[n]:n,a=0;a<i.length;a++)if(i[a]===this[0])return!0;return!1}return!1},index:function(){if(this[0]){for(var e=this[0],t=0;null!==(e=e.previousSibling);)1===e.nodeType&&t++;return t}},eq:function(t){if("undefined"==typeof t)return this;var n,i=this.length;return t>i-1?new e([]):t<0?(n=i+t,new e(n<0?[]:[this[n]])):new e([this[t]])},append:function(t){var n,i;for(n=0;n<this.length;n++)if("string"==typeof t){var a=document.createElement("div");for(a.innerHTML=t;a.firstChild;)this[n].appendChild(a.firstChild)}else if(t instanceof e)for(i=0;i<t.length;i++)this[n].appendChild(t[i]);else this[n].appendChild(t);return this},prepend:function(t){var n,i;for(n=0;n<this.length;n++)if("string"==typeof t){var a=document.createElement("div");for(a.innerHTML=t,i=a.childNodes.length-1;i>=0;i--)this[n].insertBefore(a.childNodes[i],this[n].childNodes[0])}else if(t instanceof e)for(i=0;i<t.length;i++)this[n].insertBefore(t[i],this[n].childNodes[0]);else this[n].insertBefore(t,this[n].childNodes[0]);return this},insertBefore:function(e){for(var n=t(e),i=0;i<this.length;i++)if(1===n.length)n[0].parentNode.insertBefore(this[i],n[0]);else if(n.length>1)for(var a=0;a<n.length;a++)n[a].parentNode.insertBefore(this[i].cloneNode(!0),n[a])},insertAfter:function(e){for(var n=t(e),i=0;i<this.length;i++)if(1===n.length)n[0].parentNode.insertBefore(this[i],n[0].nextSibling);else if(n.length>1)for(var a=0;a<n.length;a++)n[a].parentNode.insertBefore(this[i].cloneNode(!0),n[a].nextSibling)},next:function(n){return new e(this.length>0?n?this[0].nextElementSibling&&t(this[0].nextElementSibling).is(n)?[this[0].nextElementSibling]:[]:this[0].nextElementSibling?[this[0].nextElementSibling]:[]:[])},nextAll:function(n){var i=[],a=this[0];if(!a)return new e([]);for(;a.nextElementSibling;){var r=a.nextElementSibling;n?t(r).is(n)&&i.push(r):i.push(r),a=r}return new e(i)},prev:function(n){return new e(this.length>0?n?this[0].previousElementSibling&&t(this[0].previousElementSibling).is(n)?[this[0].previousElementSibling]:[]:this[0].previousElementSibling?[this[0].previousElementSibling]:[]:[])},prevAll:function(n){var i=[],a=this[0];if(!a)return new e([]);for(;a.previousElementSibling;){var r=a.previousElementSibling;n?t(r).is(n)&&i.push(r):i.push(r),a=r}return new e(i)},parent:function(e){for(var n=[],i=0;i<this.length;i++)e?t(this[i].parentNode).is(e)&&n.push(this[i].parentNode):n.push(this[i].parentNode);return t(t.unique(n))},parents:function(e){for(var n=[],i=0;i<this.length;i++)for(var a=this[i].parentNode;a;)e?t(a).is(e)&&n.push(a):n.push(a),a=a.parentNode;return t(t.unique(n))},find:function(t){for(var n=[],i=0;i<this.length;i++)for(var a=this[i].querySelectorAll(t),r=0;r<a.length;r++)n.push(a[r]);return new e(n)},children:function(n){for(var i=[],a=0;a<this.length;a++)for(var r=this[a].childNodes,s=0;s<r.length;s++)n?1===r[s].nodeType&&t(r[s]).is(n)&&i.push(r[s]):1===r[s].nodeType&&i.push(r[s]);return new e(t.unique(i))},remove:function(){for(var e=0;e<this.length;e++)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){var e,n,i=this;for(e=0;e<arguments.length;e++){var a=t(arguments[e]);for(n=0;n<a.length;n++)i[i.length]=a[n],i.length++}return i}},t.fn=e.prototype,t.unique=function(e){for(var t=[],n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t},t}()),a=["jQuery","Zepto","Dom7"],r=0;r<a.length;r++)window[a[r]]&&e(window[a[r]]);var s;s="undefined"==typeof i?window.Dom7||window.Zepto||window.jQuery:i,s&&("transitionEnd"in s.fn||(s.fn.transitionEnd=function(e){function t(r){if(r.target===this)for(e.call(this,r),n=0;n<i.length;n++)a.off(i[n],t)}var n,i=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],a=this;if(e)for(n=0;n<i.length;n++)a.on(i[n],t);return this}),"transform"in s.fn||(s.fn.transform=function(e){for(var t=0;t<this.length;t++){var n=this[t].style;n.webkitTransform=n.MsTransform=n.msTransform=n.MozTransform=n.OTransform=n.transform=e}return this}),"transition"in s.fn||(s.fn.transition=function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t++){var n=this[t].style;n.webkitTransitionDuration=n.MsTransitionDuration=n.msTransitionDuration=n.MozTransitionDuration=n.OTransitionDuration=n.transitionDuration=e}return this}),"outerWidth"in s.fn||(s.fn.outerWidth=function(e){return this.length>0?e?this[0].offsetWidth+parseFloat(this.css("margin-right"))+parseFloat(this.css("margin-left")):this[0].offsetWidth:null})),window.Swiper=n}(),"undefined"!=typeof module?module.exports=window.Swiper:"function"==typeof define&&define.amd&&define([],function(){"use strict";return window.Swiper})}),function(e){e.fn.viewportChecker=function(t){var n={classToAdd:"visible",offset:100,callbackFunction:function(e){}};e.extend(n,t);var i=this,a=e(window).height();this.checkElements=function(){var t=navigator.userAgent.toLowerCase().indexOf("webkit")!=-1?"body":"html",r=e(t).scrollTop(),s=r+a;i.each(function(){var t=e(this);if(!t.hasClass(n.classToAdd)){var i=Math.round(t.offset().top)+n.offset,a=i+t.height();i<s&&a>r&&(t.addClass(n.classToAdd),n.callbackFunction(t))}})},e(window).scroll(this.checkElements),this.checkElements(),e(window).resize(function(e){a=e.currentTarget.innerHeight})}}(jQuery),jQuery(document).ready(function(){jQuery(".post1").addClass("hidden1").viewportChecker({classToAdd:"visible animated bounceInLeft",offset:100}),jQuery(".post2").addClass("hidden1").viewportChecker({classToAdd:"visible animated bounceInRight",offset:100}),jQuery(".post3").addClass("hidden1").viewportChecker({classToAdd:"visible animated bounceInUp",offset:100}),jQuery(".post4").addClass("hidden1").viewportChecker({classToAdd:"visible animated fadeInDown",offset:100})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
